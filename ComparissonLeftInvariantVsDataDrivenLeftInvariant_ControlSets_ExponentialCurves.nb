(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    579114,      12919]
NotebookOptionsPosition[    553640,      12516]
NotebookOutlinePosition[    560980,      12667]
CellTagsIndexPosition[    560937,      12664]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Note: this notebook does not finish running in Mathematica 13.0 (due to an \
update, the multiscale vesselness filter does not end its computations within \
a reasonable amount of time. Therefore, I advise you to use Mathematica 12.3 \
instead).\
\>", "Text",
 CellChangeTimes->{{3.8515866437597847`*^9, 
  3.8515867114763355`*^9}},ExpressionUUID->"9dd82315-bb50-4063-9c7f-\
bb21af13c9f0"],

Cell["\<\
If the tracking in Python is not initialized correctly (see Functions -> Fast \
Marching -> Fast Marching Functions), uncomment the first line in this \
section.\
\>", "Text",
 CellChangeTimes->{{3.8718356206302605`*^9, 3.871835621719349*^9}, {
  3.871835670593629*^9, 3.871835673478574*^9}, {3.8722418697148314`*^9, 
  3.872241872050005*^9}},ExpressionUUID->"499f0e6b-0979-4cbe-a1d4-\
73b5fb239c3e"],

Cell[CellGroupData[{

Cell["Tracking of Single Vessels", "Title",
 CellChangeTimes->{{3.872139209331336*^9, 
  3.8721392134103527`*^9}},ExpressionUUID->"2ae47f0c-5509-454d-87ad-\
e6a91c53227a"],

Cell[CellGroupData[{

Cell["Functions", "Chapter",
 CellChangeTimes->{{3.8721392154920187`*^9, 
  3.8721392165179167`*^9}},ExpressionUUID->"8b7f47a5-edfc-427a-83c4-\
3fee8b3c77a2"],

Cell[CellGroupData[{

Cell["General routines", "Section",
 CellChangeTimes->{{3.8721398972810864`*^9, 
  3.8721398992251663`*^9}},ExpressionUUID->"27348178-5fe2-4e3b-be89-\
5f2a13bd6751"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Converts", " ", "image", " ", "coordinates", " ", "to", " ", "graphics", 
    " ", "coordinates", " ", "using", " ", "image", " ", "dimensions"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"imageToGraphicsCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "imOrImDim", "]"}], "\[Equal]", "2"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "imOrImDim", "]"}], "\[Equal]", "2"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ydim", ",", "xdim"}], "}"}], "=", "imOrImDim"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ydim", ",", "xdim"}], "}"}], "=", 
          RowBox[{"Dimensions", "[", "imOrImDim", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"ydim", "+", "1", "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "-", 
           RowBox[{"1", "/", "2"}]}], "&"}], ",", "coordinates", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Depth", "[", "coordinates", "]"}], "-", "2"}], "}"}]}], 
        "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LineImageCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"imageToGraphicsCoordinates", "[", 
        RowBox[{"imOrImDim", ",", "coordinates"}], "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "conversion", " ", "from", " ", "discrete", " ", "to", " ", "continuous", 
     " ", "angles", " ", "and", " ", "vice", " ", "versa"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"discreteToFM", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]d_", ",", "x_", ",", "y_"}], "}"}], ",", "No_"}], 
      "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]d", "-", "1"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "/", "No"}], ")"}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FMtoDiscret", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], ",", "No_"}], 
     "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"No", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}]}], ")"}], "*", "\[Theta]"}], "+", 
       "1"}], ",", "x", ",", "y"}], "}"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.872139936538124*^9, 3.872139986623394*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c2daf8b1-18d4-4962-84b8-d28bb86385ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data-Driven Frame (Gauge Frame)", "Section",
 CellChangeTimes->{{3.872139244254274*^9, 
  3.872139249483497*^9}},ExpressionUUID->"5529fa92-3844-43d6-9353-\
363e6a442d91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "LieAnalysis`"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7528222349194837`*^9, 3.7528222379231224`*^9}, {
  3.7528281542879972`*^9, 3.752828156156088*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"04ae6555-7343-4d24-a41c-b6ba8ac89786"],

Cell[CellGroupData[{

Cell["General subroutines", "Subsection",
 CellChangeTimes->{{3.7981975496898785`*^9, 
  3.798197552641507*^9}},ExpressionUUID->"dc946f46-44a0-4907-8893-\
39e7c75d2827"],

Cell["\<\
Transform Hessian matrix from left invariant frame to a gauge frame.\
\>", "Text",
 CellChangeTimes->{{3.804766264675982*^9, 
  3.8047663100809283`*^9}},ExpressionUUID->"0034c5e3-9bdb-4259-bfbc-\
2f1f26a52d1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HessianToGaugeFrame", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tensor", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"gaugeFrame", ",", "_Real", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"gaugeFrame", "\[Transpose]"}], ".", "tensor", ".", 
      "gaugeFrame"}], ",", 
     RowBox[{"RuntimeAttributes", "\[Rule]", 
      RowBox[{"{", "Listable", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.797747996341299*^9, 3.7977479988778353`*^9}, {
  3.81036134950132*^9, 3.810361350810033*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9c25103f-7af3-4a9d-85ac-c2616824b802"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gauge Frame", "Subsection",
 CellChangeTimes->{{3.7981975584821453`*^9, 3.798197560986161*^9}, {
  3.815297353754456*^9, 
  3.815297355927987*^9}},ExpressionUUID->"2e5616d1-4d34-4d77-a212-\
8f956fba68eb"],

Cell["\<\
Returns a matrix field gf that contains the coefficients of the gauge frame \
s.t. \
\>", "Text",
 CellChangeTimes->{{3.8047664659601326`*^9, 3.804766501943779*^9}, {
  3.8047665655836535`*^9, 
  3.804766611596015*^9}},ExpressionUUID->"b0443197-75bd-4787-9ab8-\
f6775b214181"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          SubscriptBox["\[ScriptCapitalB]", "i"], "=", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "3"], 
           RowBox[{
            RowBox[{"gf", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
            SubscriptBox["\[ScriptCapitalA]", "j"]}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{"1", "  ", "spatial"}]}], ",", " ", 
       RowBox[{"j", "=", 
        RowBox[{"2", " ", "orthogonal", " ", "spatial"}]}], ",", " ", 
       RowBox[{"j", "=", 
        RowBox[{"3", " ", "angular"}]}]}], "\[IndentingNewLine]", 
      RowBox[{
      "gf", " ", "is", " ", "a", "  ", "list", " ", "that", " ", "is", " ", 
       "output", " ", "of", " ", "the", " ", "function", " ", "below"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "Output", " ", "is", " ", "an", " ", "array", " ", "with", " ", 
        "entries", " ", "Nx"}], ",", "Ny", ",", "N\[Theta]", ",", " ", "3", 
       ",", "3"}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"197f20e2-26db-497d-b2b2-1850d74edd4c"]], \
"Text",
 CellChangeTimes->{{3.8047666205768347`*^9, 3.804766714435834*^9}, {
  3.8049112336080775`*^9, 3.8049113705671015`*^9}, {3.804911444995697*^9, 
  3.8049114519119434`*^9}},ExpressionUUID->"43f15f56-95c5-4a7c-93a5-\
8fe10c0857ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGaugeFrame", "[", 
   RowBox[{
   "os_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]sHess_", ",", 
    "\[Sigma]aHess_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "H", ",", "M", ",", "A", ",", "B1", ",", "\[Chi]", ",", "\[Nu]", ",", 
      "B2", ",", "B3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"os", "=", 
       RowBox[{"ObjPositionOrientationData", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Data\>\"", "\[Rule]", "osData"}], ",", 
          RowBox[{"\"\<Symmetry\>\"", "\[Rule]", "\[Pi]"}], ",", " ", 
          RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
          RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
          RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
        "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"os", ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]sHess", ",", "\[Sigma]aHess"}], "}"}], ",", 
         "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"H", "/", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "H", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"blur", " ", "the", " ", "Hessian", " ", "field"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", "=!=", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", " ", "=", " ", 
         RowBox[{"LieAnalysis`Common`ExternalRegularization", "[", 
          RowBox[{"H", ",", " ", 
           RowBox[{"os", "[", "\"\<FullOrientationList\>\"", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "M"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "\[Xi]"], ",", 
         FractionBox["\[Zeta]", "\[Xi]"], ",", "1"}], "}"}], "]"}]}], ";", 
     "  ", 
     RowBox[{"(*", 
      RowBox[{
      "Bekijken", " ", "wat", " ", "verschil", " ", "is", " ", "met", " ", 
       "\[Zeta]", " ", "en", " ", "1"}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{
      "M", " ", "is", " ", "already", " ", "inversed", " ", "compared", " ", 
       "to", " ", "theory"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"solve", " ", "the", " ", "optimization", " ", "problem", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "fit"}], " ", "B1"}], ")"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["M", "2"], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Transpose]"}], ".", 
            RowBox[{"(", 
             SuperscriptBox["M", "2"], ")"}], ".", "#"}], ")"}]}], "&"}], ",",
         "H", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"B1", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Eigenvectors", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Method", "->", "\"\<Direct\>\""}]}], "]"}], 
           "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ")"}], 
         "&"}], ",", "A", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "multiply", " ", "B1", " ", "by", " ", "the", " ", "sign", " ", "of", 
       " ", 
       SubscriptBox[
        RowBox[{"(", "B1", ")"}], "1"], " ", 
       RowBox[{"s", ".", "t", ".", " ", "it"}], " ", "points", " ", "in", " ",
        "the", " ", "same", " ", "direction", " ", "as", " ", "A1"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"B1", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "*", "#"}], "&"}], ",", "B1", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"B1", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "/", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Xi]", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[Xi]", "\[Zeta]"], 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ")"}], "2"]}]]}], "&"}], ",", "B1", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", "normalize", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "obtain", " ", "angles", " ", "representing", " ", "deviation", " ", 
       "of", " ", "horizontality", " ", "and", " ", "curvature"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Chi]", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}], ",", "B1", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Nu]", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ")"}], "2"]}]], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}], ",", "B1", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calculate", " ", "B2"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"B2", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", "#1", "]"}]}], ",", 
           RowBox[{"Cos", "[", "#1", "]"}], ",", "0"}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Chi]", ",", "\[Nu]"}], "}"}], ",", "3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B2", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "/", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Xi]", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[Xi]", "\[Zeta]"], 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ")"}], "2"]}]]}], "&"}], ",", "B2", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", "normalize", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calculate", " ", "B3"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"B3", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", "#1", "]"}]}], 
            RowBox[{"Sin", "[", "#2", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", "#1", "]"}]}], 
            RowBox[{"Sin", "[", "#2", "]"}]}], ",", 
           RowBox[{"Cos", "[", "#2", "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Chi]", ",", "\[Nu]"}], "}"}], ",", "3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B3", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "/", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Xi]", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[Xi]", "\[Zeta]"], 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ")"}], "2"]}]]}], "&"}], ",", "B3", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", "normalize", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"B1", ",", "B2", ",", "B3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}]}], 
       "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.795594079825184*^9, 3.7955940902756176`*^9}, {
   3.7967129709998336`*^9, 3.7967130096306877`*^9}, {3.796713048745922*^9, 
   3.796713110551585*^9}, {3.796721179626305*^9, 3.7967212058095355`*^9}, {
   3.796722814218359*^9, 3.796722824618686*^9}, {3.796726199180425*^9, 
   3.7967262607875443`*^9}, {3.7978542712659044`*^9, 3.797854325865594*^9}, {
   3.7978544749928875`*^9, 3.797854483020919*^9}, {3.7978545349574394`*^9, 
   3.797854537757592*^9}, {3.798525988556734*^9, 3.7985259936128693`*^9}, {
   3.7985260440268364`*^9, 3.7985260492642975`*^9}, {3.7985263482566237`*^9, 
   3.798526585787815*^9}, {3.7985266469529696`*^9, 3.7985267433994265`*^9}, {
   3.7985275215507636`*^9, 3.79852755364509*^9}, {3.798534764278058*^9, 
   3.7985347769904194`*^9}, {3.8047664440342765`*^9, 
   3.8047664597522063`*^9}, {3.8047665040522976`*^9, 3.8047665051093416`*^9}, 
   3.810359730808375*^9, {3.810360349954708*^9, 3.8103604450480375`*^9}, {
   3.810360481045204*^9, 3.8103604881798058`*^9}, {3.8103605707800603`*^9, 
   3.810360607244115*^9}, {3.8103622708140125`*^9, 3.8103622892819376`*^9}, 
   3.810365174859542*^9, {3.8117572325627327`*^9, 3.811757239936776*^9}, 
   3.811759623952338*^9, 3.8152072083391733`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"02a6392f-8e99-4909-881f-808893820b78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGaugeFrameNew2", "[", 
   RowBox[{
   "os_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]sHess_", ",", 
    "\[Sigma]aHess_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "H", ",", "M", ",", "A", ",", "B1", ",", "\[Chi]", ",", "\[Nu]", ",", 
      "B2", ",", "B3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"os", ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]sHess", ",", "\[Sigma]aHess"}], "}"}], ",", 
         "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"H", "/", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "H", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"blur", " ", "the", " ", "Hessian", " ", "field"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", "=!=", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", " ", "=", " ", 
         RowBox[{"LieAnalysis`Common`ExternalRegularization", "[", 
          RowBox[{"H", ",", " ", 
           RowBox[{"os", "[", "\"\<FullOrientationList\>\"", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Dimensions", "[", "H", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "H", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8491814230048704`*^9, 3.8491814591008077`*^9}, {
   3.8491818422529297`*^9, 3.8491818481129208`*^9}, {3.8491818926205397`*^9, 
   3.849181905954278*^9}, {3.849181948436373*^9, 3.8491819596984415`*^9}, {
   3.849182018104129*^9, 3.8491821035225725`*^9}, {3.8491821734602957`*^9, 
   3.8491822370489483`*^9}, {3.849182271164497*^9, 3.8491823115907297`*^9}, 
   3.8491824035191636`*^9, {3.8491825147614946`*^9, 3.849182516632842*^9}, {
   3.8491829411658163`*^9, 3.849182956102683*^9}, {3.849182995576559*^9, 
   3.849182997319205*^9}, {3.851660146489938*^9, 3.8516601704889083`*^9}, {
   3.851664390605429*^9, 3.8516644152154837`*^9}, {3.851664471412835*^9, 
   3.851664494312326*^9}, {3.8721400834381504`*^9, 3.8721400865296745`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"17cbbd94-5eb0-46c4-9297-30aaca444dda"]
}, Closed]],

Cell[CellGroupData[{

Cell["Iterated stabilization", "Subsection",
 CellChangeTimes->{{3.7981975822749453`*^9, 
  3.7981975905938983`*^9}},ExpressionUUID->"b860dd22-2eef-4b64-af5d-\
3e5753b1eb1e"],

Cell["\<\
Iteratively fits gauge frames to (the data of) an orientation score. Returns \
the final gauge frame and corresponding orientation confidence.\
\>", "Text",
 CellChangeTimes->{{3.804766777968708*^9, 
  3.804766879301859*^9}},ExpressionUUID->"017d78fa-c8b5-4350-b57a-\
2c41d73dc72a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StabilizeGFandOC", "[", 
   RowBox[{
   "U_", ",", "iterations_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", 
    "\[Sigma]s_", ",", "\[Sigma]a_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "obj", ",", "gf", ",", "hess", ",", "hessLIFscaled", ",", "hessGf", ",", 
      "oc", ",", "i", ",", "M"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"oc", "=", "U"}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "\[Xi]"], ",", 
         FractionBox["\[Zeta]", "\[Xi]"], ",", "1"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"i", "<", "iterations"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"obj", "=", 
         RowBox[{"ObjPositionOrientationData", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Data\>\"", "\[Rule]", "oc"}], ",", 
            RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
             RowBox[{"2", "\[Pi]"}]}], ",", " ", 
            RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
            RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
            RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
          "]"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "Important", " ", "for", " ", "subsequent", " ", "functions", " ", 
          "we", " ", "need", " ", "object", " ", "structure", " ", 
          "\"\<Obl....Data\>\"", " ", "not", " ", "just", " ", "an", " ", 
          "array"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"gf", "=", 
         RowBox[{"CalcGaugeFrame", "[", 
          RowBox[{
          "obj", ",", "\[Xi]", ",", "\[Zeta]", ",", "\[Sigma]s", ",", 
           "\[Sigma]a"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hess", " ", "=", " ", 
         RowBox[{
          RowBox[{"OrientationScoreTensor", "[", 
           RowBox[{"obj", ",", " ", 
            RowBox[{"{", 
             RowBox[{"\[Sigma]s", ",", "\[Sigma]a"}], "}"}], ",", " ", 
            "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"hessLIFscaled", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"M", ".", "#", ".", "M"}], "&"}], ",", "hess", ",", 
           RowBox[{"{", "3", "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "converting", " ", "the", " ", "Hessian", " ", "to", " ", "the", " ",
           "new", " ", "LIF", " ", "frame"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"hessGf", " ", "=", " ", 
         RowBox[{"HessianToGaugeFrame", "[", 
          RowBox[{"hessLIFscaled", ",", " ", "gf"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oc", " ", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"hessGf", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
             "\[RightDoubleBracket]"}], "+", 
            RowBox[{"hessGf", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "All", ",", "3", ",", "3"}], 
             "\[RightDoubleBracket]"}]}], ")"}]}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"B22", "+", "B33"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"oc", "=", 
         RowBox[{"Clip", "[", 
          RowBox[{"oc", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oc", "=", 
         RowBox[{"oc", "/", 
          RowBox[{"Max", "[", "oc", "]"}]}]}], ";"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"gf", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           FractionBox["#", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                ")"}], "2"]}]]], "&"}], ",", "gf", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
      RowBox[{"(*", "normalize", "*)"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"gf", ",", "oc"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.79819759173936*^9, 3.798197592897605*^9}, 
   3.7981981452287536`*^9, {3.798273385511506*^9, 3.798273387925391*^9}, {
   3.8047667920152693`*^9, 3.804766796629775*^9}, {3.8049119151574125`*^9, 
   3.8049119797522926`*^9}, {3.8103651333461733`*^9, 
   3.8103651417281766`*^9}, {3.810365194304583*^9, 3.8103651954501257`*^9}, {
   3.810365449844298*^9, 3.8103654935449944`*^9}, {3.810365558728485*^9, 
   3.8103656737436714`*^9}, {3.8103660255606594`*^9, 3.810366027254305*^9}, {
   3.810366236495502*^9, 3.810366240708493*^9}, {3.8103664330589113`*^9, 
   3.8103664535473022`*^9}, {3.8103669187158637`*^9, 3.8103669231243*^9}, {
   3.810373226766035*^9, 3.810373227303585*^9}, {3.8116516509879165`*^9, 
   3.8116516527033954`*^9}, {3.811668931557144*^9, 3.811668936868536*^9}, 
   3.811679351400089*^9, {3.811736680426016*^9, 3.8117366867918253`*^9}, {
   3.8117370383554773`*^9, 3.8117370473176394`*^9}, {3.8117371260120964`*^9, 
   3.811737127366505*^9}, 3.811737229386094*^9, 3.811838838978099*^9, {
   3.815206234559731*^9, 3.815206242765772*^9}, {3.8152063289141006`*^9, 
   3.8152063301486955`*^9}, {3.815219502794548*^9, 3.8152195029371667`*^9}, {
   3.815219851496524*^9, 3.81521985499916*^9}, {3.8152198891733646`*^9, 
   3.815219900558913*^9}, {3.8152199998806734`*^9, 3.8152200607484045`*^9}, {
   3.8152201321949205`*^9, 3.8152201655575905`*^9}, {3.815220283312336*^9, 
   3.8152202869549766`*^9}, 3.815220342644933*^9, {3.815285575450711*^9, 
   3.8152855957802005`*^9}, {3.815286049507428*^9, 3.815286052480757*^9}, {
   3.8197149214370995`*^9, 3.819714924043038*^9}, 3.8197149726943855`*^9, {
   3.819715021284363*^9, 3.8197150328262944`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"35279bcb-dabf-45a4-9d3d-49b03062565f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cost Function", "Section",
 CellChangeTimes->{{3.871371313477089*^9, 3.8713713230924745`*^9}, 
   3.8713744994680367`*^9},ExpressionUUID->"05c94f35-2d6f-4117-9714-\
347fbafb5beb"],

Cell[CellGroupData[{

Cell["Single Scale Vesselness Filter", "Subsection",
 CellChangeTimes->{{3.8316344807809677`*^9, 3.831634483141035*^9}, {
  3.8713757292638564`*^9, 3.871375737736952*^9}, {3.8713757708660736`*^9, 
  3.8713757848739877`*^9}},ExpressionUUID->"31432934-4082-4148-8c18-\
312af627e9e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunctionVesselnessFiltering", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cost", ",", "H", ",", "Q", ",", "S", ",", "R", ",", "B11", ",", "B22", 
      ",", "obj", ",", "oc", ",", 
      RowBox[{"\[Sigma]1", "=", "0.5"}], ",", "\[Sigma]2", ",", "Qgreater0", 
      ",", "M", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
      "c", ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"0.75", "/", "\[Sigma]s"}]}], ",", "Hess"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"calculate", " ", "the", " ", "Hessian"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"obj", "=", 
      RowBox[{"ObjPositionOrientationData", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", "U"}], ",", 
         RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
          RowBox[{"2", "\[Pi]"}]}], ",", " ", 
         RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"obj", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5", "*", 
            SuperscriptBox["\[Sigma]s", "2"]}], ",", 
           RowBox[{"0.5", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Beta]", "*", "\[Sigma]s"}], ")"}], "2"]}]}], "}"}], 
         ",", "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "M"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "\[Xi]"], ",", 
         FractionBox["\[Zeta]", "\[Xi]"], ",", "1"}], "}"}], "]"}]}], ";", 
     "  ", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Hess", "=", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ".", "M"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}], "*", "H"}]}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Hess", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"M", ".", "#", ".", "M"}], "&"}], ",", "H", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "variables", " ", "depending", " ", "on", " ", "the", 
       " ", "method", " ", "that", " ", "is", " ", "considered"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "==", "\"\<LIF\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]1", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "1", ",", "1"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q", "=", "c"}], ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{"convexity", " ", "criterion"}], "*)"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Lambda]3", ",", "\[Lambda]2", ",", "\[Lambda]1"}], "}"}],
          "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Eigenvalues", "[", 
               RowBox[{"M", ".", "M", ".", 
                RowBox[{"Transpose", "[", "#", "]"}], ".", "M", ".", "M", ".",
                 "#"}], "]"}], "&"}], ",", "H", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"0.5", "*", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "+", "\[Lambda]3"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Q", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}]}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"convexity", " ", "criterion"}], "*)"}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "measures", " ", "that", " ", "are", " ", "used", " ",
        "when", " ", "calculating", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{
       SuperscriptBox["\[Lambda]1", "2"], "+", 
       SuperscriptBox["c", "2"]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"structure", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"\[Lambda]1", "/", "c"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"anisotropy", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]2", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}], " ", "ensures", " ", "that", 
       " ", "the", " ", "method", " ", "is", " ", "scaling", " ", 
       "invariant"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "the", " ", "vesselness", " ", "at", " ", "ALL", " ", 
       "locations", " ", "and", " ", "orientations"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", "2"]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]1", "2"]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "S"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Sigma]2"}], ")"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Selection", " ", "criterion", " ", "on", " ", "convexity"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Qgreater0", "=", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", "Q"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Boole", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], ",", "Q", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "*)"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Vesselness", " ", "at", " ", "locations", " ", "that", " ", "meet", 
       " ", "the", " ", "convexity", " ", "criterion"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"cost", "*", "Qgreater0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831700621055113*^9, 3.83170071527347*^9}, {
   3.831700747539089*^9, 3.8317007766656637`*^9}, {3.8317008204573913`*^9, 
   3.831700862001667*^9}, {3.831700892710336*^9, 3.831700970456744*^9}, {
   3.8317010154423776`*^9, 3.831701059479223*^9}, {3.8317013033704925`*^9, 
   3.8317013312815733`*^9}, {3.831701406870053*^9, 3.831701479619607*^9}, 
   3.831702376776008*^9, {3.831702481275221*^9, 3.831702483945857*^9}, {
   3.8317025887621565`*^9, 3.8317025903591995`*^9}, {3.8317027497648787`*^9, 
   3.831702800763775*^9}, {3.8317033970662265`*^9, 3.831703398700817*^9}, {
   3.8317035132347107`*^9, 3.8317035667713284`*^9}, 3.831703623390505*^9, {
   3.831703687980508*^9, 3.831703755108315*^9}, 3.8317040310380526`*^9, {
   3.831704503596468*^9, 3.8317045060547113`*^9}, {3.8317091510973673`*^9, 
   3.831709151348405*^9}, {3.831709700050008*^9, 3.8317097006454115`*^9}, {
   3.831709769465223*^9, 3.831709778053362*^9}, {3.8317155312170706`*^9, 
   3.8317155333119874`*^9}, {3.8317161114464207`*^9, 3.831716113460864*^9}, {
   3.8317165663062634`*^9, 3.831716601884225*^9}, {3.8317166341631827`*^9, 
   3.8317166662136497`*^9}, {3.831716698452117*^9, 3.8317168843813276`*^9}, {
   3.8317170307114677`*^9, 3.8317170337875433`*^9}, {3.8317171661180487`*^9, 
   3.8317171824213257`*^9}, 3.8317196038493547`*^9, {3.8317198439178524`*^9, 
   3.831719846461735*^9}, {3.831720090946414*^9, 3.831720107271838*^9}, {
   3.83180597103368*^9, 3.831805975131879*^9}, 3.8318066757759495`*^9, 
   3.831807160890427*^9, {3.831807535208869*^9, 3.83180753950561*^9}, 
   3.831816444761509*^9, {3.8318769075046463`*^9, 3.831876924351859*^9}, {
   3.8318769679894247`*^9, 3.831876969530199*^9}, 3.8318770753873186`*^9, {
   3.831877380489173*^9, 3.831877416462142*^9}, 3.8318776429750586`*^9, {
   3.831877724862707*^9, 3.831877724981058*^9}, 3.831877863831921*^9, {
   3.831877987522004*^9, 3.831877987771125*^9}, 3.8318780977397194`*^9, 
   3.831878680963387*^9, {3.831878755740961*^9, 3.831878755799967*^9}, 
   3.8318792938839674`*^9, {3.8318798792499523`*^9, 3.831879879727828*^9}, 
   3.8318918349459953`*^9, 3.831892122586246*^9, {3.8318924298905687`*^9, 
   3.831892429990985*^9}, 3.831893137371763*^9, {3.831893508108944*^9, 
   3.8318935086064987`*^9}, {3.8318977629378843`*^9, 3.831897763043951*^9}, 
   3.8319619837836237`*^9, {3.831962015095559*^9, 3.8319620211980247`*^9}, {
   3.832039708432623*^9, 3.832039771838543*^9}, {3.8320399649595394`*^9, 
   3.832039967207567*^9}, {3.8320400626702003`*^9, 3.832040090979965*^9}, {
   3.832040147331139*^9, 3.83204021589231*^9}, {3.8320404626864543`*^9, 
   3.83204047811031*^9}, {3.8320405304053903`*^9, 3.832040532371476*^9}, {
   3.8320406329553537`*^9, 3.832040639388233*^9}, {3.8320406794126854`*^9, 
   3.8320406815172057`*^9}, {3.8320415723932037`*^9, 
   3.8320417365714226`*^9}, {3.8320418581849036`*^9, 3.832041858268427*^9}, {
   3.8320419615836406`*^9, 3.83204197356218*^9}, {3.8320422023049603`*^9, 
   3.8320422244985046`*^9}, 3.832043217729306*^9, 3.832043405912733*^9, {
   3.83204354210608*^9, 3.832043544501052*^9}, {3.8320501159262037`*^9, 
   3.83205011599699*^9}, {3.8320877489160194`*^9, 3.8320877502980633`*^9}, 
   3.8320893687909594`*^9, {3.832089922644105*^9, 3.832089923021311*^9}, {
   3.8320920918539553`*^9, 3.832092092656397*^9}, {3.832147657024498*^9, 
   3.8321476779655695`*^9}, {3.832147862083398*^9, 3.83214786842303*^9}, {
   3.8322997317459273`*^9, 3.8322997436680493`*^9}, {3.8466754167767963`*^9, 
   3.8466754214888153`*^9}, 3.8466755327969456`*^9, 3.8466757923554125`*^9, {
   3.8467384136211014`*^9, 3.846738663916294*^9}, {3.8467553051584396`*^9, 
   3.8467553078065615`*^9}, {3.8472525489043355`*^9, 
   3.8472525532853584`*^9}, {3.8472525955539646`*^9, 
   3.8472526036202583`*^9}, {3.8472532930518665`*^9, 
   3.8472532993081465`*^9}, {3.847253682235481*^9, 3.847253690273202*^9}, {
   3.84726643518459*^9, 3.847266452966767*^9}, {3.847270444672587*^9, 
   3.847270446233013*^9}, 3.8472736558816433`*^9, {3.847276058842713*^9, 
   3.8472761159053526`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"35ba28e3-3d15-4e60-86e4-9ad84b7180a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cost", "[", 
   RowBox[{"oc_", ",", "\[Lambda]_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "cost", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cost", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Lambda]", "*", 
          SuperscriptBox["oc", "p"]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ImageAdjust", "[", 
        RowBox[{"Image", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Min", ",", 
           RowBox[{"Rescale", "[", "cost", "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8319618117031293`*^9, 3.8319618838348403`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"30d18482-3c30-46ea-ad48-6c9f34196b18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunction", "[", 
   RowBox[{"oc_", ",", "\[Lambda]_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "cost", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cost", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Lambda]", "*", 
          SuperscriptBox["oc", "p"]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8319618117031293`*^9, 3.8319618838348403`*^9}, {
  3.831998121571029*^9, 3.831998129082103*^9}, {3.831998168905656*^9, 
  3.831998169657459*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"127429e6-dc56-4ffd-81e2-982ed170e3fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Multiscale Vesselness Filter", "Subsection",
 CellChangeTimes->{{3.8467368047953024`*^9, 
  3.8467368118756647`*^9}},ExpressionUUID->"1b6405eb-709d-42fe-842c-\
86bd91672c29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselness", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", 
      "vesselnessfilterNoBoarderErosion2", ",", "liftElevators", ",", 
      "newvesselnessfilter", ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFiltering", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFiltering", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method"}],
           "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], 
        RowBox[{"(*", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Boole", "[", 
             RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
           "vesselnessBoarder", ",", 
           RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarderErosion", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselnessfilterNoBoarder", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Erosion", "[", 
              RowBox[{"#", ",", "0.5", ",", 
               RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}], 
             "&"}], ",", "vesselnessfilterNoBoarder", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "*)"}], " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
        "vesselnessfilterNoBoarderErosion2", "=", 
         "vesselnessfilterNoBoarderErosion"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
            "vesselnessfilterNoBoarderErosion", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}], ";"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                 "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
             "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"liftElevators", "=", 
            RowBox[{"GaussianFilter", "[", 
             RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Combine", " ", "both", " ", "mobility", " ", "functions"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"4", "*", 
                 RowBox[{
                 "Rescale", "[", "vesselnessfilterNoBoarderErosion2", "]"}]}],
                 ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{
                  RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", "3", "}"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion2"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
  3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
  3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
  3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
  3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
  3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.8467383924445486`*^9, 
  3.8467384051500874`*^9}, {3.8472527956174803`*^9, 3.847252804776075*^9}, {
  3.847254715962023*^9, 3.84725477265746*^9}, {3.8472550730271826`*^9, 
  3.8472550948254304`*^9}, {3.8472645825577707`*^9, 3.8472645902415514`*^9}, {
  3.8472648673212476`*^9, 3.8472649626651025`*^9}, {3.8472650190287113`*^9, 
  3.8472650286441393`*^9}, {3.8472761287663803`*^9, 3.8472762743068795`*^9}, {
  3.8479437503598204`*^9, 3.8479437633810444`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"a47cd0b7-24a8-4805-8333-e2b7f04733bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessFilter", "[", "vesselnessfilters_", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sum1", ",", "\[Mu]\[Infinity]", ",", "sum2", ",", "\[Mu]l\[Infinity]", 
      ",", "cost"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "and", 
      " ", "orientation", " ", "by", " ", "taking", " ", "sum", " ", "over", 
      " ", "all", " ", "spatial", " ", "scales"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum1", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"vesselnessfilters", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "vesselnessfilters", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"weights", ".", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"vesselnessfilters", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum1"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Mu]\[Infinity]", "=", 
      RowBox[{"Max", "[", "sum1", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Rescale", " ", "the", " ", "sum1", " ", "by", " ", "dividing", " ", 
       "with", " ", "its", " ", "maximum", " ", "to", " ", "find", " ", "the",
        " ", "cost", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       SuperscriptBox["\[Mu]\[Infinity]", 
        RowBox[{"-", "1"}]], "*", "sum1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cost", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"cost", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", 
         "by", " ", "taking", " ", "sum", " ", "over", " ", "all", " ", 
         "orientations"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"sum2", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"cost", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Dimensions", "[", "cost", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum2"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Mu]l\[Infinity]", "=", 
        RowBox[{"Max", "[", "sum2", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"cost", "=", 
        RowBox[{
         SuperscriptBox["\[Mu]l\[Infinity]", 
          RowBox[{"-", "1"}]], "*", "sum2"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8461351164748793`*^9, 3.846135301233615*^9}, {
  3.8461353918983126`*^9, 3.8461354296469297`*^9}, {3.8461354708019032`*^9, 
  3.84613550183355*^9}, {3.846135565954836*^9, 3.846135585502041*^9}, {
  3.8461356206333733`*^9, 3.846135625324848*^9}, {3.8461365925473847`*^9, 
  3.8461366255417967`*^9}, {3.8461366613125324`*^9, 3.8461366681133223`*^9}, {
  3.8461380233321896`*^9, 3.8461380346543207`*^9}, {3.84658043492728*^9, 
  3.8465804362968216`*^9}, {3.846761981543815*^9, 3.8467619923206415`*^9}, {
  3.846762380572624*^9, 3.8467624741657667`*^9}, {3.84676257915926*^9, 
  3.8467625894172935`*^9}, {3.846762774042492*^9, 3.8467627925348787`*^9}, {
  3.8472751267320757`*^9, 3.847275212905927*^9}, {3.847276618866034*^9, 
  3.847276871448764*^9}, {3.847276925336969*^9, 3.847276930574594*^9}, {
  3.847277021172058*^9, 3.847277055403304*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"7a559835-ad9d-4792-af6b-1d0e4bca6fc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessFilter2D", "[", "vesselnessfilters_", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sum1", ",", "\[Mu]\[Infinity]", ",", "sum2", ",", "\[Mu]l\[Infinity]", 
      ",", "cost"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "and", 
      " ", "orientation", " ", "by", " ", "taking", " ", "sum", " ", "over", 
      " ", "all", " ", "spatial", " ", "scales"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum1", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"vesselnessfilters", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "vesselnessfilters", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"weights", ".", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"vesselnessfilters", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum1"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Mu]\[Infinity]", "=", 
      RowBox[{"Max", "[", "sum1", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Rescale", " ", "the", " ", "sum1", " ", "by", " ", "dividing", " ", 
       "with", " ", "its", " ", "maximum", " ", "to", " ", "find", " ", "the",
        " ", "cost", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       SuperscriptBox["\[Mu]\[Infinity]", 
        RowBox[{"-", "1"}]], "*", "sum1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Putting", " ", "cost", " ", "function", " ", "in", " ", "right", " ", 
       "dimensions"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cost", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "by", 
       " ", "taking", " ", "sum", " ", "over", " ", "all", " ", 
       "orientations"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sum2", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"cost", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "cost", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum2"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Mu]l\[Infinity]", "=", 
      RowBox[{"Max", "[", "sum2", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       SuperscriptBox["\[Mu]l\[Infinity]", 
        RowBox[{"-", "1"}]], "*", "sum2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8461351164748793`*^9, 3.846135301233615*^9}, {
  3.8461353918983126`*^9, 3.8461354296469297`*^9}, {3.8461354708019032`*^9, 
  3.84613550183355*^9}, {3.846135565954836*^9, 3.846135585502041*^9}, {
  3.8461356206333733`*^9, 3.846135625324848*^9}, {3.8461365925473847`*^9, 
  3.8461366255417967`*^9}, {3.8461366613125324`*^9, 3.8461366681133223`*^9}, {
  3.8461380233321896`*^9, 3.8461380346543207`*^9}, {3.84658043492728*^9, 
  3.8465804362968216`*^9}, {3.846761981543815*^9, 3.8467619923206415`*^9}, {
  3.846762380572624*^9, 3.8467624741657667`*^9}, {3.84676257915926*^9, 
  3.8467625894172935`*^9}, {3.846762774042492*^9, 3.8467627925348787`*^9}, {
  3.8472751267320757`*^9, 3.847275212905927*^9}, {3.847276618866034*^9, 
  3.847276871448764*^9}, {3.847276925336969*^9, 3.847276930574594*^9}, {
  3.847277021172058*^9, 3.847277055403304*^9}, {3.8472784934463716`*^9, 
  3.84727851900611*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"19eded98-177c-4d6f-b0a8-ad290de4b64a"]
}, Closed]],

Cell[CellGroupData[{

Cell["External Regularization", "Subsection",
 CellChangeTimes->{{3.846736828118457*^9, 
  3.8467368336747875`*^9}},ExpressionUUID->"b7351762-1479-4425-b75d-\
9e90fb4fa5da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_", 
    ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cost", ",", "H", ",", "Q", ",", "S", ",", "R", ",", "B11", ",", "B22", 
      ",", "obj", ",", "oc", ",", 
      RowBox[{"\[Sigma]1", "=", "0.5"}], ",", "\[Sigma]2", ",", "Qgreater0", 
      ",", "M", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
      "c", ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"0.75", "/", "\[Sigma]s"}]}], ",", "Hess"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"calculate", " ", "the", " ", "Hessian"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"obj", "=", 
      RowBox[{"ObjPositionOrientationData", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", "U"}], ",", 
         RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
          RowBox[{"2", "\[Pi]"}]}], ",", " ", 
         RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"obj", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5", "*", 
            SuperscriptBox["\[Sigma]s", "2"]}], ",", 
           RowBox[{"0.5", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Beta]", "*", "\[Sigma]s"}], ")"}], "2"]}]}], "}"}], 
         ",", "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "M"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "\[Xi]"}], ",", 
         RowBox[{"\[Zeta]", "/", "\[Xi]"}], ",", "1"}], "}"}], "]"}]}], ";", 
     "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", "=!=", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", 
           "proportional", " ", "with", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]s", ",", "\[Sigma]a"}]}]}], ")"}], "?"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", "=", " ", 
         RowBox[{"LieAnalysis`Common`ExternalRegularization", "[", 
          RowBox[{"H", ",", " ", 
           RowBox[{"obj", "[", "\"\<FullOrientationList\>\"", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Hess", "=", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ".", "M"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}], "*", "H"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"M", ".", "#", ".", "M"}], "&"}], ",", "H", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "variables", " ", "depending", " ", "on", " ", "the", 
       " ", "method", " ", "that", " ", "is", " ", "considered"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "==", "\"\<LIF\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]1", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "1", ",", "1"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q", "=", "c"}], ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{"convexity", " ", "criterion"}], "*)"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Lambda]3", ",", "\[Lambda]2", ",", "\[Lambda]1"}], "}"}],
          "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Eigenvalues", "[", 
               RowBox[{"M", ".", "M", ".", 
                RowBox[{"Transpose", "[", "#", "]"}], ".", "M", ".", "M", ".",
                 "#"}], "]"}], "&"}], ",", "H", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"0.5", "*", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "+", "\[Lambda]3"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Q", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}]}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"convexity", " ", "criterion"}], "*)"}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "measures", " ", "that", " ", "are", " ", "used", " ",
        "when", " ", "calculating", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{
       SuperscriptBox["\[Lambda]1", "2"], "+", 
       SuperscriptBox["c", "2"]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"structure", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"\[Lambda]1", "/", "c"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"anisotropy", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]2", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}], " ", "ensures", " ", "that", 
       " ", "the", " ", "method", " ", "is", " ", "scaling", " ", 
       "invariant"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "the", " ", "vesselness", " ", "at", " ", "ALL", " ", 
       "locations", " ", "and", " ", "orientations"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", "2"]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]1", "2"]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "S"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Sigma]2"}], ")"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Selection", " ", "criterion", " ", "on", " ", "convexity"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Qgreater0", "=", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", "Q"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Boole", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], ",", "Q", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "*)"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Vesselness", " ", "at", " ", "locations", " ", "that", " ", "meet", 
       " ", "the", " ", "convexity", " ", "criterion"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"cost", "*", "Qgreater0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831700621055113*^9, 3.83170071527347*^9}, {
   3.831700747539089*^9, 3.8317007766656637`*^9}, {3.8317008204573913`*^9, 
   3.831700862001667*^9}, {3.831700892710336*^9, 3.831700970456744*^9}, {
   3.8317010154423776`*^9, 3.831701059479223*^9}, {3.8317013033704925`*^9, 
   3.8317013312815733`*^9}, {3.831701406870053*^9, 3.831701479619607*^9}, 
   3.831702376776008*^9, {3.831702481275221*^9, 3.831702483945857*^9}, {
   3.8317025887621565`*^9, 3.8317025903591995`*^9}, {3.8317027497648787`*^9, 
   3.831702800763775*^9}, {3.8317033970662265`*^9, 3.831703398700817*^9}, {
   3.8317035132347107`*^9, 3.8317035667713284`*^9}, 3.831703623390505*^9, {
   3.831703687980508*^9, 3.831703755108315*^9}, 3.8317040310380526`*^9, {
   3.831704503596468*^9, 3.8317045060547113`*^9}, {3.8317091510973673`*^9, 
   3.831709151348405*^9}, {3.831709700050008*^9, 3.8317097006454115`*^9}, {
   3.831709769465223*^9, 3.831709778053362*^9}, {3.8317155312170706`*^9, 
   3.8317155333119874`*^9}, {3.8317161114464207`*^9, 3.831716113460864*^9}, {
   3.8317165663062634`*^9, 3.831716601884225*^9}, {3.8317166341631827`*^9, 
   3.8317166662136497`*^9}, {3.831716698452117*^9, 3.8317168843813276`*^9}, {
   3.8317170307114677`*^9, 3.8317170337875433`*^9}, {3.8317171661180487`*^9, 
   3.8317171824213257`*^9}, 3.8317196038493547`*^9, {3.8317198439178524`*^9, 
   3.831719846461735*^9}, {3.831720090946414*^9, 3.831720107271838*^9}, {
   3.83180597103368*^9, 3.831805975131879*^9}, 3.8318066757759495`*^9, 
   3.831807160890427*^9, {3.831807535208869*^9, 3.83180753950561*^9}, 
   3.831816444761509*^9, {3.8318769075046463`*^9, 3.831876924351859*^9}, {
   3.8318769679894247`*^9, 3.831876969530199*^9}, 3.8318770753873186`*^9, {
   3.831877380489173*^9, 3.831877416462142*^9}, 3.8318776429750586`*^9, {
   3.831877724862707*^9, 3.831877724981058*^9}, 3.831877863831921*^9, {
   3.831877987522004*^9, 3.831877987771125*^9}, 3.8318780977397194`*^9, 
   3.831878680963387*^9, {3.831878755740961*^9, 3.831878755799967*^9}, 
   3.8318792938839674`*^9, {3.8318798792499523`*^9, 3.831879879727828*^9}, 
   3.8318918349459953`*^9, 3.831892122586246*^9, {3.8318924298905687`*^9, 
   3.831892429990985*^9}, 3.831893137371763*^9, {3.831893508108944*^9, 
   3.8318935086064987`*^9}, {3.8318977629378843`*^9, 3.831897763043951*^9}, 
   3.8319619837836237`*^9, {3.831962015095559*^9, 3.8319620211980247`*^9}, {
   3.832039708432623*^9, 3.832039771838543*^9}, {3.8320399649595394`*^9, 
   3.832039967207567*^9}, {3.8320400626702003`*^9, 3.832040090979965*^9}, {
   3.832040147331139*^9, 3.83204021589231*^9}, {3.8320404626864543`*^9, 
   3.83204047811031*^9}, {3.8320405304053903`*^9, 3.832040532371476*^9}, {
   3.8320406329553537`*^9, 3.832040639388233*^9}, {3.8320406794126854`*^9, 
   3.8320406815172057`*^9}, {3.8320415723932037`*^9, 
   3.8320417365714226`*^9}, {3.8320418581849036`*^9, 3.832041858268427*^9}, {
   3.8320419615836406`*^9, 3.83204197356218*^9}, {3.8320422023049603`*^9, 
   3.8320422244985046`*^9}, 3.832043217729306*^9, 3.832043405912733*^9, {
   3.83204354210608*^9, 3.832043544501052*^9}, {3.8320501159262037`*^9, 
   3.83205011599699*^9}, {3.8320877489160194`*^9, 3.8320877502980633`*^9}, 
   3.8320893687909594`*^9, {3.832089922644105*^9, 3.832089923021311*^9}, {
   3.8320920918539553`*^9, 3.832092092656397*^9}, {3.832147657024498*^9, 
   3.8321476779655695`*^9}, {3.832147862083398*^9, 3.83214786842303*^9}, {
   3.8322997317459273`*^9, 3.8322997436680493`*^9}, {3.8465775928712397`*^9, 
   3.846577745083552*^9}, {3.8465778557171717`*^9, 3.8465778577551675`*^9}, {
   3.8465786742558002`*^9, 3.84657868367164*^9}, {3.8465788410951853`*^9, 
   3.846578857194363*^9}, {3.846579500498774*^9, 3.846579534540459*^9}, {
   3.8465796324902325`*^9, 3.8465796355829167`*^9}, 3.8465797857096863`*^9, {
   3.8465846164448853`*^9, 3.846584616720894*^9}, {3.846590246345928*^9, 
   3.846590319449998*^9}, 3.846592329832641*^9, {3.84666532669689*^9, 
   3.846665336334193*^9}, {3.8467368598810167`*^9, 3.846736864703286*^9}, {
   3.846736905911895*^9, 3.8467370029116135`*^9}, {3.8467370345126*^9, 
   3.846737077193122*^9}, {3.8467371253042583`*^9, 3.8467371294255247`*^9}, {
   3.8467552673380394`*^9, 3.8467552736122336`*^9}, {3.8467553158993297`*^9, 
   3.84675535142774*^9}, {3.846755429772394*^9, 3.8467554331364737`*^9}, {
   3.84727712879815*^9, 3.8472772027147455`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6466bb50-e25d-444d-8e59-5de976d91c58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtReg", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}], ",", 
    RowBox[{"erosion_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", 
           ",", "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
             "vesselnessBoarder", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], "*", "vesselness"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarderErosion", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselnessfilterNoBoarder", ",", 
           RowBox[{"erosion", "*", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}]}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "lower", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "5"}], ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"vesselnessfilterNoBoarderErosion2", "=", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
             "vesselnessfilterNoBoarderErosion", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
         RowBox[{"(*", 
          RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
   3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
   3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
   3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
   3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
   3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.846578893545618*^9, 
   3.8465789371578035`*^9}, {3.846579069704646*^9, 3.8465790701274323`*^9}, {
   3.846737145534981*^9, 3.846737164629548*^9}, {3.846755598107308*^9, 
   3.8467556087354326`*^9}, {3.846759888042096*^9, 3.846759896286005*^9}, {
   3.8467599385553436`*^9, 3.8467599421542425`*^9}, {3.8467604834169755`*^9, 
   3.8467604851386766`*^9}, {3.8467609263246174`*^9, 3.846760926478567*^9}, {
   3.846761476147117*^9, 3.8467614789751863`*^9}, {3.8468387665957375`*^9, 
   3.8468387816980734`*^9}, {3.8468427788829308`*^9, 
   3.8468427790168743`*^9}, {3.847277220387966*^9, 3.8472773673148804`*^9}, {
   3.8477898596589794`*^9, 3.847789876833465*^9}, {3.8478563017751393`*^9, 
   3.8478563188662643`*^9}, {3.8479662286057787`*^9, 3.847966240197607*^9}, {
   3.8479664567407155`*^9, 3.847966457909107*^9}, {3.847967542490487*^9, 
   3.8479675639557314`*^9}, {3.848039855485445*^9, 3.848039859594449*^9}, 
   3.848120190541051*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"17d616ee-e1aa-4ac0-8bea-8e98a2a23862"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtRegErosion0", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", 
           ",", "\[Sigma]sExt", ",", "\[Sigma]aExt"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
             "vesselnessBoarder", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], "*", "vesselness"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "vesselnessfilterNoBoarderErosion", "=", 
         "vesselnessfilterNoBoarder"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "lower", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "5"}], ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"vesselnessfilterNoBoarderErosion2", "=", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
             "vesselnessfilterNoBoarderErosion", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
         RowBox[{"(*", 
          RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxTtIQlEYAGATEQqHzPKSWRBl0BSRhJBSpzTaNIkeIiRGomZcFxvDIaHE
wsqCHAxReuhUmogOld0k0jBoM8SlGuxGCA3R1PnP8PF1m2n9MpfD4Ugw2KHV
egqnLBLLOrbgtGdvF875kwGYHyw8w8oHTwUeVh+9w7chnaCIP5SGW2FenhWT
ayu98KSm1g97keLvE6/JWshWLoqz+IiTJiddFwvMGYsyAtkivOZL0fCXiCH7
uwaPhecsGpcFwrCQvgtL8LFNKgKX5xsyUvxPX2MWNt1P38A73wy5MrfK68Q3
OaNk9dLjCOzQlcgDVxtuOCOvkqeaX1QT+NBsahT+HTMOafBKr4mssPtm2mMs
cotqFtgodkVFcRZdx4MncP0p3SbHO9OvFOw17+ds+KKez8D1BFWFrZSK3HJZ
stjxhoN1GxzsySe28W+GjyT8D7uY3Fk=
  "],
 CellLabel->"In[25]:=",ExpressionUUID->"585ba197-5612-4f7f-a957-be538121ead0"]
}, Closed]],

Cell[CellGroupData[{

Cell["External Regularization - No boarder", "Subsection",
 CellChangeTimes->{{3.846736828118457*^9, 3.8467368336747875`*^9}, {
  3.847354136324772*^9, 
  3.847354138393787*^9}},ExpressionUUID->"7ce36ea5-c8a6-49de-8150-\
c958450ed9f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtRegNoBoarder", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_", 
    ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselness", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Erosion", "[", 
              RowBox[{"#", ",", 
               RowBox[{"(*", "0.5", "*)"}], "1", ",", 
               RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}], 
             "&"}], ",", "vesselnessfilterNoBoarder", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "*)"}], " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"newvesselnessfilter", "=", "vesselness"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
   3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
   3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
   3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
   3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
   3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.846578893545618*^9, 
   3.8465789371578035`*^9}, {3.846579069704646*^9, 3.8465790701274323`*^9}, {
   3.846737145534981*^9, 3.846737164629548*^9}, {3.846755598107308*^9, 
   3.8467556087354326`*^9}, {3.846759888042096*^9, 3.846759896286005*^9}, {
   3.8467599385553436`*^9, 3.8467599421542425`*^9}, {3.8467604834169755`*^9, 
   3.8467604851386766`*^9}, {3.8467609263246174`*^9, 3.846760926478567*^9}, {
   3.846761476147117*^9, 3.8467614789751863`*^9}, {3.8468387665957375`*^9, 
   3.8468387816980734`*^9}, {3.8468427788829308`*^9, 
   3.8468427790168743`*^9}, {3.847277220387966*^9, 3.8472773673148804`*^9}, {
   3.8473541629695444`*^9, 3.847354195249935*^9}, 3.848040834461649*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"7ae2960a-8e97-465f-87da-f5f03a3da6b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Add lifts to cost function", "Subsection",
 CellChangeTimes->{{3.8468394957920785`*^9, 3.846839497832074*^9}, {
  3.8713756985233936`*^9, 
  3.8713757007370853`*^9}},ExpressionUUID->"56d4099d-6f2f-4c55-8f43-\
1b707235aa0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddLifts", "[", 
   RowBox[{"vesselness_", ",", "seedsIndex_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"liftElevators", ",", "newvesselnessfilter"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"liftElevators", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", "#", ")"}]}]}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";"}], "&"}], ",", "seedsIndex"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"liftElevators", "=", 
      RowBox[{"GaussianFilter", "[", 
       RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Combine", " ", "both", " ", "mobility", " ", "functions"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newvesselnessfilter", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{"Rescale", "[", "vesselness", "]"}]}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newvesselnessfilter", "=", 
      RowBox[{"newvesselnessfilter", "/", 
       RowBox[{"Max", "[", "newvesselnessfilter", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "newvesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8468394992372694`*^9, 3.8468396468033724`*^9}, 
   3.846841208450967*^9, {3.8468420895555043`*^9, 3.846842089834281*^9}, 
   3.8468423468577747`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"ce080c9d-ee05-4963-97c1-b322628921ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rescaling cost function", "Subsection",
 CellChangeTimes->{{3.8479447175456133`*^9, 
  3.8479447288831964`*^9}},ExpressionUUID->"3238a14c-a77a-4a5c-9acc-\
4dd9825d7c82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunction2", "[", 
   RowBox[{"oc_", ",", 
    RowBox[{"{", 
     RowBox[{"g0_", ",", "g1_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cost", ",", "ocg0", ",", "ocg1", ",", "ocg"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ocg0", "=", 
      RowBox[{"oc", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"g0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"g0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "g0", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ocg1", "=", 
      RowBox[{"oc", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"g1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"g1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "g1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ocg", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"ocg1", ",", "ocg0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ocg", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ocg0", "+", "ocg1"}], ")"}], "/", "2"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"Ramp", "[", 
         RowBox[{"oc", "-", "ocg"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"d68660dd-804d-4f74-9da9-6f109cac33f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToContinuousAngle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]d_"}], "}"}], ",", "s\[Theta]_"}],
    "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Theta]d", "-", "1"}], ")"}], "s\[Theta]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToDiscreteAngle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]c_"}], "}"}], ",", "s\[Theta]_"}],
    "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{
     RowBox[{"\[Theta]c", "/", "s\[Theta]"}], "+", "1"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.797068872444806*^9, 3.7970689682551284`*^9}, {
  3.8477709300985203`*^9, 3.847770931063661*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"29878f30-7f3e-45fc-98f4-7c5b297a3bd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddObstaclesCrossings", "[", 
   RowBox[{
   "cost_", ",", "obstacleCenter_", ",", "obstacleWidth_", ",", 
    "obstacleHeight_", ",", "Nx_", ",", 
    RowBox[{"scaling_", ":", "10"}], ",", 
    RowBox[{"grayValueCriteria_", ":", ".8"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newcost", ",", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", ",", 
      "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newcost", "=", "cost"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "obstacleCenter", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xmin", "=", 
         RowBox[{"Round", "[", 
          RowBox[{"Nx", "-", 
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"obstacleHeight", "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xmax", "=", 
         RowBox[{"Round", "[", 
          RowBox[{"Nx", "-", 
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"obstacleHeight", "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ymin", "=", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"obstacleWidth", "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ymax", "=", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
           RowBox[{"obstacleWidth", "/", "2"}]}], "]"}]}], ";", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"{", 
            RowBox[{"xmin", ",", "xmax", ",", "ymin", ",", "ymax"}], "}"}], 
           "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newcost", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"xmin", ";;", "xmax"}], ",", 
            RowBox[{"ymin", ";;", "ymax"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              RowBox[{"cost", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"xmin", ";;", "xmax"}], ",", 
                 RowBox[{"ymin", ";;", "ymax"}]}], "]"}], "]"}], "/", 
              "grayValueCriteria"}], "]"}], "/.", 
            RowBox[{
             RowBox[{"x_", "/;", 
              RowBox[{"x", "==", "1"}]}], "\[Rule]", "scaling"}]}], ")"}], 
          "*", "grayValueCriteria"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "newcost", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8582335225335665`*^9, 3.8582336216298285`*^9}, {
   3.8582336542935967`*^9, 3.858233744879365*^9}, {3.858233940013635*^9, 
   3.8582340294253044`*^9}, {3.8582341334636493`*^9, 3.858234139214013*^9}, {
   3.85823429485408*^9, 3.8582343147253714`*^9}, {3.8582343796541233`*^9, 
   3.8582344290743575`*^9}, 3.8582350510146756`*^9, {3.858235273535246*^9, 
   3.858235286184969*^9}, {3.8582356842557554`*^9, 3.8582356860655136`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"da2baecc-1216-44d9-b504-511a5be70065"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fast Marching", "Section",
 CellChangeTimes->{{3.8713713078455677`*^9, 
  3.871371310838002*^9}},ExpressionUUID->"f79be2d6-f4ef-49e1-ba22-\
2999b37b08d7"],

Cell[CellGroupData[{

Cell["Functions Fast Marching", "Subsection",
 CellChangeTimes->{{3.822110303531454*^9, 3.8221103065235343`*^9}, {
   3.8223827579517393`*^9, 3.8223827615982943`*^9}, 3.826164735597618*^9, {
   3.8261647810722127`*^9, 3.8261647879930415`*^9}, {3.849162773878948*^9, 
   3.849162774776081*^9}},ExpressionUUID->"2fcaebda-ecde-4578-a687-\
9714372f53b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "If", " ", "Mathematica", " ", "does", " ", "not", " ", "automatically", 
     " ", "find", " ", "the", " ", "correct", " ", "Python", " ", 
     "executable"}], ",", " ", 
    RowBox[{
    "uncomment", " ", "the", " ", "following", " ", "and", " ", "enter", " ", 
     "the", " ", "path", " ", "to", " ", "the", " ", "correct", " ", 
     RowBox[{"executable", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"RegisterExternalEvaluator", "[", 
     RowBox[{
     "\"\<Python\>\"", ",", " ", 
      "\"\<C:\\\\Users\\\\s149687\\\\.conda\\\\envs\\\\adg-hfm\\\\python.exe\>\
\""}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Start", " ", "a", " ", "Python", " ", "session"}], ",", " ", 
    RowBox[{
    "make", " ", "sure", " ", "it", " ", "is", " ", "in", " ", "the", " ", 
     "correct", " ", "environment"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"python", " ", "=", " ", 
   RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820125321256993*^9, 3.8201254545001125`*^9}, {
  3.8201271395596027`*^9, 3.820127142132042*^9}, {3.8201271743780355`*^9, 
  3.8201272507333117`*^9}, {3.8201273527663746`*^9, 3.8201274033529153`*^9}, {
  3.8201274475762434`*^9, 3.8201275339970007`*^9}, {3.820127614739856*^9, 
  3.820127662492446*^9}, {3.8201277091113687`*^9, 3.820127773912282*^9}, {
  3.8202233666834836`*^9, 3.8202233680350533`*^9}, {3.82022341786358*^9, 
  3.8202234367848043`*^9}, {3.8491763459991865`*^9, 3.8491763503410206`*^9}, {
  3.84923714878611*^9, 3.8492371603271275`*^9}, {3.851410053656026*^9, 
  3.8514100562162437`*^9}, {3.851410152931374*^9, 3.8514101533855853`*^9}, {
  3.871835540183304*^9, 3.8718355436746297`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"32b9e00d-c277-420c-a53f-82542346a3d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Import", " ", "AGD", " ", "package"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{
   "python", ",", " ", 
    "\"\<\nfrom agd import Eikonal\nfrom agd.Metrics import AsymQuad,Riemann \
# Riemannian metric and Asymmetric Quadratic Models\nfrom agd import \
AutomaticDifferentiation as ad\nfrom agd import LinearParallel as lp\nfrom \
agd import FiniteDifferences as fd\n\nfrom agd.LinearParallel import \
outer_self as Outer # outer product v v^T of a vector with itself\nnorm = \
ad.Optimization.norm\nimport numpy as np; xp=np\n\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820125321256993*^9, 3.8201254545001125`*^9}, {
  3.8201271395596027`*^9, 3.820127142132042*^9}, {3.8201271743780355`*^9, 
  3.8201272507333117`*^9}, {3.8201273527663746`*^9, 3.8201274033529153`*^9}, {
  3.8201274475762434`*^9, 3.8201275339970007`*^9}, {3.8201275643401017`*^9, 
  3.8201275647252617`*^9}, {3.820127885690318*^9, 3.820127897058759*^9}, {
  3.8201279685886774`*^9, 3.8201279688230104`*^9}, {3.820129081257738*^9, 
  3.820129120027542*^9}, {3.820928814003272*^9, 3.8209288172876716`*^9}, {
  3.849239939911605*^9, 3.8492399437492023`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5baf0844-3d82-466f-8697-40943fb27883"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Define", " ", "the", " ", "Python", " ", "function", " ", "that", " ", 
     "we", " ", "will", " ", "call", " ", "from", " ", "Mathematica"}], ",", 
    " ", 
    RowBox[{"take", " ", "care", " ", "of", " ", 
     RowBox[{"indentation", ".", "\[IndentingNewLine]", "We"}], " ", "use", 
     " ", 
     RowBox[{"Mathematica", "'"}], "s", " ", "automatic", " ", "conversion", 
     " ", "of", " ", "NumPy", " ", "arrays", " ", "to", " ", "do", " ", "the",
      " ", "heavy", " ", "lifting", " ", "of", " ", "converting", " ", "the", 
     " ", 
     RowBox[{"data", ".", "\[IndentingNewLine]", "Note"}], " ", "that", " ", 
     "this", " ", "function", " ", "returns", " ", "a", " ", "list", " ", 
     "of", " ", "Numeric", " ", "arrays"}], ",", " ", 
    RowBox[{
    "they", " ", "can", " ", "be", " ", "converted", " ", "to", " ", 
     "conventional", " ", "lists", " ", "using", " ", 
     RowBox[{
      RowBox[{"Normal", "[", "]"}], "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "used", " ", "for", " ", "the", 
    " ", "symmetric", " ", 
    RowBox[{"tracking", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"runReedsSheppGFHeightGeos", "=", 
    RowBox[{"ExternalFunction", "[", 
     RowBox[{
     "python", ",", 
      "\"\<\ndef runReedsSheppHeightGeos(sides, dims, seeds, tips, metric):\n\
\tmetric = Riemann(xp.array(metric))\n\thfmIn = Eikonal.dictIn({\n\t\t'model' \
: 'Riemann3_Periodic',\n        'exportValues':1,\n\t\t'seeds' : seeds,\n\t\t\
'arrayOrdering' : 'RowMajor',\n\t\t'tips' : tips,\n\t\t'metric' : metric,\n\t\
})\n\thfmIn.SetRect(sides = sides, dims = dims)\n\tif hfmIn.mode=='gpu': \
hfmIn.update({'model':'Riemann3','periodic':(False,False,True)})\n\thfmOut = \
hfmIn.Run()\n\tgeos = [g.T for g in hfmOut['geodesics']]\n\theight = \
hfmOut['values']\n\tprint('Done.')\n\treturn height,geos\n  \>\""}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.8201304232231817`*^9, 3.820130569968113*^9}, {
   3.8201306124147415`*^9, 3.820130613991995*^9}, {3.820130700684152*^9, 
   3.820130737748852*^9}, {3.820130805555653*^9, 3.820130864321076*^9}, {
   3.8201309615625486`*^9, 3.8201309797471185`*^9}, {3.820131035638226*^9, 
   3.8201310473103657`*^9}, {3.820131079917287*^9, 3.8201311115355825`*^9}, {
   3.820131186079157*^9, 3.8201311974343433`*^9}, {3.8201312699670553`*^9, 
   3.82013139257452*^9}, {3.8201314908224688`*^9, 3.8201315365019693`*^9}, {
   3.8201315799561415`*^9, 3.8201316534249067`*^9}, {3.820131870248514*^9, 
   3.8201318746764193`*^9}, {3.8201319074944673`*^9, 3.820132030797908*^9}, {
   3.8201351026338606`*^9, 3.8201351213449125`*^9}, {3.820135302549767*^9, 
   3.8201353474741726`*^9}, {3.8201353945097885`*^9, 
   3.8201354974298277`*^9}, {3.820135551344601*^9, 3.820135577026862*^9}, {
   3.82013564777822*^9, 3.8201356497250175`*^9}, {3.820135865533763*^9, 
   3.8201358697464256`*^9}, {3.820135926119074*^9, 3.8201359292849417`*^9}, {
   3.820135981914107*^9, 3.8201359889499083`*^9}, {3.8201360609318676`*^9, 
   3.8201360751585073`*^9}, {3.8201361241784925`*^9, 3.820136131451902*^9}, {
   3.820136268861762*^9, 3.8201362875226264`*^9}, {3.8201363998906994`*^9, 
   3.8201364122017074`*^9}, {3.8201364449866743`*^9, 3.820136446785804*^9}, {
   3.820136634146022*^9, 3.82013663563336*^9}, {3.820136703774701*^9, 
   3.8201367871729517`*^9}, {3.8201368200480833`*^9, 
   3.8201368268024244`*^9}, {3.820137087102256*^9, 3.820137087474943*^9}, {
   3.8201373689328556`*^9, 3.8201374880788665`*^9}, {3.820224152460229*^9, 
   3.820224154328909*^9}, {3.8203109585396037`*^9, 3.8203109820245237`*^9}, {
   3.8203142278014083`*^9, 3.8203142343818607`*^9}, {3.822110946097468*^9, 
   3.8221109651412354`*^9}, 3.8221111091603217`*^9, {3.8241839691163025`*^9, 
   3.8241839711444426`*^9}, 3.824184010160927*^9, {3.827567319382126*^9, 
   3.8275673202332983`*^9}, {3.827567360037774*^9, 3.827567360205397*^9}, {
   3.8275708004454603`*^9, 3.8275708050995817`*^9}, {3.8469133181080637`*^9, 
   3.84691335071708*^9}, {3.8469163619821596`*^9, 3.846916362857004*^9}, {
   3.8469166786396465`*^9, 3.84691668018594*^9}, {3.846916917205605*^9, 
   3.8469169202622066`*^9}, {3.8469172694166856`*^9, 
   3.8469172771979465`*^9}, {3.8469175088929543`*^9, 
   3.8469175131000185`*^9}, {3.8469177449967785`*^9, 3.846917745154958*^9}, {
   3.8486732388598843`*^9, 3.8486732525090632`*^9}, {3.871835285392603*^9, 
   3.871835312877296*^9}, {3.8718353654896297`*^9, 3.8718353673594575`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"c4826bc7-a77a-4674-9db5-b2ae47d9a71f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Define", " ", "the", " ", "Python", " ", "function", " ", "that", " ", 
     "we", " ", "will", " ", "call", " ", "from", " ", "Mathematica"}], ",", 
    " ", 
    RowBox[{"take", " ", "care", " ", "of", " ", 
     RowBox[{"indentation", ".", "\[IndentingNewLine]", "We"}], " ", "use", 
     " ", 
     RowBox[{"Mathematica", "'"}], "s", " ", "automatic", " ", "conversion", 
     " ", "of", " ", "NumPy", " ", "arrays", " ", "to", " ", "do", " ", "the",
      " ", "heavy", " ", "lifting", " ", "of", " ", "converting", " ", "the", 
     " ", 
     RowBox[{"data", ".", "\[IndentingNewLine]", "Note"}], " ", "that", " ", 
     "this", " ", "function", " ", "returns", " ", "a", " ", "list", " ", 
     "of", " ", "Numeric", " ", "arrays"}], ",", " ", 
    RowBox[{
    "they", " ", "can", " ", "be", " ", "converted", " ", "to", " ", 
     "conventional", " ", "lists", " ", "using", " ", 
     RowBox[{
      RowBox[{"Normal", "[", "]"}], ".", "\[IndentingNewLine]", "This"}], " ",
      "function", " ", "models", " ", "the", " ", "forward", " ", "gear", " ",
      "variant", " ", "of", " ", "the", " ", "Reeds", " ", "Shepp", " ", 
     "Model", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
        "both", " ", "using", " ", "the", " ", "gauge", " ", "frame", " ", 
         "and", " ", "left", " ", "invariant", " ", "frame"}], ",", " ", 
        RowBox[{
        "depending", " ", "on", " ", "the", " ", "metric", " ", "that", " ", 
         "is", " ", "entered"}]}], ")"}], "."}]}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"used", " ", 
     RowBox[{"variables", ":", " ", "cost"}]}], ",", " ", "tips", ",", " ", 
    "D", ",", " ", "w", ",", " ", "seeds", ",", " ", "sides", ",", " ", "n"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "used", " ", "for", " ", "the", 
    " ", "asymmetric", " ", 
    RowBox[{"(", 
     RowBox[{"forward", " ", "gear"}], ")"}], " ", 
    RowBox[{"tracking", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"runReedsSheppForwardGFMultipleHeightGeos", "=", 
    RowBox[{"ExternalFunction", "[", 
     RowBox[{
     "python", ",", 
      "\"\<\ndef \
runReedsSheppForwardGFMultipleGeos(dimsSingle,metricSingle,wSingle,\
sidesSingle,seedsSingle,tipsSingle,eps,mult):\n\ttipsSingle = \
xp.array(tipsSingle)\n\tseedsSingle = xp.array(seedsSingle)\n\tsidesSingle = \
xp.array(sidesSingle)\n\tmetricSingle = xp.array(metricSingle)\n\twSingle = \
xp.array(wSingle)\n\t\n\tprint('Finished loading all data')\n\t\n\tdims = \
np.array([dimsSingle[0],dimsSingle[1],dimsSingle[2]*mult])\n\tsides = \
np.array([sidesSingle[0],sidesSingle[1],[sidesSingle[2,0],(sidesSingle[2,1]+2*\
np.pi/dimsSingle[2])*mult-2*np.pi/dimsSingle[2]]])\n\n\t# repetition of tips, \
seeds, metrics\n\tmultiplicitytips= np.zeros([mult,tipsSingle.shape[1]])\n\t\
multiplicitytips[:,2]=np.arange(multiplicitytips.shape[0])\n\t\
tips=np.tile(tipsSingle.T,mult).T+np.repeat(np.array(multiplicitytips)*2*np.\
pi,repeats=tipsSingle.shape[0],axis=0)\n\n\tmultiplicityseeds= \
np.zeros([mult,seedsSingle.shape[1]])\n\t\
multiplicityseeds[:,2]=np.arange(multiplicityseeds.shape[0])\n\t\
seeds=np.tile(seedsSingle.T,mult).T+np.repeat(np.array(multiplicityseeds)*2*\
np.pi,repeats=seedsSingle.shape[0],axis=0)\n\n\tmetric= \
np.tile(metricSingle,mult)\n\n\tprint('metric',metric.shape)\n\n\t\
wSingleTranspose = np.transpose(wSingle,(0,1,3,2))\n\twTranspose = \
np.tile(wSingleTranspose,mult)\n\tw = np.transpose(wTranspose,(2,0,1,3))\n\n\t\
print('w',w.shape)\n\n\tprint('Finished duplicating arrays and matrices to \
mirror angular periodicity')\n\n\thfmIn = Eikonal.dictIn({\n\t\t\
'model':'AsymmetricQuadratic3',\n\t\t'exportValues':1,\n\t\t'seeds':seeds,\n\t\
})\n\n\t# Define the domain\n\thfmIn.SetRect(sides = sides, dims = dims)\n\t\
hfmIn['tips']=tips.tolist()\n\thfmIn['eps'] = eps\n\tX,Y,Theta=hfmIn.Grid()\n\
\n\tif hfmIn.mode=='gpu': \\\\\n\t\
hfmIn.update({'model':'AsymmetricQuadratic3','periodic':(False,False,True)})\n\
\thfmIn['metric']= AsymQuad(metric,-np.sqrt(1-eps**2)*w)\n\tprint('Data \
defined in Fast-Marching code')\n\thfmOut = hfmIn.Run()\n\n\t\
print('Calculating paths and volume done')\n\n\t# select shortest path from \
tip to seed (without multiplicity)\n\t# switch from continuous angles to \
discrete angles\n\tcontinuousAngle=tips[:,2]\n\t\
discreteAngle=np.zeros(continuousAngle.shape)\n\tfor k in \
range(len(continuousAngle)):\n\t\t\
discreteAngle[k]=np.abs(Theta-continuousAngle[k]).argmin()#np.where(Theta==\
continuousAngle[k])[2][0]\n\ttipsDiscrete=np.zeros(tips.shape)\n\t\
tipsDiscrete[:,:2]=tips[:,:2]\n\ttipsDiscrete[:,2]=discreteAngle\n\n\t# \
determine length of paths\n\tvalues = hfmOut['values']\n\t\
valueslist=np.zeros(tips.shape[0])\n\tfor i in range(valueslist.shape[0]):\n\t\
\tvalueslist[i]=values[round(tipsDiscrete[i,0]),round(tipsDiscrete[i,1]),\
round(tipsDiscrete[i,2])]\n\t\n\t# find indices of tips with shortest paths\n\
\tindexShortestPath=np.reshape(valueslist,(tipsSingle.shape[0],mult),order='F'\
).argmin(axis=1)\n\t\
indexShortestPath_new=indexShortestPath*len(indexShortestPath)+np.arange(len(\
indexShortestPath))\n\t\n\t# pick correct shortest path\n\tgeos = [g.T for g \
in hfmOut['geodesics']]\n\tgeosSelection=[geos[indexShortestPath_new[0]]]\n\t\
for j in range(len(indexShortestPath)-1):\n\t\t\
geosSelection.append(geos[indexShortestPath_new[j+1]])\n\tprint('Selecting \
correct paths done')\n\n\tprint('Done.')\n\treturn values,geosSelection\n  \>\
\""}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8237552489725246`*^9, 3.8237553006852083`*^9}, {
   3.8237558963172684`*^9, 3.823755896522479*^9}, {3.8237559473556232`*^9, 
   3.823755958245423*^9}, {3.8237560610455017`*^9, 3.823756062565624*^9}, {
   3.8237563767415247`*^9, 3.8237563976212735`*^9}, {3.823756762969249*^9, 
   3.8237567964588184`*^9}, {3.823756986937766*^9, 3.8237569882804976`*^9}, {
   3.8237648531915836`*^9, 3.8237649668717284`*^9}, {3.8237777734238358`*^9, 
   3.823777831424363*^9}, {3.82377787003465*^9, 3.823777949824373*^9}, {
   3.8237779961654563`*^9, 3.8237780639925594`*^9}, {3.8237781111468005`*^9, 
   3.823778133640845*^9}, {3.823778724926865*^9, 3.82377874993676*^9}, {
   3.8237791206450443`*^9, 3.8237791325248256`*^9}, {3.823925569226306*^9, 
   3.823925572937559*^9}, 3.8239256141478567`*^9, {3.824109366427225*^9, 
   3.8241093734142003`*^9}, {3.824110474608915*^9, 3.82411047766619*^9}, {
   3.824110538271643*^9, 3.8241105421229067`*^9}, {3.8241865918851447`*^9, 
   3.824186611677169*^9}, {3.824186702353634*^9, 3.8241867085728207`*^9}, 
   3.824186769055394*^9, {3.824188043335567*^9, 3.8241880466871595`*^9}, {
   3.8245298288837047`*^9, 3.8245298378455343`*^9}, {3.824529907854786*^9, 
   3.8245299141293983`*^9}, {3.824530106409525*^9, 3.824530128065013*^9}, {
   3.82453018960596*^9, 3.824530192720166*^9}, {3.827567365561261*^9, 
   3.8275673704050426`*^9}, 3.82757290966915*^9, {3.8275732197467394`*^9, 
   3.8275732236116657`*^9}, {3.830327230737608*^9, 3.830327246456808*^9}, {
   3.8303304408438873`*^9, 3.830330667596264*^9}, {3.8303309343981524`*^9, 
   3.8303309518081207`*^9}, {3.830330984379562*^9, 3.8303311619255085`*^9}, {
   3.8303312716572475`*^9, 3.830331308742258*^9}, {3.830332156706267*^9, 
   3.8303321672193203`*^9}, {3.830332355528077*^9, 3.8303323945606318`*^9}, {
   3.8303419090135965`*^9, 3.8303421465153875`*^9}, {3.8303422411705103`*^9, 
   3.830342244457903*^9}, {3.83034231499903*^9, 3.8303423558346667`*^9}, {
   3.8303424396599903`*^9, 3.830342456243523*^9}, {3.8303441263380632`*^9, 
   3.8303441660442424`*^9}, {3.830344227711121*^9, 3.830344247948717*^9}, {
   3.830344322476514*^9, 3.8303444798162365`*^9}, {3.8303445227019453`*^9, 
   3.8303445696338825`*^9}, {3.830344680272291*^9, 3.830344720805067*^9}, {
   3.8303449979136877`*^9, 3.8303450493979588`*^9}, {3.830345193256342*^9, 
   3.830345292493513*^9}, {3.8303454311370173`*^9, 3.8303454487992334`*^9}, {
   3.830345586327524*^9, 3.8303455871876483`*^9}, {3.830354100430665*^9, 
   3.8303543524279637`*^9}, {3.8303608493213778`*^9, 3.830360900405203*^9}, 
   3.830361835430729*^9, {3.830363344765514*^9, 3.830363366919513*^9}, {
   3.8303643568051414`*^9, 3.8303644170790353`*^9}, {3.8303649109410243`*^9, 
   3.830364913097439*^9}, {3.830397776115281*^9, 3.8303980248443527`*^9}, 
   3.8303985066956854`*^9, {3.830400600899767*^9, 3.830400656774723*^9}, {
   3.8304019714873247`*^9, 3.8304020168229384`*^9}, {3.830402505037264*^9, 
   3.830402508696271*^9}, {3.830402573160678*^9, 3.830402596233473*^9}, {
   3.8304032334685774`*^9, 3.8304032356756277`*^9}, {3.8304040551616354`*^9, 
   3.830404058072667*^9}, {3.830404262104557*^9, 3.830404313167634*^9}, {
   3.83040437373954*^9, 3.8304044183174486`*^9}, {3.83040526666393*^9, 
   3.830405269974535*^9}, {3.83040592763944*^9, 3.830405931287908*^9}, {
   3.830405970482778*^9, 3.830406074336563*^9}, {3.8304068517446723`*^9, 
   3.830406852262249*^9}, {3.830407826444729*^9, 3.830407828678835*^9}, {
   3.830408390371539*^9, 3.8304084011736803`*^9}, 3.8304084813981943`*^9, {
   3.830411064677002*^9, 3.830411070004549*^9}, {3.8304128058041663`*^9, 
   3.830412806403449*^9}, 3.830416528167105*^9, {3.83041780096748*^9, 
   3.8304179701414366`*^9}, {3.8304197015751057`*^9, 
   3.8304197395843534`*^9}, {3.8304207445018325`*^9, 
   3.8304207451186147`*^9}, {3.8304851042868576`*^9, 
   3.8304851409024053`*^9}, {3.8304851892834177`*^9, 
   3.8304852317668104`*^9}, {3.8309451347226477`*^9, 3.830945160255487*^9}, {
   3.8473455615090027`*^9, 3.847345564293126*^9}, {3.847345993803294*^9, 
   3.847345994341088*^9}, {3.8486515075466547`*^9, 3.8486515349142394`*^9}, {
   3.8492400297205887`*^9, 3.849240035348284*^9}, {3.8492400856615543`*^9, 
   3.8492400858342953`*^9}, {3.8718353255488605`*^9, 3.87183536119145*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"42c24da1-a602-4a12-9558-306e17f55e28"]
}, Closed]],

Cell[CellGroupData[{

Cell["Metric Functions", "Subsection",
 CellChangeTimes->{{3.8716368185487485`*^9, 
  3.8716368208916297`*^9}},ExpressionUUID->"cbf4121b-d803-49cc-8ed4-\
9f6d11a46a6c"],

Cell[CellGroupData[{

Cell["General Metric Functions", "Subsubsection",
 CellChangeTimes->{{3.8491628464528065`*^9, 
  3.849162850168598*^9}},ExpressionUUID->"e4ae0364-4b01-4404-83a3-\
71490a9c4dcd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OuterProd", "[", "v_", "]"}], " ", ":=", " ", 
   RowBox[{"TensorProduct", "[", 
    RowBox[{"v", ",", " ", "v"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"76c1c179-01c7-422f-b15b-fdbfb27b74bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GGF", "[", 
   RowBox[{
   "g11_", ",", "g22_", ",", "g33_", ",", "GFtoLIFinv_", ",", 
    "LIFtoEuclideaninv_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GF", ",", "G", ",", "transformMatrix"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GF", "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{"g11", ",", "g22", ",", "g33"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"transformMatrix", "=", 
      RowBox[{"LIFtoEuclideaninv", ".", "GFtoLIFinv"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"G", "=", 
      RowBox[{"transformMatrix", ".", "GF", ".", 
       RowBox[{"Transpose", "[", "transformMatrix", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "G", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8237797814540014`*^9, 3.8237800021220217`*^9}, {
   3.823843686445279*^9, 3.8238436881721816`*^9}, {3.823861389851432*^9, 
   3.823861476167248*^9}, {3.823864032680152*^9, 3.823864038313194*^9}, 
   3.8239456404278636`*^9, {3.8239460488547487`*^9, 3.8239460913027735`*^9}, {
   3.8242079220779*^9, 3.824207933252*^9}, 3.8244657205844965`*^9, {
   3.824465875507021*^9, 3.824465876885784*^9}, {3.8244660573965406`*^9, 
   3.82446607206036*^9}, {3.824466189062105*^9, 3.824466207883562*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"2569c990-a3d7-487f-a042-bf5162c90551"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GLIFtoEuclideanOld", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8238634641757145`*^9, 3.8238635586417055`*^9}, {
   3.824208088089237*^9, 3.8242080907412157`*^9}, {3.824208194678382*^9, 
   3.824208196632406*^9}, {3.828605454641837*^9, 3.8286054568906045`*^9}, {
   3.8313963409979277`*^9, 3.8313963473145933`*^9}, 3.8520900092354703`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"23c12048-bcea-4bc0-b0b8-ba711c9e7b5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IncludeCost", "[", 
   RowBox[{"cost_", ",", "metric_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "metricCost", ",", "metricTranspose", ",", "metricCostTranspose"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"metricTranspose", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"metric", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"metricCost", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "*", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"metricTranspose", ",", "cost"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "multiply", " ", "the", " ", "metric", " ", "at", " ", "a", " ", 
       "specific", " ", "point", " ", "with", " ", "the", " ", "value", " ", 
       "of", " ", "the", " ", "cost", " ", "function", " ", "on", " ", "that",
        " ", "specific", " ", "location"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"metricCostTranspose", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"metricCost", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"N", "[", "metricCostTranspose", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8238785120764894`*^9, 3.823878583450979*^9}, {
   3.8238786359535503`*^9, 3.823878686533272*^9}, {3.8238799493416433`*^9, 
   3.823880048584467*^9}, {3.823880108278309*^9, 3.8238801227910447`*^9}, {
   3.82388015494582*^9, 3.8238801723558607`*^9}, 3.8238806225641785`*^9, {
   3.823946890655205*^9, 3.823946913073385*^9}, {3.823948064535144*^9, 
   3.82394806848734*^9}, {3.8242165886827917`*^9, 3.8242166161133537`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"15248963-2b01-4ef4-82bb-3891f00c8cda"]
}, Closed]],

Cell[CellGroupData[{

Cell["Metric Functions Symmetric in LIF", "Subsubsection",
 CellChangeTimes->{{3.822110303531454*^9, 3.8221103065235343`*^9}, {
   3.8223827579517393`*^9, 3.8223827615982943`*^9}, 3.826164735597618*^9, {
   3.84916278009284*^9, 3.8491627808666334`*^9}, {3.849162975600747*^9, 
   3.8491629779073086`*^9}},ExpressionUUID->"5bc4dd7a-5c1b-47e9-8256-\
735d08f3145c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReedsSheppMetricGFOld", "[", 
   RowBox[{"GF_", ",", 
    RowBox[{"{", 
     RowBox[{"nx_", ",", "ny_", ",", "nt_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "metric", ",", "metricTransposed", ",", "t0Int", ",", "t1Int", ",", 
      "GFinv", ",", "LIFtoEuclidean", ",", "LIFtoEuclideaninv"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GFinv", "=", 
      RowBox[{"N", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", "#", "]"}], "&"}], ",", "GF", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "LIF", " ", "basis", " ", "in", " ", "terms", " ", "of", " ", "gauge", 
        " ", "basis"}], ";", " ", 
       RowBox[{
       "GF", " ", "denotes", " ", "gauge", " ", "basis", " ", "in", " ", 
        "terms", " ", "of", " ", "LIF", " ", "basis"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LIFtoEuclidean", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GLIFtoEuclideanOld", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "/", "nt"}], ")"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", "nt"}], "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "LIF", " ", "basis", " ", "in", " ", "terms", " ", "of", " ", "static", 
       " ", "basis"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LIFtoEuclideaninv", "=", 
      RowBox[{"N", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", "#", "]"}], "&"}], ",", "LIFtoEuclidean", 
         ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "static", " ", "basis", " ", "in", " ", "terms", " ", "of", " ", "LIF", 
       " ", "basis"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"metric", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GGF", "[", 
         RowBox[{"g11", ",", "g22", ",", "g33", ",", 
          RowBox[{"GFinv", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", "y", ",", "t"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "LIFtoEuclideaninv", "\[LeftDoubleBracket]", "t", 
           "\[RightDoubleBracket]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "1", ",", "nx"}], "}"}], ",", "  ", 
        RowBox[{"(*", 
         RowBox[{
         "x", " ", "takes", " ", "values", " ", "1", " ", "to", " ", "Nx"}], 
         "*)"}], "\n", "     ", 
        RowBox[{"{", 
         RowBox[{"y", ",", " ", "1", ",", " ", "ny"}], "}"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "y", " ", "takes", " ", "values", " ", "1", " ", "to", " ", "Ny"}], 
         "*)"}], "\n", "     ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "1", ",", " ", "nt"}], "}"}]}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
      "t", " ", "takes", " ", "values", " ", "1", " ", "to", " ", "2", 
       "N\[Theta]"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"metricTransposed", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"metric", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"N", "[", "metricTransposed", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.823863250308508*^9, 3.8238633675854063`*^9}, {
   3.8238634057882123`*^9, 3.82386349097758*^9}, {3.823863627769211*^9, 
   3.8238637019418497`*^9}, {3.823864018234191*^9, 3.8238640193405714`*^9}, {
   3.8238640573466854`*^9, 3.823864083417515*^9}, {3.82386451745893*^9, 
   3.8238645193495526`*^9}, {3.8238645528181915`*^9, 
   3.8238645927574916`*^9}, {3.823864742472515*^9, 3.8238648698602953`*^9}, {
   3.823865051736315*^9, 3.8238650621795955`*^9}, {3.823866416981224*^9, 
   3.8238666633748913`*^9}, {3.82388306215502*^9, 3.8238830640405006`*^9}, {
   3.8238831971945353`*^9, 3.8238831986085873`*^9}, {3.823945526096771*^9, 
   3.823945663237444*^9}, {3.8239458365921593`*^9, 3.823945846273732*^9}, {
   3.823945896207765*^9, 3.823945916632061*^9}, {3.8239459789038677`*^9, 
   3.823946023944131*^9}, {3.8239461983211884`*^9, 3.823946207424012*^9}, {
   3.8239466067683277`*^9, 3.8239466223031654`*^9}, {3.8239480736154613`*^9, 
   3.8239480777862988`*^9}, {3.824107391754238*^9, 3.8241073923572493`*^9}, {
   3.824207366041005*^9, 3.824207393500676*^9}, {3.8242076022825255`*^9, 
   3.824207610924247*^9}, {3.8242077333616533`*^9, 3.824207801915064*^9}, {
   3.824207877294054*^9, 3.824207895630455*^9}, {3.8275678310514183`*^9, 
   3.82756783764839*^9}, {3.831193577778721*^9, 3.8311935824425106`*^9}, {
   3.8314585853906*^9, 3.8314585948292284`*^9}, 3.8314594470892067`*^9, {
   3.849236120689776*^9, 3.849236122062422*^9}, 3.84923617530412*^9, 
   3.849237929758955*^9, {3.8492381286641717`*^9, 3.8492381301138234`*^9}, {
   3.8492381782022886`*^9, 3.8492381788307247`*^9}, {3.8520046611773167`*^9, 
   3.852004662239869*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"703a566a-fc47-489c-a8b8-788cc26d1531"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", "dual", " ", "metric", " ", "D"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricMLIF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Mpart", ",", "M", ",", "MD"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mpart", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], ",", 
              RowBox[{
               SuperscriptBox["\[Xi]", "2"], "*", 
               SuperscriptBox["\[Zeta]", 
                RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Inverse", "[", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
               RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}], 
        "*", "\[Xi]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"Mpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "M"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8552142427129602`*^9, 3.8552142672415323`*^9}, {
   3.8552143399071913`*^9, 3.8552143491230307`*^9}, {3.855228377343495*^9, 
   3.855228378653138*^9}, 3.8552900229369445`*^9, {3.855292671692083*^9, 
   3.855292672787225*^9}, {3.857014615011263*^9, 3.8570146384648027`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5e34567a-7e56-4602-bf92-02ac127404c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", "dual", " ", "metric", " ", "D"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricDLIF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Mpart", ",", "MDpart", ",", "M", ",", "MD"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MDpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{"Mpart", "[", 
           RowBox[{"[", "\[Theta]", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MD", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MDpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MD", "=", 
       RowBox[{
        SuperscriptBox["cost", 
         RowBox[{"-", "2"}]], "*", "MD"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "MD", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8552142427129602`*^9, 3.8552142672415323`*^9}, {
   3.8552143399071913`*^9, 3.8552143491230307`*^9}, {3.855228377343495*^9, 
   3.855228378653138*^9}, {3.855228535240492*^9, 3.8552285629680643`*^9}, {
   3.855228612904784*^9, 3.8552286176208954`*^9}, 3.8552890989281273`*^9, 
   3.855290027659279*^9, {3.855292675182274*^9, 3.8552926781573005`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1ee1bcdc-08ab-4086-a2f7-b56a466140bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Metric Functions Forward Gear in LIF", "Subsubsection",
 CellChangeTimes->{{3.822110303531454*^9, 3.8221103065235343`*^9}, {
   3.8223827579517393`*^9, 3.8223827615982943`*^9}, 3.826164735597618*^9, {
   3.84916278009284*^9, 
   3.8491627808666334`*^9}},ExpressionUUID->"f72bfae4-80cd-4cf8-b59b-\
f37f839e888e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"MetricDvectorwLIF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wPart", ",", "MDpart", ",", "M", ",", "MD", ",", "w", ",", "wD"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wPart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Epsilon]", 
                   RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MDpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Inverse", "[", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
                RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
               RowBox[{"\[Pi]", "/", "2"}]}], "]"}], "]"}], ".", 
            RowBox[{"DiagonalMatrix", "[", 
             RowBox[{"{", 
              RowBox[{
               SuperscriptBox["\[Xi]", "2"], ",", 
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                SuperscriptBox["\[Zeta]", 
                 RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Inverse", "[", 
              RowBox[{"GLIFtoEuclideanOld", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
                 RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
                RowBox[{"\[Pi]", "/", "2"}]}], "]"}], "]"}], "]"}]}], "+", 
           RowBox[{"OuterProd", "[", 
            RowBox[{"wPart", "[", 
             RowBox[{"[", "\[Theta]", "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"wPart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MD", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MDpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        SuperscriptBox["cost", 
         RowBox[{"-", "1"}]], "*", "w"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MD", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MD"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"MD", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8484649914884624`*^9, 3.848465022485238*^9}, {
   3.8484650659960604`*^9, 3.8484650871480384`*^9}, {3.848465146553982*^9, 
   3.848465280971162*^9}, {3.8484654284411354`*^9, 3.848465551970329*^9}, {
   3.8484656130501957`*^9, 3.8484657034822383`*^9}, {3.848465736311178*^9, 
   3.8484658852704844`*^9}, {3.8484659194628825`*^9, 
   3.8484659511832657`*^9}, {3.8484659892730427`*^9, 3.848465990990182*^9}, {
   3.8484660636358027`*^9, 3.8484660676116104`*^9}, {3.8484668482894077`*^9, 
   3.84846686567196*^9}, {3.8484669246080017`*^9, 3.8484669253562975`*^9}, {
   3.848467211343684*^9, 3.848467230467314*^9}, {3.8484672616991024`*^9, 
   3.8484673089283447`*^9}, {3.8484674309688835`*^9, 
   3.8484675041964474`*^9}, {3.8484677346841946`*^9, 
   3.8484677806343107`*^9}, {3.8484678125130987`*^9, 
   3.8484678250492134`*^9}, {3.848468486909953*^9, 3.8484684913165064`*^9}, {
   3.848468679828153*^9, 3.8484686821483655`*^9}, {3.848480460739128*^9, 
   3.8484804666428385`*^9}, {3.8484871270755568`*^9, 3.848487145552842*^9}, {
   3.848487180183468*^9, 3.848487185267514*^9}, {3.8485502373005924`*^9, 
   3.8485502420711794`*^9}, {3.8485587968333483`*^9, 
   3.8485588326472063`*^9}, {3.8485657772160683`*^9, 3.848565784112958*^9}, {
   3.8485662026896057`*^9, 3.84856621483272*^9}, {3.8485664486760798`*^9, 
   3.848566457312764*^9}, {3.848573117351256*^9, 3.8485731519788637`*^9}, {
   3.8485743643352375`*^9, 3.848574377666855*^9}, 3.8485745635278473`*^9, 
   3.8485748167341332`*^9, {3.8485763511828933`*^9, 3.848576386986167*^9}, {
   3.8485767103376865`*^9, 3.848576729555835*^9}, {3.848647564820961*^9, 
   3.848647573099467*^9}, 3.8486518121769505`*^9, 3.8486536523835993`*^9, {
   3.848657624219053*^9, 3.848657626153077*^9}, 3.8486585795121984`*^9, {
   3.8486732852891245`*^9, 3.8486732861975856`*^9}, {3.848678989091471*^9, 
   3.84867905573519*^9}, {3.8487210283982735`*^9, 3.8487211251553698`*^9}, {
   3.848721592339266*^9, 3.8487216555141764`*^9}, {3.8487217692873874`*^9, 
   3.848721769752118*^9}, {3.84872190243385*^9, 3.8487219095065084`*^9}, {
   3.848722375887209*^9, 3.8487223852439938`*^9}, {3.8487224761730275`*^9, 
   3.848722478003208*^9}, 3.8491642891234994`*^9, {3.849164441726801*^9, 
   3.8491644973660393`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"f1659fd3-16fe-45e6-9fb8-e04e8b1ef736"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", "dual", " ", "metric", " ", "D"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricMvectorwLIF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wPart", ",", "Mpart", ",", "M", ",", "MD", ",", "w", ",", "wD"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wPart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Epsilon]", 
                   RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Mpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
               RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
              RowBox[{"\[Pi]", "/", "2"}]}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"wPart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"Mpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        SuperscriptBox["cost", 
         RowBox[{"-", "1"}]], "*", "w"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{
        SuperscriptBox["cost", 
         RowBox[{"-", "2"}]], "*", "M"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"M", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8484649914884624`*^9, 3.848465022485238*^9}, {
   3.8484650659960604`*^9, 3.8484650871480384`*^9}, {3.848465146553982*^9, 
   3.848465280971162*^9}, {3.8484654284411354`*^9, 3.848465551970329*^9}, {
   3.8484656130501957`*^9, 3.8484657034822383`*^9}, {3.848465736311178*^9, 
   3.8484658852704844`*^9}, {3.8484659194628825`*^9, 
   3.8484659511832657`*^9}, {3.8484659892730427`*^9, 3.848465990990182*^9}, {
   3.8484660636358027`*^9, 3.8484660676116104`*^9}, {3.8484668482894077`*^9, 
   3.84846686567196*^9}, {3.8484669246080017`*^9, 3.8484669253562975`*^9}, {
   3.848467211343684*^9, 3.848467230467314*^9}, {3.8484672616991024`*^9, 
   3.8484673089283447`*^9}, {3.8484674309688835`*^9, 
   3.8484675041964474`*^9}, {3.8484677346841946`*^9, 
   3.8484677806343107`*^9}, {3.8484678125130987`*^9, 
   3.8484678250492134`*^9}, {3.848468486909953*^9, 3.8484684913165064`*^9}, {
   3.848468679828153*^9, 3.8484686821483655`*^9}, {3.848480460739128*^9, 
   3.8484804666428385`*^9}, {3.8484871270755568`*^9, 3.848487145552842*^9}, {
   3.848487180183468*^9, 3.848487185267514*^9}, {3.8485502373005924`*^9, 
   3.8485502420711794`*^9}, {3.8485587968333483`*^9, 
   3.8485588326472063`*^9}, {3.8485657772160683`*^9, 3.848565784112958*^9}, {
   3.8485662026896057`*^9, 3.84856621483272*^9}, {3.8485664486760798`*^9, 
   3.848566457312764*^9}, {3.848573117351256*^9, 3.8485731519788637`*^9}, {
   3.8485743643352375`*^9, 3.848574377666855*^9}, 3.8485745635278473`*^9, 
   3.8485748167341332`*^9, {3.8485763511828933`*^9, 3.848576386986167*^9}, {
   3.8485767103376865`*^9, 3.848576729555835*^9}, {3.848647564820961*^9, 
   3.848647573099467*^9}, 3.8486518121769505`*^9, 3.8486536523835993`*^9, {
   3.848657624219053*^9, 3.848657626153077*^9}, 3.8486585795121984`*^9, {
   3.8486732852891245`*^9, 3.8486732861975856`*^9}, {3.848678989091471*^9, 
   3.84867905573519*^9}, {3.8487210283982735`*^9, 3.8487211251553698`*^9}, {
   3.848721592339266*^9, 3.8487216555141764`*^9}, {3.8487217692873874`*^9, 
   3.848721769752118*^9}, {3.84872190243385*^9, 3.8487219095065084`*^9}, {
   3.848722375887209*^9, 3.8487223852439938`*^9}, {3.8487224761730275`*^9, 
   3.848722478003208*^9}, 3.8491642891234994`*^9, {3.849164441726801*^9, 
   3.8491644973660393`*^9}, {3.849247102256665*^9, 3.8492471536267157`*^9}, 
   3.8514172186592736`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"b6fd18c1-646c-481f-930e-ff5bedc7fbc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", 
    RowBox[{"(", "symmetric", ")"}], " ", "dual", " ", "metric", " ", "D"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricDvectorwLIF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wPart", ",", "wDpart", ",", "Mpart", ",", "MDpart", ",", "M", ",", 
       "MD", ",", "w", ",", "wD"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wPart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Epsilon]", 
                   RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Mpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Mpart", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"MDpart", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Inverse", "[", 
            RowBox[{
             RowBox[{"Mpart", "[", 
              RowBox[{"[", "\[Theta]", "]"}], "]"}], "+", 
             RowBox[{"OuterProd", "[", 
              RowBox[{"wPart", "[", 
               RowBox[{"[", "\[Theta]", "]"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], 
          "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"MDpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{"Mpart", "[", 
           RowBox[{"[", "\[Theta]", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"wPart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MD", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MDpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        SuperscriptBox["cost", "1"], "*", "w"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MD", "=", 
       RowBox[{
        SuperscriptBox["cost", 
         RowBox[{"-", "2"}]], "*", "MD"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"MD", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8551275367977304`*^9, 3.855127546646159*^9}, {
   3.8551298917433586`*^9, 3.855129913531505*^9}, {3.8551304372746134`*^9, 
   3.8551306133742466`*^9}, {3.8551328332989244`*^9, 
   3.8551328347812243`*^9}, {3.8552013979093103`*^9, 3.85520139895662*^9}, {
   3.8552234224735756`*^9, 3.855223433756027*^9}, {3.8552234712840233`*^9, 
   3.855223473266337*^9}, {3.8552251632369986`*^9, 3.8552252189384303`*^9}, {
   3.8552254129864206`*^9, 3.855225419867089*^9}, {3.855228068268854*^9, 
   3.8552280752106123`*^9}, {3.855286877562824*^9, 3.8552868798691025`*^9}, {
   3.8552870822475853`*^9, 3.8552870942280407`*^9}, {3.855291009730438*^9, 
   3.8552910269768143`*^9}, {3.855291093844078*^9, 3.855291118265044*^9}, 
   3.8552936574945755`*^9, 3.8552937057287903`*^9, {3.872146002392808*^9, 
   3.8721460049213777`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"80c493c1-651d-4ecc-a607-63342ddd13e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", 
    RowBox[{"(", "symmetric", ")"}], " ", "dual", " ", "metric", " ", "D"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricMvectorwLIF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wPart", ",", "wDpart", ",", "Mpart", ",", "MDpart", ",", "M", ",", 
       "MD", ",", "w", ",", "wD"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wPart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Epsilon]", 
                   RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Mpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"wPart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"Mpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        SuperscriptBox["cost", "1"], "*", "w"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "M"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"M", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8552910396760154`*^9, 3.8552910833271227`*^9}, 
   3.8552931270454035`*^9, {3.855293165548884*^9, 3.8552931739953575`*^9}, {
   3.855293246107695*^9, 3.85529324729895*^9}, 3.855293653739072*^9, 
   3.8552937004869795`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"cec6993f-b906-40f8-b542-c5eeae5aadeb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions Symmetric in GF", "Subsubsection",
 CellChangeTimes->{{3.822110303531454*^9, 3.8221103065235343`*^9}, {
   3.8223827579517393`*^9, 3.8223827615982943`*^9}, {3.826164735597618*^9, 
   3.8261647594597883`*^9}, {3.849164780156644*^9, 3.8491647822681847`*^9}, {
   3.8491698497888126`*^9, 3.849169852628951*^9}, 
   3.8491745182401996`*^9},ExpressionUUID->"63d7ffe4-7bef-496c-a557-\
3dc03c771cfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReedsSheppMetricGF", "[", 
   RowBox[{"GF_", ",", 
    RowBox[{"{", 
     RowBox[{"nx_", ",", "ny_", ",", "nt_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "MetricLIF2Eucl", ",", "MetricGF2LIF", ",", "MetricGF2Eucl", ",", 
      "MetricEucl2GF", ",", "MetricGF", ",", "DGF"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"MetricLIF2Eucl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"GLIFtoEuclideanOld", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t", "-", "1"}], ")"}], "*", 
            FractionBox[
             RowBox[{"2", "\[Pi]"}], "nt"]}], "+", 
           RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1", ",", "nt"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "\[Pi]"}], "/", "2"}], " ", 
      RowBox[{"correct", "?"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MetricGF2LIF", "=", "GF"}], ";", "\[IndentingNewLine]", 
     RowBox[{"DGF", "=", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{"g11", ",", "g22", ",", "g33"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"MetricGF2Eucl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MetricGF2LIF", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], "]"}], ".", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", "1"}], ")"}], "*", 
              FractionBox[
               RowBox[{"2", "\[Pi]"}], "nt"]}], "+", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1", ",", "nx"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "1", ",", "ny"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1", ",", "nt"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ".", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"MetricGF2LIF", ",", "MetricLIF2Eucl"}], "}"}], ",", 
           RowBox[{"{", "3", "}"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"MetricEucl2GF", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Inverse", "[", "#", "]"}], "&"}], ",", "MetricGF2Eucl", 
          ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"MetricEucl2GF", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"MetricGF2LIF", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], "]"}], ".", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t", "-", "1"}], ")"}], "*", 
            FractionBox[
             RowBox[{"2", "\[Pi]"}], "nt"]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1", ",", "ny"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1", ",", "nt"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MetricGF", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "DGF", ".", 
          RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "MetricEucl2GF",
         ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"N", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"MetricGF", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}]}], 
        "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.823863250308508*^9, 3.8238633675854063`*^9}, {
   3.8238634057882123`*^9, 3.82386349097758*^9}, {3.823863627769211*^9, 
   3.8238637019418497`*^9}, {3.823864018234191*^9, 3.8238640193405714`*^9}, {
   3.8238640573466854`*^9, 3.823864083417515*^9}, {3.82386451745893*^9, 
   3.8238645193495526`*^9}, {3.8238645528181915`*^9, 
   3.8238645927574916`*^9}, {3.823864742472515*^9, 3.8238648698602953`*^9}, {
   3.823865051736315*^9, 3.8238650621795955`*^9}, {3.823866416981224*^9, 
   3.8238666633748913`*^9}, {3.82388306215502*^9, 3.8238830640405006`*^9}, {
   3.8238831971945353`*^9, 3.8238831986085873`*^9}, {3.823945526096771*^9, 
   3.823945663237444*^9}, {3.8239458365921593`*^9, 3.823945846273732*^9}, {
   3.823945896207765*^9, 3.823945916632061*^9}, {3.8239459789038677`*^9, 
   3.823946023944131*^9}, {3.8239461983211884`*^9, 3.823946207424012*^9}, {
   3.8239466067683277`*^9, 3.8239466223031654`*^9}, {3.8239480736154613`*^9, 
   3.8239480777862988`*^9}, {3.824107391754238*^9, 3.8241073923572493`*^9}, {
   3.824207366041005*^9, 3.824207393500676*^9}, {3.8242076022825255`*^9, 
   3.824207610924247*^9}, {3.8242077333616533`*^9, 3.824207801915064*^9}, {
   3.824207877294054*^9, 3.824207895630455*^9}, {3.8275678310514183`*^9, 
   3.82756783764839*^9}, {3.831193577778721*^9, 3.8311935824425106`*^9}, {
   3.8314585853906*^9, 3.8314585948292284`*^9}, 3.8314594470892067`*^9, {
   3.8491698680077424`*^9, 3.849170158374303*^9}, {3.849170200626117*^9, 
   3.849170322020307*^9}, {3.8491703776729355`*^9, 3.84917039653792*^9}, {
   3.849170599300443*^9, 3.8491706477632885`*^9}, {3.8491706978672624`*^9, 
   3.8491707163231535`*^9}, {3.8491708897396493`*^9, 
   3.8491708977068443`*^9}, {3.8491712031305523`*^9, 
   3.8491712166469126`*^9}, {3.8491712843124385`*^9, 3.849171289290298*^9}, {
   3.8491716425069284`*^9, 3.8491716430629864`*^9}, {3.8491727305721574`*^9, 
   3.849172748635029*^9}, {3.849172857476023*^9, 3.8491728604918227`*^9}, {
   3.8491729309361043`*^9, 3.8491729361197786`*^9}, {3.8491743920982647`*^9, 
   3.8491743952780514`*^9}, {3.8491744954620132`*^9, 
   3.8491744970426617`*^9}, {3.849240946297619*^9, 3.849240960210507*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"f6a7a7ad-a370-46f1-a339-eb7da3056804"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"MetricMGF", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     "GF_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"convMatrices", ",", "Mpart", ",", "M", ",", "MD"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"convMatrices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], ",", 
              RowBox[{
               SuperscriptBox["\[Xi]", "2"], "*", 
               SuperscriptBox["\[Zeta]", 
                RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices",
          ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "M"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8552990286297874`*^9, 3.855299194976637*^9}, {
  3.8553004503096943`*^9, 3.855300496418828*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"49cc19f6-1a77-43f1-bdfc-9290f93c410c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MetricMGFNew", "[", 
   RowBox[{"cost_", ",", 
    RowBox[{"{", 
     RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
    "GF_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"convMatrices", ",", "Mpart", ",", "M", ",", "MD"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"convMatrices", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"GF", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices", 
        ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "/", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "M", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{
       SuperscriptBox["cost", "2"], "*", "M"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8559979204131436`*^9, 3.8559979460591903`*^9}, {
  3.8559979776375012`*^9, 3.8559980049678135`*^9}, {3.8559980441809344`*^9, 
  3.855998046029847*^9}, {3.855998180832589*^9, 3.8559982164956703`*^9}, {
  3.8559982800103874`*^9, 3.8559982829973717`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"4d7445f0-fef4-4428-9e4a-aec74a4b290f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions Forward Gear in GF", "Subsubsection",
 CellChangeTimes->{{3.822110303531454*^9, 3.8221103065235343`*^9}, {
   3.8223827579517393`*^9, 3.8223827615982943`*^9}, {3.826164735597618*^9, 
   3.8261647594597883`*^9}, {3.8491698421552258`*^9, 3.8491698465786347`*^9}, 
   3.849175758183309*^9},ExpressionUUID->"20658594-3144-4461-8fff-\
b7f6d1d8d4f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MetricDvectorwGF", "[", 
   RowBox[{"cost_", ",", "GF_", ",", 
    RowBox[{"{", 
     RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", "\[Alpha]_", 
    ",", "\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"M", ",", "MD", ",", "w", ",", "wD"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"cost", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], 
          RowBox[{"-", "2"}]], "*", 
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{
            RowBox[{"GF", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
               RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
              RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "2"], ",", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "2"]}], "}"}], "]"}], 
          ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{
             RowBox[{"GF", "[", 
              RowBox[{"[", 
               RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
                RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
               RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"cost", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], 
          RowBox[{"-", "1"}]], "*", 
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{
            RowBox[{"GF", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Epsilon]", 
                  RowBox[{"-", "2"}]], "-", "1"}], ")"}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"MD", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"OuterProd", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"M", ",", "w"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"MD", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.849243244118244*^9, 3.8492432459269185`*^9}, 
   3.8492435269756794`*^9, {3.8517754659964895`*^9, 3.851775467045083*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"7cccfbdc-b8a5-4252-93fc-fc2b3c3c8aaa"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", "dual", " ", "metric", " ", "D"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricMvectorwGF", "[", 
    RowBox[{"cost_", ",", "GF_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", "\[Alpha]_",
      ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M", ",", "MD", ",", "w", ",", "w1", ",", "wD"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"cost", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], 
           RowBox[{"-", "2"}]], "*", 
          RowBox[{
           RowBox[{"Inverse", "[", 
            RowBox[{
             RowBox[{"GF", "[", 
              RowBox[{"[", 
               RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
                RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
               RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "]"}], ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "2"], ",", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "2"]}], "}"}], "]"}], 
           ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"GF", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
              RowBox[{"GLIFtoEuclideanOld", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
                 RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "+", 
                RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"cost", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], 
            RowBox[{"-", "1"}]], "*", 
           RowBox[{"Inverse", "[", 
            RowBox[{
             RowBox[{"GF", "[", 
              RowBox[{"[", 
               RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
               RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}], 
        "*", 
        SqrtBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Epsilon]", 
            RowBox[{"-", "2"}]], "-", "1"}], ")"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"w2", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"w3", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], 
          "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"M", ",", "w1"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.849243244118244*^9, 3.8492432459269185`*^9}, 
   3.8492435269756794`*^9, {3.849247046167946*^9, 3.84924708045426*^9}, {
   3.8515757940781345`*^9, 3.851575797887997*^9}, {3.851575886961331*^9, 
   3.851575893927862*^9}, {3.851576111672484*^9, 3.851576126302498*^9}, {
   3.8515763357360535`*^9, 3.851576383445159*^9}, {3.8515764851074085`*^9, 
   3.85157650829239*^9}, {3.8515765945111017`*^9, 3.8515766103806777`*^9}, 
   3.8515794789191217`*^9, {3.8515805048840513`*^9, 3.8515805160507617`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d64562d9-e41c-4f33-94ca-45267a6414b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Input", " ", "of", " ", "Fast", " ", "Marching", " ", "algorithm", " ", 
    "is", " ", "dual", " ", "metric", " ", "D"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MetricMvectorwGFnew", "[", 
    RowBox[{"cost_", ",", "GF_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", "\[Alpha]_",
      ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M", ",", "MD", ",", "w", ",", "w1", ",", "wD"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"cost", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], 
           RowBox[{"-", "2"}]], "*", 
          RowBox[{
           RowBox[{"Inverse", "[", 
            RowBox[{
             RowBox[{"GF", "[", 
              RowBox[{"[", 
               RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
               RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "2"], ",", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "2"]}], "}"}], "]"}], 
           ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"GF", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
              RowBox[{"GLIFtoEuclideanOld", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
                RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], 
            "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"cost", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], 
            RowBox[{"-", "1"}]], "*", 
           RowBox[{"Inverse", "[", 
            RowBox[{
             RowBox[{"GF", "[", 
              RowBox[{"[", 
               RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
             RowBox[{"GLIFtoEuclideanOld", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
               RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}], 
        "*", 
        SqrtBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Epsilon]", 
            RowBox[{"-", "2"}]], "-", "1"}], ")"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"w2", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"w3", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"[", 
              RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], 
          "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"M", ",", "w1"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.849243244118244*^9, 3.8492432459269185`*^9}, 
   3.8492435269756794`*^9, {3.849247046167946*^9, 3.84924708045426*^9}, {
   3.8515757940781345`*^9, 3.851575797887997*^9}, {3.851575886961331*^9, 
   3.851575893927862*^9}, {3.851576111672484*^9, 3.851576126302498*^9}, {
   3.8515763357360535`*^9, 3.851576383445159*^9}, {3.8515764851074085`*^9, 
   3.85157650829239*^9}, {3.8515765945111017`*^9, 3.8515766103806777`*^9}, 
   3.8515794789191217`*^9, {3.8515805048840513`*^9, 3.8515805160507617`*^9}, {
   3.851775481382223*^9, 3.8517754885418406`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"1e9f1a11-52f4-4bd2-8063-f2cf5399bf61"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions Forward Gear (General)", "Subsubsection",
 CellChangeTimes->{{3.8492352286780167`*^9, 
  3.8492352350531445`*^9}},ExpressionUUID->"cfbce3e9-7223-4fa5-95da-\
6b3e3aa2a144"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MetricDvectorwForwardGear", "[", 
   RowBox[{"Min_", ",", "win_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Mout", ",", "wout"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wout", "=", "win"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Mout", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"OuterProd", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Min", ",", "win"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"Mout", ",", "wout"}], "}"}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.849235308906554*^9, 3.849235440265026*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"b7b08220-16e7-4bf1-a8a2-55bc60abd224"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions Mixed Model", "Subsubsection",
 CellChangeTimes->{{3.8604715477330093`*^9, 
  3.8604715522441254`*^9}},ExpressionUUID->"350e6411-1abf-439d-ad46-\
ebcb0c4ba6d6"],

Cell["\<\
These functions rely on a soft transition between data-driven left-invariant \
and left-invariant at the crossings using Erf(x) to weigh between data-driven \
left-invariant and left-invariant.\
\>", "Text",
 CellChangeTimes->{{3.8716330959359903`*^9, 3.8716331378295045`*^9}, {
  3.871633313590767*^9, 
  3.8716333404101114`*^9}},ExpressionUUID->"17ecf257-6e1e-410e-ab4f-\
64f55e1a6f81"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"metricMMixed", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}], ",", "\[Lambda]_", 
     ",", "GF_", ",", "crossings_", ",", 
     RowBox[{"ySelect_", ":", "0"}], ",", 
     RowBox[{"radiusCrossing_", ":", "5"}], ",", 
     RowBox[{"\[Sigma]_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "convMatrices", ",", "MGF", ",", "MLIFpart", ",", "MLIF", ",", "M", ",",
        "crossingRegion", ",", "crossingRegionM2", ",", "LocCrossing", ",", 
       "imLocCrossing", ",", "discreteGaussian"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MLIFpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{"*", "\[Xi]"}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MLIFpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MLIF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"convMatrices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["g11", "2"], ",", 
              RowBox[{
               SuperscriptBox["g11", "2"], "*", 
               SuperscriptBox["g22", 
                RowBox[{"-", "2"}]]}], ",", "g33"}], "}"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices",
          ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "MGF", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MGF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LocCrossing", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"LocCrossing", "[", 
             RowBox[{"[", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"(", "#", ")"}]}], "]"}], "]"}], ")"}], "=", "1"}], 
          ";"}], "&"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{"graphicsToImageCoordinates", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
           RowBox[{"crossings", "-", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Ny", "-", "ySelect"}]}], "}"}], ",", 
              RowBox[{"Length", "[", "crossings", "]"}]}], "]"}]}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"imLocCrossing", "=", 
       RowBox[{"Image", "[", "LocCrossing", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossingRegion", "=", 
       RowBox[{"ImageData", "[", 
        RowBox[{"Dilation", "[", 
         RowBox[{"imLocCrossing", ",", "radiusCrossing"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"discreteGaussian", "=", 
       RowBox[{"GaussianMatrix", "[", 
        RowBox[{"{", 
         RowBox[{"30", ",", "\[Sigma]"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossingRegion", "=", 
       RowBox[{
        RowBox[{"ListConvolve", "[", 
         RowBox[{"discreteGaussian", ",", "crossingRegion", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"31", ";;", 
           RowBox[{"Nx", "+", "30"}]}], ",", 
          RowBox[{"31", ";;", 
           RowBox[{"Ny", "+", "30"}]}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossingRegionM2", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"crossingRegion", ",", "N\[Theta]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"MLIF", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "crossingRegionM2"}], ")"}], "*", "\[Lambda]", 
         "*", "MGF"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8604719333342752`*^9, 3.860471978998026*^9}, {
  3.8604720187843413`*^9, 3.8604721525663443`*^9}, {3.8604721957421455`*^9, 
  3.8604722295446067`*^9}, {3.860472280118819*^9, 3.860472313836849*^9}, {
  3.8604728212693005`*^9, 3.860472972380406*^9}, {3.8604730202351303`*^9, 
  3.860473021298235*^9}, {3.8604789290488253`*^9, 3.86047893559626*^9}, {
  3.8604789920076303`*^9, 3.860479041376477*^9}, {3.8604794553688793`*^9, 
  3.8604794602834587`*^9}, {3.8604800008993845`*^9, 3.860480027785677*^9}, {
  3.860566378853761*^9, 3.860566380623497*^9}, {3.8668730464290857`*^9, 
  3.866873070350302*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"8b40f1da-d718-411e-a9a5-05327db81c63"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"metricMvectorwMixed", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}], ",", "\[Lambda]_", 
     ",", "GF_", ",", "crossings_", ",", "\[Epsilon]_", ",", 
     RowBox[{"ySelect_", ":", "0"}], ",", 
     RowBox[{"radiusCrossing_", ":", "5"}], ",", 
     RowBox[{"\[Sigma]_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "convMatrices", ",", "MGF", ",", "MLIFpart", ",", "MLIF", ",", "M", ",",
        "crossingRegion", ",", "crossingRegionM2", ",", "LocCrossing", ",", 
       "imLocCrossing", ",", "wPart", ",", "w", ",", "discreteGaussian"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MLIFpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{"*", "\[Xi]"}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MLIFpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MLIF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"convMatrices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["g11", "2"], ",", 
              RowBox[{
               SuperscriptBox["g11", "2"], "*", 
               SuperscriptBox["g22", 
                RowBox[{"-", "2"}]]}], ",", "g33"}], "}"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices",
          ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "MGF", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MGF"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LocCrossing", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"LocCrossing", "[", 
             RowBox[{"[", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"(", "#", ")"}]}], "]"}], "]"}], ")"}], "=", "1"}], 
          ";"}], "&"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{"graphicsToImageCoordinates", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
           RowBox[{"crossings", "-", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Ny", "-", "ySelect"}]}], "}"}], ",", 
              RowBox[{"Length", "[", "crossings", "]"}]}], "]"}]}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"imLocCrossing", "=", 
       RowBox[{"Image", "[", "LocCrossing", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossingRegion", "=", 
       RowBox[{"ImageData", "[", 
        RowBox[{"Dilation", "[", 
         RowBox[{"imLocCrossing", ",", "radiusCrossing"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"discreteGaussian", "=", 
       RowBox[{"GaussianMatrix", "[", 
        RowBox[{"{", 
         RowBox[{"30", ",", "\[Sigma]"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossingRegion", "=", 
       RowBox[{
        RowBox[{"ListConvolve", "[", 
         RowBox[{"discreteGaussian", ",", "crossingRegion", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"31", ";;", 
           RowBox[{"Nx", "+", "30"}]}], ",", 
          RowBox[{"31", ";;", 
           RowBox[{"Ny", "+", "30"}]}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossingRegionM2", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"crossingRegion", ",", "N\[Theta]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"crossingRegion", ",", "1."}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"MLIF", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "crossingRegionM2"}], ")"}], "*", "\[Lambda]", 
         "*", "MGF"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"wPart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Epsilon]", 
                   RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"wPart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        SuperscriptBox["cost", "1"], "*", "w"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"M", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8604719333342752`*^9, 3.860471978998026*^9}, {
   3.8604720187843413`*^9, 3.8604721525663443`*^9}, {3.8604721957421455`*^9, 
   3.8604722295446067`*^9}, {3.860472280118819*^9, 3.860472313836849*^9}, {
   3.8604728212693005`*^9, 3.860472972380406*^9}, {3.8604730202351303`*^9, 
   3.860473021298235*^9}, {3.8604789290488253`*^9, 3.86047893559626*^9}, {
   3.8604789920076303`*^9, 3.860479041376477*^9}, {3.8604794553688793`*^9, 
   3.8604794602834587`*^9}, {3.8604800008993845`*^9, 3.860480027785677*^9}, {
   3.8604818219969535`*^9, 3.86048182379181*^9}, {3.86048185637766*^9, 
   3.8604818789075594`*^9}, {3.860560692131889*^9, 3.8605606982984896`*^9}, {
   3.860565897672941*^9, 3.8605659018422546`*^9}, {3.860566419702878*^9, 
   3.860566427735463*^9}, {3.8605705642633567`*^9, 3.860570586422425*^9}, {
   3.860570657683031*^9, 3.8605706751215134`*^9}, 3.860570956102167*^9, 
   3.860571198824343*^9, {3.8668729070744076`*^9, 3.8668729578483195`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"4ae58569-d60e-4458-b6ae-e85170e56e6d"],

Cell["\<\
These functions rely on a hard transition between data-driven left-invariant \
and left-invariant at the crossings.\
\>", "Text",
 CellChangeTimes->{{3.871633143222447*^9, 
  3.8716331740545425`*^9}},ExpressionUUID->"95838915-4074-4e7f-8131-\
247f8c396706"],

Cell[BoxData[
 RowBox[{
  RowBox[{"metricMMixed", "[", 
   RowBox[{"cost_", ",", 
    RowBox[{"{", 
     RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}], ",", "\[Lambda]_", 
    ",", "GF_", ",", "crossings_", ",", 
    RowBox[{"ySelect_", ":", "0"}], ",", 
    RowBox[{"radiusCrossing_", ":", "5"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "convMatrices", ",", "MGF", ",", "MLIFpart", ",", "MLIF", ",", "M", ",", 
      "crossingRegion", ",", "crossingRegionM2", ",", "LocCrossing", ",", 
      "imLocCrossing"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MLIFpart", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["\[Xi]", "2"], ",", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], "*", 
             SuperscriptBox["\[Zeta]", 
              RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"*", "\[Xi]"}], "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MLIF", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"MLIFpart", ",", 
        RowBox[{"{", 
         RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MLIF", "=", 
      RowBox[{
       SuperscriptBox["cost", "2"], "*", "MLIF"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"convMatrices", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"GF", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"MGF", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["g11", "2"], ",", 
             RowBox[{
              SuperscriptBox["g11", "2"], "*", 
              SuperscriptBox["g22", 
               RowBox[{"-", "2"}]]}], ",", "g33"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices", 
        ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MGF", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "/", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "MGF", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MGF", "=", 
      RowBox[{
       SuperscriptBox["cost", "2"], "*", "MGF"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LocCrossing", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"LocCrossing", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"(", "#", ")"}]}], "]"}], "]"}], ")"}], "=", "1"}], 
         ";"}], "&"}], ",", 
       RowBox[{"Round", "[", 
        RowBox[{"graphicsToImageCoordinates", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
          RowBox[{"crossings", "-", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Ny", "-", "ySelect"}]}], "}"}], ",", 
             RowBox[{"Length", "[", "crossings", "]"}]}], "]"}]}]}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"imLocCrossing", "=", 
      RowBox[{"Image", "[", "LocCrossing", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"crossingRegion", "=", 
      RowBox[{"ImageData", "[", 
       RowBox[{"Dilation", "[", 
        RowBox[{"imLocCrossing", ",", "radiusCrossing"}], "]"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"crossingRegionM2", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"crossingRegion", ",", "N\[Theta]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"MLIF", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "crossingRegionM2"}], ")"}], "*", "\[Lambda]", "*",
         "MGF"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8604719333342752`*^9, 3.860471978998026*^9}, {
  3.8604720187843413`*^9, 3.8604721525663443`*^9}, {3.8604721957421455`*^9, 
  3.8604722295446067`*^9}, {3.860472280118819*^9, 3.860472313836849*^9}, {
  3.8604728212693005`*^9, 3.860472972380406*^9}, {3.8604730202351303`*^9, 
  3.860473021298235*^9}, {3.8604789290488253`*^9, 3.86047893559626*^9}, {
  3.8604789920076303`*^9, 3.860479041376477*^9}, {3.8604794553688793`*^9, 
  3.8604794602834587`*^9}, {3.8604800008993845`*^9, 3.860480027785677*^9}, {
  3.860566378853761*^9, 3.860566380623497*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"af97668e-c174-4b75-97c5-6c3383dc1f7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"metricMvectorwMixed", "[", 
   RowBox[{"cost_", ",", 
    RowBox[{"{", 
     RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}], ",", "\[Lambda]_", 
    ",", "GF_", ",", "crossings_", ",", "\[Epsilon]_", ",", 
    RowBox[{"ySelect_", ":", "0"}], ",", 
    RowBox[{"radiusCrossing_", ":", "5"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "convMatrices", ",", "MGF", ",", "MLIFpart", ",", "MLIF", ",", "M", ",", 
      "crossingRegion", ",", "crossingRegionM2", ",", "LocCrossing", ",", 
      "imLocCrossing", ",", "wPart", ",", "w"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MLIFpart", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["\[Xi]", "2"], ",", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], "*", 
             SuperscriptBox["\[Zeta]", 
              RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"*", "\[Xi]"}], "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MLIF", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"MLIFpart", ",", 
        RowBox[{"{", 
         RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MLIF", "=", 
      RowBox[{
       SuperscriptBox["cost", "2"], "*", "MLIF"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"convMatrices", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"GF", "[", 
           RowBox[{"[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"MGF", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["g11", "2"], ",", 
             RowBox[{
              SuperscriptBox["g11", "2"], "*", 
              SuperscriptBox["g22", 
               RowBox[{"-", "2"}]]}], ",", "g33"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices", 
        ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MGF", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "/", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "MGF", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MGF", "=", 
      RowBox[{
       SuperscriptBox["cost", "2"], "*", "MGF"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LocCrossing", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"LocCrossing", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"(", "#", ")"}]}], "]"}], "]"}], ")"}], "=", "1"}], 
         ";"}], "&"}], ",", 
       RowBox[{"Round", "[", 
        RowBox[{"graphicsToImageCoordinates", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
          RowBox[{"crossings", "-", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Ny", "-", "ySelect"}]}], "}"}], ",", 
             RowBox[{"Length", "[", "crossings", "]"}]}], "]"}]}]}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"imLocCrossing", "=", 
      RowBox[{"Image", "[", "LocCrossing", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"crossingRegion", "=", 
      RowBox[{"ImageData", "[", 
       RowBox[{"Dilation", "[", 
        RowBox[{"imLocCrossing", ",", "radiusCrossing"}], "]"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"crossingRegionM2", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"crossingRegion", ",", "N\[Theta]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"crossingRegion", ",", "1."}], "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"MLIF", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "crossingRegionM2"}], ")"}], "*", "\[Lambda]", "*",
         "MGF"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"wPart", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{"GLIFtoEuclideanOld", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Xi]", "2"], "*", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[Epsilon]", 
                  RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", "0", "}"}]}], "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"wPart", ",", 
        RowBox[{"{", 
         RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"w", "=", 
      RowBox[{
       SuperscriptBox["cost", "1"], "*", "w"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"M", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8604719333342752`*^9, 3.860471978998026*^9}, {
   3.8604720187843413`*^9, 3.8604721525663443`*^9}, {3.8604721957421455`*^9, 
   3.8604722295446067`*^9}, {3.860472280118819*^9, 3.860472313836849*^9}, {
   3.8604728212693005`*^9, 3.860472972380406*^9}, {3.8604730202351303`*^9, 
   3.860473021298235*^9}, {3.8604789290488253`*^9, 3.86047893559626*^9}, {
   3.8604789920076303`*^9, 3.860479041376477*^9}, {3.8604794553688793`*^9, 
   3.8604794602834587`*^9}, {3.8604800008993845`*^9, 3.860480027785677*^9}, {
   3.8604818219969535`*^9, 3.86048182379181*^9}, {3.86048185637766*^9, 
   3.8604818789075594`*^9}, {3.860560692131889*^9, 3.8605606982984896`*^9}, {
   3.860565897672941*^9, 3.8605659018422546`*^9}, {3.860566419702878*^9, 
   3.860566427735463*^9}, {3.8605705642633567`*^9, 3.860570586422425*^9}, {
   3.860570657683031*^9, 3.8605706751215134`*^9}, 3.860570956102167*^9, 
   3.860571198824343*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"8f47d18d-4fd9-4c3c-90f9-c25ef880bd7b"],

Cell["\<\
These functions rely on a soft transition between data-driven left-invariant \
and left-invariant at the crossings using Gaussian distributions to weigh \
between data-driven left-invariant and left-invariant.\
\>", "Text",
 CellChangeTimes->{{3.8716332612765384`*^9, 
  3.871633304964526*^9}},ExpressionUUID->"4f7c751a-008d-4f9b-8c93-\
106fcaf49d72"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"GaussianMixingLayer", "[", 
    RowBox[{"crossings_", ",", "Nx_", ",", "Ny_", ",", 
     RowBox[{"\[Sigma]_", ":", "5"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gaussianmatrix", ",", 
       RowBox[{"mixing", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"mixingTotal", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"r", "=", 
        RowBox[{"\[Sigma]", "*", "5"}]}], ",", "xmin", ",", "xmax", ",", 
       "ymin", ",", "ymax", ",", "xminGaussian", ",", "xmaxGaussian", ",", 
       "yminGaussian", ",", "ymaxGaussian"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gaussianmatrix", "=", 
       RowBox[{"GaussianMatrix", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", "r"}], "}"}], ",", "\[Sigma]"}], "}"}], ",", 
         " ", 
         RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", 
         RowBox[{"Length", "[", "crossings", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xmin", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"crossings", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "-", "r"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xmax", "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"crossings", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "+", "r"}], ",",
             "Nx"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ymin", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"crossings", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "-", "r"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ymax", "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"crossings", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "+", "r"}], ",",
             "Ny"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"mixing", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xminGaussian", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", "+", "1", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{"crossings", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "-", "1"}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xmaxGaussian", "=", 
          RowBox[{"r", "+", "1", "+", 
           RowBox[{"Min", "[", 
            RowBox[{"r", ",", 
             RowBox[{"Nx", "-", 
              RowBox[{"(", 
               RowBox[{"Round", "[", 
                RowBox[{"crossings", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ")"}]}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"yminGaussian", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", "+", "1", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{"crossings", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "-", "1"}], 
              ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ymaxGaussian", "=", 
          RowBox[{"r", "+", "1", "+", 
           RowBox[{"Min", "[", 
            RowBox[{"r", ",", 
             RowBox[{"Ny", "-", 
              RowBox[{"(", 
               RowBox[{"Round", "[", 
                RowBox[{"crossings", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ")"}]}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mixing", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"Ny", "+", "1", "-", "ymax"}], ";;", 
              RowBox[{"Ny", "+", "1", "-", "ymin"}]}], ",", 
             RowBox[{"xmin", ";;", "xmax"}]}], "]"}], "]"}], "=", 
          RowBox[{"gaussianmatrix", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "r"}], "+", "2", "-", "ymaxGaussian"}], ";;", 
              RowBox[{
               RowBox[{"2", "r"}], "+", "2", "-", "yminGaussian"}]}], ",", 
             RowBox[{"xminGaussian", ";;", "xmaxGaussian"}]}], "]"}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"mixingTotal", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"Max", ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mixingTotal", ",", "mixing"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "mixingTotal", "]"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQrZOqfZXl3BvH/sXub0B0h7DnHxA9aVHxXxAd1rEt
UAtIM+2YnQeiz1QYFIPoDcI1FSD608fPtSB6S+3dNhAtL8hZqwukJVTezgDR
Vfcl54Ho/wdeLgHR82RU94ForoN5B0D0sthHR0A02+LEUyA6peXgMxB9e8uM
1yB6+rxJn0D0j+j0PyCa03sxgx6QviRQxwmipZzX8ILoX7FaAiD6WbqmEYje
prXMHEQ31H1yBNFxEhJOIHp5ztFgEH2O4WU4iD6yXllAH0g/OR8pAaLjji7d
E3MD6M/4rr0g2iRy+jsQfd6x8AOIBgDRXKFz
  "],
 CellLabel->"In[58]:=",ExpressionUUID->"7895af50-cf61-4a56-ac44-4877d4fd63da"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"metricMMixed1", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}], ",", "\[Lambda]_", 
     ",", "GF_", ",", "crossings_", ",", 
     RowBox[{"ySelect_", ":", "0"}], ",", 
     RowBox[{"radiusCrossing_", ":", "5"}], ",", 
     RowBox[{"image_", ":", "im"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "convMatrices", ",", "MGF", ",", "MLIFpart", ",", "MLIF", ",", "M", ",",
        "crossingRegion", ",", "crossingRegionM2", ",", "LocCrossing", ",", 
       "imLocCrossing", ",", "mixing", ",", 
       RowBox[{"NxIm", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"NyIm", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MLIFpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{"*", "\[Xi]"}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MLIFpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MLIF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"convMatrices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["g11", "2"], ",", 
              RowBox[{
               SuperscriptBox["g11", "2"], "*", 
               SuperscriptBox["g22", 
                RowBox[{"-", "2"}]]}], ",", "g33"}], "}"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices",
          ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "MGF", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MGF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mixing", "=", 
       RowBox[{"Rescale", "[", 
        RowBox[{
         RowBox[{"GaussianMixingLayer", "[", 
          RowBox[{
          "crossings", ",", "NxIm", ",", "NyIm", ",", "radiusCrossing"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{";;", "ySelect"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"MLIF", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "mixing"}], ")"}], "*", "\[Lambda]", "*", 
         "MGF"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "M", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.865914541843207*^9, 3.8659145437932525`*^9}, {
  3.8661974061737423`*^9, 3.866197568543014*^9}, {3.8661976279436197`*^9, 
  3.866197650860231*^9}, {3.8661977005989094`*^9, 3.8661977157193985`*^9}, {
  3.86619811908522*^9, 3.8661981205939927`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"22a79dc4-a316-4310-a784-673db749a6be"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"metricMvectorwMixed1", "[", 
    RowBox[{"cost_", ",", 
     RowBox[{"{", 
      RowBox[{"Nx_", ",", "Ny_", ",", "N\[Theta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]_", ",", "\[Zeta]_", ",", "\[Delta]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g11_", ",", "g22_", ",", "g33_"}], "}"}], ",", "\[Lambda]_", 
     ",", "GF_", ",", "crossings_", ",", "\[Epsilon]_", ",", 
     RowBox[{"ySelect_", ":", "0"}], ",", 
     RowBox[{"radiusCrossing_", ":", "5"}], ",", 
     RowBox[{"image_", ":", "im"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "convMatrices", ",", "MGF", ",", "MLIFpart", ",", "MLIF", ",", "M", ",",
        "crossingRegion", ",", "crossingRegionM2", ",", "LocCrossing", ",", 
       "imLocCrossing", ",", "wPart", ",", "w", ",", "mixing", ",", 
       RowBox[{"NxIm", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"NyIm", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MLIFpart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["\[Xi]", "2"], ",", 
             RowBox[{
              SuperscriptBox["\[Xi]", "2"], "*", 
              SuperscriptBox["\[Zeta]", 
               RowBox[{"-", "2"}]]}], ",", "\[Delta]"}], "}"}], "]"}], ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Inverse", "[", 
            RowBox[{"GLIFtoEuclideanOld", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
              RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{"*", "\[Xi]"}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"MLIFpart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MLIF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MLIF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"convMatrices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], ".", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "Nx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "Ny"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["g11", "2"], ",", 
              RowBox[{
               SuperscriptBox["g11", "2"], "*", 
               SuperscriptBox["g22", 
                RowBox[{"-", "2"}]]}], ",", "g33"}], "}"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}], ",", "convMatrices",
          ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", "MGF", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MGF", "=", 
       RowBox[{
        SuperscriptBox["cost", "2"], "*", "MGF"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mixing", "=", 
       RowBox[{"Rescale", "[", 
        RowBox[{
         RowBox[{"GaussianMixingLayer", "[", 
          RowBox[{
          "crossings", ",", "NxIm", ",", "NyIm", ",", "radiusCrossing"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{";;", "ySelect"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"crossingRegion", ",", "1."}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"MLIF", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "mixing"}], ")"}], "*", "\[Lambda]", "*", 
         "MGF"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"wPart", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"GLIFtoEuclideanOld", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "2", 
             RowBox[{"\[Pi]", "/", "N\[Theta]"}]}], "]"}], "]"}], ".", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Xi]", "2"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[Epsilon]", 
                   RowBox[{"-", "2"}]], "-", "1"}], ")"}]}]], "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", "0", "}"}]}], "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "1", ",", "N\[Theta]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"wPart", ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{
        SuperscriptBox["cost", "1"], "*", "w"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"M", ",", "w"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8604719333342752`*^9, 3.860471978998026*^9}, {
   3.8604720187843413`*^9, 3.8604721525663443`*^9}, {3.8604721957421455`*^9, 
   3.8604722295446067`*^9}, {3.860472280118819*^9, 3.860472313836849*^9}, {
   3.8604728212693005`*^9, 3.860472972380406*^9}, {3.8604730202351303`*^9, 
   3.860473021298235*^9}, {3.8604789290488253`*^9, 3.86047893559626*^9}, {
   3.8604789920076303`*^9, 3.860479041376477*^9}, {3.8604794553688793`*^9, 
   3.8604794602834587`*^9}, {3.8604800008993845`*^9, 3.860480027785677*^9}, {
   3.8604818219969535`*^9, 3.86048182379181*^9}, {3.86048185637766*^9, 
   3.8604818789075594`*^9}, {3.860560692131889*^9, 3.8605606982984896`*^9}, {
   3.860565897672941*^9, 3.8605659018422546`*^9}, {3.860566419702878*^9, 
   3.860566427735463*^9}, {3.8605705642633567`*^9, 3.860570586422425*^9}, {
   3.860570657683031*^9, 3.8605706751215134`*^9}, 3.860570956102167*^9, 
   3.860571198824343*^9, {3.8661980496981277`*^9, 3.8661981099615846`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"f47010f5-f82c-4e79-b008-d1db51a05268"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellChangeTimes->{{3.8721393342222137`*^9, 
  3.8721393357791758`*^9}},ExpressionUUID->"fe2863e6-450e-4d35-9d02-\
32c3f7e292bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"figBaseTrack", "[", "baseimage_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nx", ",", "Ny", ",", "N\[Theta]"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "N\[Theta]"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", 
       RowBox[{"ImageData", "[", "baseimage", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Texture", "[", "baseimage", "]"}], ",", 
        RowBox[{"EdgeForm", "[", "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Nx", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Nx", ",", "Ny", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "Ny", ",", "0"}], "}"}]}], "}"}], ",", 
          RowBox[{"VertexTextureCoordinates", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852194091113632*^9, 3.8521941027758017`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"1009fc51-ca87-4039-bcb6-b04b44705773"],

Cell[CellGroupData[{

Cell["Curves", "Subsection",
 CellChangeTimes->{{3.872238774324676*^9, 
  3.8722387764122667`*^9}},ExpressionUUID->"ac375fd0-2341-45f1-9f78-\
09dd7cf97777"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotContoursR2oneColor", "[", 
   RowBox[{
   "U_", ",", "Ncontours_", ",", "\[Lambda]_", ",", "baseImage_", ",", "g_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "contours", ",", "base", ",", "Nx", ",", "Ny", ",", "x", ",", "y", ",", 
      "\[Theta]", ",", "gnew"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", 
       RowBox[{"ImageData", "[", "baseImage", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"g", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"g", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gnew", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", "-", ".5"}], ",", 
         RowBox[{"Nx", "+", "1", "-", "x", "-", ".5"}]}], "}"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"contours", "=", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Min", ",", "U", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Contours", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "0.2", "i"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "Ncontours"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ContourStyle", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Opacity", "[", "1.0", "]"}], ",", 
             RowBox[{"Specularity", "[", 
              RowBox[{"White", ",", "30"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.0025", "]"}], ",", 
             RowBox[{"ColorData", "[", 
              RowBox[{"\"\<SolarColors\>\"", ",", " ", ".5"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{"ColorData", "[", 
              RowBox[{"\"\<SolarColors\>\"", ",", " ", ".2"}], "]"}], "*)"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "Ncontours"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"ImageAspectRatio", "[", "baseImage", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Large", "]"}], ",", "Green", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{";;", "2"}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SetAlphaChannel", "[", 
          RowBox[{"baseImage", ",", "0.333"}], "]"}], ",", "contours", ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"PointSize", "[", "Large", "]"}], ",", 
            RowBox[{"Point", "[", "gnew", "]"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7984378177091007`*^9, 3.798437846972333*^9}, {
   3.7984379364683695`*^9, 3.798437939487838*^9}, {3.8103613475922956`*^9, 
   3.810361357406309*^9}, {3.8127340910689335`*^9, 3.812734129916703*^9}, {
   3.8127342396258764`*^9, 3.8127342634418945`*^9}, {3.8127343206978583`*^9, 
   3.8127343234842606`*^9}, {3.812734508623558*^9, 3.81273451243145*^9}, {
   3.8127345631217256`*^9, 3.8127345664960427`*^9}, 3.8127348957144575`*^9, {
   3.8127349442134414`*^9, 3.812734970818735*^9}, {3.812735007002796*^9, 
   3.8127350305048037`*^9}, {3.8127350842907224`*^9, 
   3.8127351178570814`*^9}, {3.812735302492604*^9, 3.812735310656954*^9}, {
   3.8127354769065485`*^9, 3.812735477084334*^9}, {3.8127355147722635`*^9, 
   3.8127355213645215`*^9}, {3.8127360387014594`*^9, 3.8127360646841*^9}, {
   3.812736290613755*^9, 3.8127363104013023`*^9}, {3.8127364383000107`*^9, 
   3.8127364480985336`*^9}, {3.812736494075801*^9, 3.812736497786374*^9}, 
   3.81273655270789*^9, {3.812737002558903*^9, 3.8127370351142454`*^9}, {
   3.812737201164796*^9, 3.812737244918272*^9}, {3.812737360412074*^9, 
   3.812737382963398*^9}, {3.8127374491563115`*^9, 3.812737452379822*^9}, 
   3.812737531606521*^9, {3.812737594544076*^9, 3.8127376318152866`*^9}, 
   3.8127376926951103`*^9, {3.8128879891732388`*^9, 3.8128879910944557`*^9}, {
   3.856430771003416*^9, 3.8564307752089057`*^9}, 3.8564308341733503`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"576fe36d-6313-4923-9944-a2d41f892302"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PlotCurve", "[", 
   RowBox[{"curveD_", ",", "sourceImage_", ",", "g_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "contours", ",", "base", ",", "Nx", ",", "Ny", ",", "x", ",", "y", ",", 
      "\[Theta]", ",", "gnew"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", 
       RowBox[{"ImageData", "[", "sourceImage", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"g", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"g", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gnew", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", "-", ".5"}], ",", 
         RowBox[{"Nx", "+", "1", "-", "x", "-", ".5"}]}], "}"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sourceImage", ",", "\n", "\t", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", "Thick", ",", " ", 
            RowBox[{"Line", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "-", "0.5"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"ImageData", "[", "sourceImage", "]"}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  "-", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "+", "0.5"}]}], "}"}], "&"}], "/@", "curveD"}], "]"}]}], 
           "}"}], "]"}], ",", "\n", "\t", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", " ", 
            RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", 
            RowBox[{"Point", "[", "gnew", "]"}]}], "}"}], "]"}]}], "}"}], ",",
        "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotCurveColor", "[", 
    RowBox[{"curveD_", ",", "sourceImage_", ",", "g_", ",", "color_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "contours", ",", "base", ",", "Nx", ",", "Ny", ",", "x", ",", "y", ",", 
       "\[Theta]", ",", "gnew"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", 
        RowBox[{"ImageData", "[", "sourceImage", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"g", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"g", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gnew", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"y", "-", ".5"}], ",", 
          RowBox[{"Nx", "+", "1", "-", "x", "-", ".5"}]}], "}"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sourceImage", ",", "\n", "\t", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{"color", ",", " ", "Thick", ",", " ", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", "0.5"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"ImageData", "[", "sourceImage", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   "-", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "0.5"}]}], "}"}], "&"}], "/@",
                "curveD"}], "]"}]}], "}"}], "]"}], ",", "\n", "\t", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", 
             RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", 
             RowBox[{"Point", "[", "gnew", "]"}]}], "}"}], "]"}]}], "}"}], 
        ",", "\n", "\t", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"figBase", "[", "baseimage_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", 
        RowBox[{"ImageData", "[", "baseimage", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Texture", "[", "baseimage", "]"}], ",", 
         RowBox[{"EdgeForm", "[", "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Nx", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Nx", ",", "Ny", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "Ny", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"VertexTextureCoordinates", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot3Dcurve", "[", 
   RowBox[{"curve_", ",", "image_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "@", "Blue"}], ",", 
         RowBox[{"Thickness", "[", "0.018", "]"}], ",", 
         RowBox[{"Line", "[", "curve", "]"}]}], "}"}], ",", 
       RowBox[{"ViewPoint", "\[Rule]", "Above"}], ",", 
       RowBox[{"ViewAngle", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"figBase", "[", "image", "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.796727681996157*^9, 3.7967276972799077`*^9}, {
   3.796728703749896*^9, 3.796728738684182*^9}, 3.7967287866103764`*^9, {
   3.800702614597906*^9, 3.800702614982751*^9}, {3.8127377556977715`*^9, 
   3.8127380198119326`*^9}, {3.8127380739271183`*^9, 
   3.8127380751568317`*^9}, {3.8130396716251974`*^9, 3.813039753152429*^9}, {
   3.8130398041002336`*^9, 3.8130398113438425`*^9}, {3.8130449657397776`*^9, 
   3.813044975158205*^9}, {3.8130470401751227`*^9, 3.813047041750839*^9}, 
   3.830243062415361*^9, {3.859364586176998*^9, 3.859364595741958*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"3aa7b486-9c62-4018-84f7-88bc0ae9be11"]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Sets", "Subsection",
 CellChangeTimes->{{3.8722387584937005`*^9, 
  3.872238761284214*^9}},ExpressionUUID->"8289883a-4ca1-4298-9e7e-\
a14ecf77d852"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SphereAtGroupElementGraphicsLIF", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], ",", "\[Xi]_", ",", 
    "\[Zeta]_", ",", "\[Epsilon]_", ",", "Nx_", ",", "s\[Theta]_", ",", 
    RowBox[{"scaling_", ":", "10"}]}], "]"}], ":=", 
  RowBox[{"Translate", "[", 
   RowBox[{
    RowBox[{"Rotate", "[", 
     RowBox[{
      RowBox[{"Scale", "[", 
       RowBox[{
        RowBox[{"First", "@", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], "*", 
              RowBox[{"Sin", "[", "\[Psi]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], "*", 
              RowBox[{"Sin", "[", "\[Psi]", "]"}]}], ",", 
             RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Psi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}]}], ",", 
        RowBox[{"scaling", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "\[Xi]"], ",", 
           RowBox[{"\[Epsilon]", 
            FractionBox["\[Zeta]", "\[Xi]"]}], ",", "1"}], 
          RowBox[{"(*", 
           RowBox[{"\[Mu]", "/", "s\[Theta]"}], "*)"}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "s\[Theta]"}], "]"}],
           ",", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "1"}], ")"}], "*", "s\[Theta]"}], "]"}],
           ",", "0"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87223898302089*^9, 3.8722390011548843`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"b050779d-aa25-4cd5-886e-9723070f4b71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SphereAtGroupElementGraphicsGF", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1_", ",", "y1_", ",", "\[Theta]1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2_", ",", "y2_", ",", "\[Theta]2_"}], "}"}]}], "}"}], ",", 
    "\[Xi]_", ",", "\[Zeta]_", ",", "\[Epsilon]_", ",", "Nx_", ",", 
    "s\[Theta]_", ",", 
    RowBox[{"scaling_", ":", "10"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"output", ",", "tangent", ",", 
      RowBox[{"\[Alpha]", "=", "0"}], ",", "matrix", ",", "eigenvalues", ",", 
      "eigenvectors"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tangent", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x2", ",", "y2", ",", "\[Theta]2"}], "}"}], "-", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1", ",", "\[Theta]1"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"First", "@", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"UnitStep", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"RotationMatrix", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                   "tangent"}], "}"}], "]"}], ".", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "0.1"], 
                   RowBox[{"Cos", "[", "\[Phi]", "]"}], "*", 
                   RowBox[{"Sin", "[", "\[Psi]", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Phi]", "]"}], "*", 
                   RowBox[{"Sin", "[", "\[Psi]", "]"}]}], ",", 
                  RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], ")"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "tangent"}], 
               "}"}], "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                FractionBox["1", "0.1"], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Psi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Phi]", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Psi]", "]"}]}], ",", 
               RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", 
             RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Psi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "y1", ",", "\[Theta]1"}], "}"}]}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "output", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852112659892599*^9, 3.852112660302884*^9}, {
   3.8521127596780047`*^9, 3.8521127747264996`*^9}, {3.8521729829284897`*^9, 
   3.852173168340942*^9}, {3.8521738336051817`*^9, 3.852173834928988*^9}, {
   3.8521739236329513`*^9, 3.8521739496192265`*^9}, {3.8521743299845715`*^9, 
   3.8521744145959635`*^9}, {3.8521744996320333`*^9, 
   3.8521745020269146`*^9}, {3.8521746139402847`*^9, 
   3.8521746164705505`*^9}, {3.8521767494264708`*^9, 3.8521767969247494`*^9}, 
   3.8521769340375414`*^9, {3.8521770216479425`*^9, 3.852177163977832*^9}, {
   3.8521772123140965`*^9, 3.8521772908692713`*^9}, {3.8521773472946153`*^9, 
   3.8521773530227137`*^9}, {3.8521773831792917`*^9, 3.852177418287449*^9}, {
   3.852177779639147*^9, 3.852177807895052*^9}, {3.852177998340762*^9, 
   3.8521781537309847`*^9}, {3.8521798685271015`*^9, 3.852179881688714*^9}, {
   3.852180094092942*^9, 3.852180094460593*^9}, 3.8521841024463654`*^9, {
   3.852184192890461*^9, 3.8521842243477697`*^9}, {3.8521843103139143`*^9, 
   3.8521843332581778`*^9}, 3.8521844305501504`*^9, {3.8521921310118427`*^9, 
   3.852192141764427*^9}, {3.852192305602149*^9, 3.85219233960964*^9}, {
   3.8521923723385997`*^9, 3.8521924020817432`*^9}, {3.8521925032065334`*^9, 
   3.8521925589958305`*^9}, {3.8521925924430885`*^9, 
   3.8521925999414644`*^9}, {3.8521926409325275`*^9, 
   3.8521926892276917`*^9}, {3.852192728816193*^9, 3.8521927300751286`*^9}, {
   3.8521931217015953`*^9, 3.852193138651581*^9}, {3.872238928750216*^9, 
   3.8722389290333247`*^9}, 3.872239012141037*^9, {3.8722412482647996`*^9, 
   3.872241248437806*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"e4b8341c-28be-4813-9c45-aedee974d661"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exponential curves", "Subsection",
 CellChangeTimes->{{3.872238784741791*^9, 
  3.8722387900217876`*^9}},ExpressionUUID->"b8a00dca-8c01-4242-afbd-\
c1471cd86bfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expCurve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c1_", ",", "c2_", ",", "c3_"}], "}"}], ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c3", "\[Equal]", "0.0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "c1", " ", "t"}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "c2", " ", "t"}]}], ",", 
      RowBox[{"y", "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "c1", " ", "t"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "c2", " ", "t"}]}], ",", 
      "\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{
        FractionBox["1", "c3"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"c3", " ", "t"}], "]"}]}], "+", 
             RowBox[{"c2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"c3", " ", "t"}], "]"}], "-", "1"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"c3", " ", "t"}], "]"}]}], ")"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"c3", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"y", "+", 
       RowBox[{
        FractionBox["1", "c3"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"c3", " ", "t"}], "]"}]}], "+", 
             RowBox[{"c2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"c3", " ", "t"}], "]"}], "-", "1"}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"c3", " ", "t"}], "]"}]}], ")"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"c3", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "+", 
       RowBox[{"c3", " ", "t"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796452884111987*^9, 3.7964528869533653`*^9}, {
  3.7964529228746195`*^9, 3.7964530046677647`*^9}, {3.796453035110244*^9, 
  3.796453040400176*^9}, {3.7964532398594265`*^9, 3.796453272186737*^9}, {
  3.7964533022541046`*^9, 3.7964535426420226`*^9}, {3.7964537102359443`*^9, 
  3.7964537136174855`*^9}, {3.7964537667393336`*^9, 3.796453767203065*^9}, {
  3.796453823051646*^9, 3.7964538433096123`*^9}, {3.79645390327275*^9, 
  3.796453970811256*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"49f7bf85-0d9c-4771-b843-912f3c374e59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotGaugeFrameFG", "[", 
   RowBox[{
   "oc_", ",", "gf_", ",", "positions_", ",", "numSamples_", ",", "length_", 
    ",", "baseImage_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xyList", ",", "\[Theta]dList", ",", "\[Theta]List", ",", "cList", ",", 
      "gdList", ",", "gList", ",", "Nx", ",", "Ny", ",", "N\[Theta]", ",", 
      "s\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "N\[Theta]"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "oc", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s\[Theta]", "=", 
      RowBox[{"2", 
       FractionBox["\[Pi]", "N\[Theta]"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xyList", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"positions", ",", "numSamples"}], "]"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "selection", " ", "of", " ", "a", " ", "number", " ", "of", " ", 
        "samples"}], ",", " ", 
       RowBox[{
       "now", " ", "Random", " ", "later", " ", "adapt", " ", "if", " ", 
        "needed"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Ordering", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"oc", "\[LeftDoubleBracket]", 
             RowBox[{"Sequence", "@@", "#"}], "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "&"}], "/@", "xyList"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", " ", "\[Theta]"}], "-", 
        RowBox[{
        "component", " ", "with", " ", "maximum", " ", "abs", " ", "value", 
         " ", "in", " ", "orientation", " ", "confidence"}]}], ",", " ", 
       RowBox[{
        RowBox[{"label", " ", "d"}], "=", " ", "\"\<discrete\>\""}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gdList", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", "xyList", "]"}], ",", 
           RowBox[{"{", "\[Theta]dList", "}"}]}], "}"}], ",", "1"}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Put", " ", "everything", " ", "togteher", " ", "x"}], "-", 
       "y", "-", "\[Theta]", "-", "coord"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]List", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Theta]dList", "-", "1"}], ")"}], "s\[Theta]"}]}], ";", 
     "                                        ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "convert", " ", "to", " ", "continuous", " ", "coordinates", " ", "so", 
       " ", "that", " ", "exponential", " ", "curve", " ", "formulas", " ", 
       "can", " ", "be", " ", "used"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gList", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", "xyList", "]"}], ",", 
           RowBox[{"{", "\[Theta]List", "}"}]}], "}"}], ",", "1"}], "]"}], 
       "]"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Put", " ", "everything", " ", "together", " ", "in", " ", 
        "continuous", " ", "x"}], "-", "y", "-", "\[Theta]", "-", "coord"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"gf", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"Sequence", "@@", "#"}], ",", "1"}], 
         "\[RightDoubleBracket]"}], "&"}], "/@", "gdList"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Pul", " ", "first", " ", "row", " ", "from", " ", "the", " ", "gf", 
       " ", "list", " ", "so", " ", "this", " ", "gives", " ", "the", " ", 
       "first", " ", "gauge", " ", "vector", " ", "field", " ", "in", " ", 
       "discrete", " ", "coordinates"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Convert", " ", "coordinates", " ", "to", " ", "image", " ", 
         "coordinates", " ", "x", " ", "and", " ", "y", " ", "axes", " ", 
         "are", " ", "flipped"}], ",", " ", 
        RowBox[{
        "this", " ", "causes", " ", "rotation", " ", "direction", " ", "to", 
         " ", "reverse"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", "0.5"}], ",", 
               RowBox[{"Nx", "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "0.5"}]}], "}"}], "&"}], "@", 
            RowBox[{"expCurve", "[", 
             RowBox[{
              RowBox[{
              "gList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               ",", 
              RowBox[{
              "cList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               ",", "t"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{
              RowBox[{"-", "length"}], "/", "2"}], ",", 
             RowBox[{"length", "/", "2"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.008", "]"}], ",", "Orange"}], 
             "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "gList", "]"}], ",", "1"}], "}"}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7977513630325637`*^9, 3.797751411706707*^9}, {
   3.797751480251086*^9, 3.797751551609975*^9}, {3.7977515825636168`*^9, 
   3.7977515834843903`*^9}, {3.7977517099040036`*^9, 3.797751800786234*^9}, {
   3.797751923725185*^9, 3.7977520622065196`*^9}, {3.7977521637000594`*^9, 
   3.797752276292592*^9}, {3.7977523175393844`*^9, 3.797752490557062*^9}, {
   3.797752574547472*^9, 3.797752862270906*^9}, 3.797752917528504*^9, {
   3.7977531059781322`*^9, 3.7977531402233887`*^9}, {3.7977531786557655`*^9, 
   3.797753266053121*^9}, {3.797757528467003*^9, 3.797757543808408*^9}, {
   3.797763743319216*^9, 3.797763810799045*^9}, {3.8047673531428843`*^9, 
   3.8047673626679277`*^9}, {3.804912061192582*^9, 3.804912354786599*^9}, {
   3.804912396185414*^9, 3.804912475929165*^9}, 3.810372268262021*^9, {
   3.8118366270003057`*^9, 3.8118366471048317`*^9}, {3.811840371789135*^9, 
   3.8118403777397127`*^9}, {3.8515860771115217`*^9, 3.8515861275446634`*^9}, 
   3.8515867351272583`*^9, 3.8523759627854767`*^9, 3.872241240464414*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"009df119-22f8-4a2f-be23-5c2ce1e26725"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotGaugeFrameFGNew", "[", 
   RowBox[{
   "oc_", ",", "gf_", ",", "positions_", ",", "numSamples_", ",", "length_", 
    ",", "baseImage_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xyList", ",", "\[Theta]dList", ",", "\[Theta]List", ",", "cList", ",", 
      "gdList", ",", "gList", ",", "Nx", ",", "Ny", ",", "N\[Theta]", ",", 
      "s\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "N\[Theta]"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "oc", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s\[Theta]", "=", 
      RowBox[{"2", 
       FractionBox["\[Pi]", "N\[Theta]"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xyList", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"positions", ",", "numSamples"}], "]"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "selection", " ", "of", " ", "a", " ", "number", " ", "of", " ", 
        "samples"}], ",", " ", 
       RowBox[{
       "now", " ", "Random", " ", "later", " ", "adapt", " ", "if", " ", 
        "needed"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Ordering", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"oc", "\[LeftDoubleBracket]", 
             RowBox[{"Sequence", "@@", "#"}], "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "&"}], "/@", "xyList"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", " ", "\[Theta]"}], "-", 
        RowBox[{
        "component", " ", "with", " ", "maximum", " ", "abs", " ", "value", 
         " ", "in", " ", "orientation", " ", "confidence"}]}], ",", " ", 
       RowBox[{
        RowBox[{"label", " ", "d"}], "=", " ", "\"\<discrete\>\""}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gdList", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", "xyList", "]"}], ",", 
           RowBox[{"{", "\[Theta]dList", "}"}]}], "}"}], ",", "1"}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Put", " ", "everything", " ", "togteher", " ", "x"}], "-", 
       "y", "-", "\[Theta]", "-", "coord"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]List", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Theta]dList", "-", "1"}], ")"}], "s\[Theta]"}]}], ";", 
     "                                        ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "convert", " ", "to", " ", "continuous", " ", "coordinates", " ", "so", 
       " ", "that", " ", "exponential", " ", "curve", " ", "formulas", " ", 
       "can", " ", "be", " ", "used"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gList", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", "xyList", "]"}], ",", 
           RowBox[{"{", "\[Theta]List", "}"}]}], "}"}], ",", "1"}], "]"}], 
       "]"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Put", " ", "everything", " ", "together", " ", "in", " ", 
        "continuous", " ", "x"}], "-", "y", "-", "\[Theta]", "-", "coord"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"gf", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"Sequence", "@@", "#"}], ",", "1"}], 
         "\[RightDoubleBracket]"}], "&"}], "/@", "gdList"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Pul", " ", "first", " ", "row", " ", "from", " ", "the", " ", "gf", 
       " ", "list", " ", "so", " ", "this", " ", "gives", " ", "the", " ", 
       "first", " ", "gauge", " ", "vector", " ", "field", " ", "in", " ", 
       "discrete", " ", "coordinates"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Convert", " ", "coordinates", " ", "to", " ", "image", " ", 
         "coordinates", " ", "x", " ", "and", " ", "y", " ", "axes", " ", 
         "are", " ", "flipped"}], ",", " ", 
        RowBox[{
        "this", " ", "causes", " ", "rotation", " ", "direction", " ", "to", 
         " ", "reverse"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", "0.5", "+", "0.25"}], ",", 
               RowBox[{"Nx", "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "0.5", "-", "0.25"}]}], "}"}], "&"}], "@", 
            RowBox[{"expCurve", "[", 
             RowBox[{
              RowBox[{
              "gList", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               ",", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"gList", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
               RowBox[{
               "cList", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], ",", "t"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{
              RowBox[{"-", "length"}], "/", "2"}], ",", 
             RowBox[{"length", "/", "2"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.008", "]"}], ",", "Orange"}], 
             "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "gList", "]"}], ",", "1"}], "}"}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7977513630325637`*^9, 3.797751411706707*^9}, {
   3.797751480251086*^9, 3.797751551609975*^9}, {3.7977515825636168`*^9, 
   3.7977515834843903`*^9}, {3.7977517099040036`*^9, 3.797751800786234*^9}, {
   3.797751923725185*^9, 3.7977520622065196`*^9}, {3.7977521637000594`*^9, 
   3.797752276292592*^9}, {3.7977523175393844`*^9, 3.797752490557062*^9}, {
   3.797752574547472*^9, 3.797752862270906*^9}, 3.797752917528504*^9, {
   3.7977531059781322`*^9, 3.7977531402233887`*^9}, {3.7977531786557655`*^9, 
   3.797753266053121*^9}, {3.797757528467003*^9, 3.797757543808408*^9}, {
   3.797763743319216*^9, 3.797763810799045*^9}, {3.8047673531428843`*^9, 
   3.8047673626679277`*^9}, {3.804912061192582*^9, 3.804912354786599*^9}, {
   3.804912396185414*^9, 3.804912475929165*^9}, 3.810372268262021*^9, {
   3.8118366270003057`*^9, 3.8118366471048317`*^9}, {3.811840371789135*^9, 
   3.8118403777397127`*^9}, {3.8515860771115217`*^9, 3.8515861275446634`*^9}, 
   3.8515867351272583`*^9, 3.852200781814391*^9, {3.8522025871713905`*^9, 
   3.8522025874460363`*^9}, 3.8522029489173207`*^9, {3.852290514944294*^9, 
   3.8522905931140475`*^9}, {3.8522906439229455`*^9, 
   3.8522907043442187`*^9}, {3.852355353075889*^9, 3.8523554217551575`*^9}, {
   3.8523557389090395`*^9, 3.8523557651299825`*^9}, {3.8523637228120003`*^9, 
   3.8523637810572186`*^9}, 3.852376087778722*^9, {3.8722403282491856`*^9, 
   3.8722403290406446`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"4993f597-d7f4-49a9-a2c4-35e8bccbe72f"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import image", "Chapter",
 CellChangeTimes->{{3.851574351810299*^9, 
  3.85157436129169*^9}},ExpressionUUID->"392c05ac-415a-4edf-bff4-\
16d89cf117e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"imageIn", "=", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJysvTusr912n2Vo6EJlOgqkpEo6OlN8Ch0ShUUTuiMhkQ6o3B3RhMruTgcS
EhSR0lhBlgxKYRRZWAgRi5vDzQQnOTm+O4470+Fv//dv7exnncfPeNd3lvbW
1Hub73znZYxnjDnm/P9r/95/9O/8+//iT/3UT/3b/8JP/dR//Gf//5Xv/clP
f+9Pfu2bpT/4i//Wn/371bf0N//r/+DP/v2P3/zsv/Rzf/bvf/7mX//097+9
pb/xV//Vb/99fv7vf/Nzn278+2/n7fq3Rz/9vf/lLV3+S1/v/1/f3rNjnmc5
/ptvi/ub//s3/+73f+2vff/X/o9v/r+f/9t/+vN/+/98S/+Nv/U3fuZv/Y3/
+/N3/eZb+unpv/oPvvlUzJ/+rW/+23/8l//s3//7dmznX+X9h9/81Ke/f/jN
f/kXfv+/+Au/7+nre//RW7rzy8fu/zc/FfBL+qqHf/x2zHxWzn3v6mX1tHpf
/b2+5396q9/dt+tsJ95v/WPtvfZnv1g7sb3+s//027//6y3dd+y+fQ/7Vb2f
5eB1lmPv/XT6r/0/79LV8/oP+xXTPbdjvof9leXhd7P+rN8zXb3a93Kc7Jjt
wWP7juv15cdyrt5Wz6t3jruNC44jjpMd//Avf8rpm//kZ74twA/fjjfuOL5X
jpWP/YftQ/m1cfP6rv/hLZ2cXfr6zl9/S/ecjT8bTxwvNr6sv9k4tOf4Pspj
qyc7rn69+mfK/JiyfJQj1GOmh/a86b26XuUy+UW9Z/dZfVr92PuZmjxneax8
1l58r7UT9dlVzrMdp9fYrpZavZccsPpl/6Z8tO833rL2su+eHKG8mRyafCIn
vsr7339+73/3dr7kGbnP+k3Vq6UmZ9jviw+u6VXvUo7u/h1Pn1HfMN316a/X
d/zwLZ0e4/Ff+rbZf/BP3rUP23Pn1y/Yb0xu1XhnOzNfjityJ3mV7bfUxtOV
23ae11f/vD47gO1DHme7kf+rvZkfy0NO2/evnsYNq8eNx9U/249yj/2B9c92
N241vrBxwvFS+stSlnPnyS/GO+R48izltvGV8XdxPctZ8q/q08p/TVkf1Y4s
JznS6pvjleOC9i7l6MbZ7IKlk4vk/snNHW/cbZxzfFk/27jZOJvcnZylHCbf
k/M5Xn9SvG+p9Uv227KnjYPZH67lMD5/yg0sn/E9U5Mne978EWw3yiH7Pl6/
cn/JDebLfsHvKHvJ7ICP2iF1f9lHu07/FP2LTOnnKj6x+mZ9Gp9afy/5YvVt
+tt4n36IklNMyRVVXzZO7T77fvbLGv923fIzni+9zPYnL0yfkRuZ0p9Fjn+V
90dv6c6/6vFLynZkyvYr+9bazeRRyVv2V5an7EOOP9Y7/YXG7zs2+2Dnjc/J
8zw2bt/7zY7g+8j7lNcmD9i+ZoevHk2OUJ+R94uDr/5je+6jfjKO7/KzG+9b
ucxeqXoo3jG+u/odzF/Lctl91/mA8ieb3WAp5+PMDrZ5taX07y+dfJz83PHs
c9oVHGfWzya/zD82vUs5R708/Uo5WX5Es2etPxpnkE+K+4rHy+9Z8wfl/3zq
3y/ep5+D31X3kSN33Xi27JWyC4o7q5+Y/ii+qtTkSs272PdZucvfb7xi8wA8
Zn2Un7fmWcsvbLxk30O9TnvH/Prmpzf7x8pRPG0caPVa4+L6vqf9qnjf/Mv0
V5n+ot6iH784/1X+H33z1z/9/fbb8afXfv9H7/TOjqd/6G9aan5gHtu4eGon
WL82+8DsM9Y//fk7ttQ4nO1HPjfesPgdO2a6/Pc+xhuUHbXjtSs5n3LBONn8
OFb/xod2bH50G3/mnyoeqPiW8odf7Zerv9W+0+yQ0hfF9Vfur3qx9rJxZ+1M
e/qj8pLzaLtvvE+5Sbm6dP6VPb/3r9w2T0MONH8a/WRLKX+XkkuM/zn+iq/M
r1g8yueMt23cXefrf1LxKB+N4zF/qT1Hf4rpK9N35i8rP/jVzqn514qHMM6r
+n3q7y9/asWNXevJ+MPaxfTed53ftXxY78VZ7IfG95aSA5cP29k4nfVccYDs
L9Y/7f7iwYr/sX5Y/jS28/QVeZ9+Zfpxp2emn+Zvmh4yrn+V87c/l+t3vvmU
3c/+ztv1cT5T433qFda32Xk2Pkyul/w1u8HkBv36rH/jffI7+dv8iuR94w/G
FTN/9gOWh7xB7mB9sv5p31vKcb52MHm+95PXVj7aJ8b3vH6NQ6G/n/xhXGT+
y+v7Ta5XnDT7qXF+xcWYXCr7heVjP7K4Q9531W9lD5Drze7mOOU4mtwk7y9l
3M7Snef15cfxSfuF7Ud9SG6n/qV/3/z9xpN7j/Urs08s/oepxeOUf9XiRz4a
j/f0fMlD44aKgyh/5zUu/GoHWDlND1t9m9+05kWLJ6mvi/evXGZy6GoPkjuM
52qeyvjWxsN1/sHGldkzxlWs9/XPyRf6dZcy3oP6v/Sl1bv54Sj/zd4xzjb/
mcmDqz+h7ODrPIzF85CD6Beenpnemf9p/qjx+yv/333j+0/V+DO/+8b5S7+2
A760O9t549fsR5OfJb+u8t143vw21Y7lD6Yf0ewv43mL0691vBaHTP897ULj
Msojk3uMk6LfcfKB/cHiT9lO5qclp5ldYFxofko+b/MBNt9g/cLq2Z6reUCz
A67++/JvPY3nMU692jus97KL7P1MK85u6cYLed7s63G8yVVLaZ9zHa/pLXIY
x5XZ1eT9Xbd4S47Daufy95v8rPn08tsalxkXmrwnT5scKnuj9Jf5863drvMB
xfvX8lQ97XvNX1DtUvxc+pn3s7+W3fY0bsf6D+MSiieLT8qes++j/4ntbfrV
9DdTygVyPuPyl1IumXyxebmneqjilWq+xDi85FnZlU/tFNOb9F+VHuN+LMb5
4/jxPdPx/4/383+x74z3rR9f4ydL/l7j9UyeXe2Isu/IjWwncqmtByy+J9fb
umCWg7xs/lXzP5h+pJzYuGda+ox+has9Rf+t8R9TchbXWZh/mH7i3V9+ao5v
Plfze2bvVxwQv5fc9tE4HOZD+V3rEEz+1fuv8zRsR5OXV7u6eN/8+0ttP6yV
r9bvknfo1yc/mp+fz+1+8g3rl3LF2qX8bNd5pYq/MLl/1RPkrqf+WJ6nfDR/
1c6zXUw+8r6PzgewHHVs85XX+Jmyl/ge80ew/fad67esZ85L2DxNjTNrN6un
KrfxNvtfcZDZrewnZgdSXzNdvU4+jO9ez3+J3yDvW1zh3mf8XfbY1Q9m8yts
n6sfi/293nuNdzU9Rj1t3EG9tZTryYrzP4X3/MXfe0u/1Up/9u/d+aUWt7O0
/Afmt692s/FV8VTXeTazF8oerTgsiyMgb5ifvvz3S6/7n5gf/+qvmnwxnii/
I/WbcSL9tftO89+anVO8z/vqOeOf4trlQ867cuyeLz/+07ihp3H81++18tS4
sXlMfr/1c3K+yU2bZ5v9vZS8f43nIe9v/O79tFM3Dkpumn199ffzPvPHmL1d
9mbFc1/jf8p/bPxp+RnvU96V39vkY6WrZ+rLstPIY2YnmP1iHFv+bfaHK8+b
XWfzIyxPzROUfrJ2tH5g+Va/qHkocgn1bfkRi1vMzqv+Z34DpozjGPfTz0/5
w35o8TRX/5ZdN/lQ80/m1zdOKn1F/VPzoPZe8ycWN07/vNrnS5w+4/IXx8PU
eP9Vvt97a2fqi5qPKnuZ183+pZ3wXf0LxvM2z0O7b+3K8uw89Tv9+xafQ67n
vjpsf+pls1etfi2ekv4B8yfymHqJ6cpj44RxUcZxxSEVB04etHhl3m/2wdP1
qFc/vZXrGgdk8Uj1vmsc20f5v+Yxyv6y+jFOtX1wi/85b1rcv/uWj83H0Y4x
fyPH4fRs+dfseOOY1ykHqY+s/7OezS9PeVx+ssqn4teML1mfpreKM9k+5CvK
R+N8k5cWz0O7gP5U43fjR953nTc3njW+t7gWszOsvave63uu/n273/qfHZud
UHbslaOK79lfKD8sbofH9Oux31Y81Ufnb82PYOPV2uHqj7d1Hyyv+Rmv/kb6
HenfJSdOrzB+x3if/v1x/NLX+3//jfuX7vz6yeQVubHibCqt8XbNx/rB0/gL
47jqT+QWtit53fz4Fo9g/uan+pa8T/1hfgSbfy5/A99fcS/7bp6/xoNU3DhT
jmPjHY5rcpDZ/SXPLN7lysnXeQKzP6qc9nz5a8iP5ce/lr/mU5jSbiz+p7wl
9zMl789esH1wzT63OP6l1NvTvzZudzy5TTlO3qd9bHLmav9euf4ar3udPyh/
kHEq9VDFyywlV61+1z7m/7D0Kn9N7pqf3uwVW8doernsimoHs2trXsfKb3pn
9Xn1p1/5u+aVaj6jUosjJ+ez35g9Sc4nz1d8Po/N3mQ/Yj0VX/H8R9f/XONh
ax7C5JpxQXEC9dD0z9W/ZPvwfHrN97/E84z7x/vz6zOex1Lac+T9Whdznf97
uk7rOr/2UU4iLxrnG7+Z/jTe2LH5s00vVhwc/SOUF5QTxvEmV03fLKUeMT8i
xwf5yHjO7GzaDVc/OPO18l15/zrfZ/3zqm/K7jE5V3LZ1n0b/5m8tTgn4+Cy
n2yewvpR/V7Fd+V9cj/j+K0/s13Mr8f4EPO3lX3O+6pfmf1U4/Ha35/G7V7T
p/qj/KqWftRff02pd6/zDpZe+Zt63jjf7Azjgau/zvx+9f0VN3PtF8UvZZ+Y
/WPf8dS+op1pnP66/308/s4X/1POlH3HcWh62uQG9UiN74q/sXnuilNluegX
LC7g907fmP/e4kPJ+7Wv/njf4nfmx/+Fby//6e+/OzZ9QnlwtU/Nrjf/tI33
4n3j4isfXf2YjPcxv631+4pXsXJc9SL9VcX75IkdLzU9UHr0au+bfcx64X1X
vja/guVX9vpTf3jpoeq/V7+88Xb58fm95pe39qhyXFN77mqvc3yR8433KZeX
Wlw/+Z/7etrvb7F+jSuoXzcuSy9XuvFMTjK9R943u6Xss+v8es1XPuUw83ub
3rJ47PKz2nyA+UmunEf7Y+/jd+2+XWd+Zjew3JyfYPlNr1A/m96+xu+TK3lM
//+uc1yV37F4op4zPXi1W6722lLa/+P7pYzHJ+e/5MDffSdHdv/uYz+9jhvy
vqXXedyn8wZ8bvKq4nnK/jAusfWFtn/jUnI8U+N67qvP84zr4fHsAcb5mHyi
HDI/QtmpFvdXfnyzx219mPWTiquofnrlr8r/Gp9g+tC+v+SJ+e05b2f3sb3M
7lr5ON/P8ho/FN8XX1vcTnGscWaVx/j+un6V77n6O/m9k0sl32y9QMUVVZxm
2V/WvmU/WDvQr7/jcbzF1Zs83nPj96X0z/A8uZ/rUmgvGvdTbto8/fQ+uZPj
mHY+5Tj7Z8k74/5rPGzNT340zt/iVMqPbJxf/mXj/IoXN943+VzlYFp+fPaL
9Zf1K3I/y8l+ZnbP1Y9teqziYIorrvEzV3+y2YVP32f9sfTu6pn+/LUbuZ08
v5TPLTV/Ptup9IHp1Wu8qckJ46mr/WD60PSgrWcz/5CtE7O4nfE8OX7HTOfH
Z7rnPhXv+z96d/84f9zPOB/6L4wfKY/KH1PzAWYv1Ph7Ok9cfqZrHLjpu1rn
w35U+tX0F+V7zW9beUuvUD9Qvpo9VXEk1/UQdp32dvn3yw9d8y72voofqvml
ituqeUvme/VTXf3lZh/Z9Svv23NP5yN4nu1Ev37JZx7bfCy5n/zPOH77XvPr
79j0/I6ZkuPoDySfUX6wf5ddXHFXJp8rDv8a92n6yPxDdr04vPwo9Kdf4yIt
jsd42d5bepT9if2E/Wr9hlzP/mPcbTxs7VXxvxU/YPMAVr6KBy77tDjfvuva
Pjb/znic8f3r+q98bpdffefn57wg5wetHple5bLJY9MnOy79aXqG56/x3aXn
mV73fZ4+ePXzH777ffbx+bicfvqlvE6e332v7/2dd8fz55PzF89De5J+JLPT
y69ffhP6H3ZseoDtZ7xf4/kpV9Bfx37G95edUrxn8T20t43/6M+cfbl+ue+z
+VC2k83PsDyWX/nlPhr/W/K61vcUt5q9ZPLkam/W+hPqJ8v/Gldq8WjWf5iy
/1+5/5qWHW7tRf3Cfk/5TDvA9u+p/TzNfrD9tzjeLB6veJ/+OeM1Pkeu5Hgm
v9v8BOu9xl35P8pPcPXzGudf4zCK3437zU9rz9U8gXFqfZ/xMfU69fv6B1P2
J+N0+uee8vHV727rXq4cQnlYerns0fJTVj9lOTl/snpfSt6nX3+pnSfnsz3L
f1fz8MbLO2/7kphf7Kl/gXK1/Ehc90fOs32fqV/Mj884nXH+/PLk+/nhl47b
6c8v/l86zifvL57H+lv5+43jzV9hvH+1k9kvr7x/9fde+y+vGwdVXAuPVx92
P+XK6tH6+cqxcTZ+WXltPLA8xfv2PVZu4x2zB4qrrV1ZL8Yr5pc2u/Iax3KN
z2E+NU9ifn+zD0xe0u9v8vTa763/F6/b82WXmT2+/l5x/eav4e/w2j6exf8c
b6ZHKfeM9+m323lyGeN+lx/9KdT3Fn9l7fU0Tqf6qcUvXnn+ahfw/uIx87vb
e0wPXuMmjScrvoRymzxZfmRyvvFhxd1c/T0Vb3/19xf/l11k+ojvqfkD89tY
f2G/WH3XuDf+531Ly26z8W4cblxk+VAemP/U9Mc1HofcY/qdds3eS73AuHzK
9af76Swl3y/+hnE4V7+/+fmXkv/Nrtz58nOYXLymq3f6SypupfzExnts/yvP
2+9E0e6b/idX1jyAfQflhMVp8PmrvWK8X34Rrh9gu5keML+m+UsYb2LlNn+B
cSR5lucr32scu/k/rX9f56nKXq14p+t819X+fWonmx+l2ovltH1x7Hfcah8f
+vOL9+3+yQHbn9/6xcYDud/8++Qyrsekvi8/inG+ld/kT8W/XedpK86nuND8
+cZtxmVlF5CvqTfLr29+5Pp+8xczJU/Sf2zzRizvU7427q37r/M11/LYe4r3
ycm006x9TI8zP45X8jp5nn78xfOs/cxes3hc42zjJuNt+gvML2t8X34dk0s8
Lj9TxeeT721/hle9/vCdP9/87kvH9eNvcn7xO/nf7IDZG3tu+a9fMKV/fyn9
BJRnlAtmF9j8gdkNxp2md67rSozryfGcrzf7z9btsb+Zn9fkPeUQ9eLOs3+v
vMZHLB/lU8WNrL3YH6wfPPW/mR/c2r3i0ikXLN7a5JzxzDX+s+apjf9tvtXk
Ge8v+4T5GO/z+pWrrd9dy3UtL/v53sNykPMp95kyzsf0AZ+77tPJcUw//TiM
fj76Zcx/M3m7/M0uNrus9s81/1vFcdm8ldUPx03Fj5g/2fizuJFyr7je/PxX
uVd+cPaXtTP1NP3GtCPHkUt3nnr6Ou9y5XRrn6sdUPMGxf+lZ8vOMTlv+pn9
Yu3D8V2ptRf5jfzE8W7r2Ezu2zjmd1MuMx/6102u8LrFm9rv+ph+oPwn7+86
/TmL3xnvz58/zqb/3nif3M/7x+m8j/E+tf6X9gH1ha0rMrug4hYtXb7TR8aH
y9fGUa2TtPl/9iOm5ASm7CfGM7t/x8aF5vfn+LDniofIM/Rb0k4x/wTTp/Pv
5H3Ti+xHNp9RcX82P0N5V5xZ64DMf19xqtR7V3vB1jOZn8XkdtnBJo/NTi4/
er2nON7a2fTUUpbjul+/7btAPUC/PuWCldviNMjvxgPkMZPfk7OUpzZfUnGs
poftO80+MI4o3jc/d3G88SP1T8mv4v3Vu7UD7S/6fVlO+sN4v103Pb7+ZP2K
vF9xSN81LbvA5kNsPsi4v/yRVS7Tf2aPMl/6O9kOjNeZH38pOZ/zNWwn2iUc
t+bPpJw0/q/4WvO/0c9ocsD0m/m7+JxxAvW/yf/Jd/Pr2/6YltKfT/4n3zPd
c5xHsPW/vG7+AJ4vO+CpXCh5xfPGTRbfUv3H1mszpZ4zv2WNj/JnsvxVXotz
p75kucYh68c7NruGPPw0HpepzfNYP1x/Mn9Qxfdd+aX89uQPs9uK7y1eyriF
48Dmra7zHcbJV/8Kr1f/Nzur+N2uW2p6xLifcp12sPn3je95TDuf8qDsfdrD
0+fkgvK7mB9n/cria82fb3xv7fY0Hq7ma2s8lR/C/Em0m4o/r9zNY/r3K77F
uNXal/nY/Dr7E7nR/Hum58sPXnxt8wFl51T809UetHqyuCn2E/suthPrnfbW
uH5xOkvJ/UsZx8Nymb4w/Wj6kvLb8jPuqnUAJkdKX/A5ylvqQep76g2T++P9
7bvzal/fF5Mp7QHG2dhxpcvX/Pv0/9Pe37jnOF9/Mnmw83v+aj9wnFico41X
yk2LkyG/s53NfjU7kOPA7GNLS09e4y7KTuF7jffpr9x5s/9ZTzbfwu/hOkX6
y8zuM71i7Wz1UPFMJmeMS2odydP1u+Z3NP9+xUOUvDe719YJlL9m9Uw5ab9D
W/Ke47LmoyvlOODvZTFuh/Kf44D2Qt3P7zA7cf2bfmHKW5OzvI92wfrVdfyU
Xq04frPLLb6n+nnFu1VcpPm/mRqXWj4mp+x8xbvb/dSbvI/61L73Oo8/vT5O
4PXKl7xudlLxv3G9+V0svrH88Syn1W/5OenXWj0yXb1afP5Si98h55c/0DiH
ctX8leZfNP1x9Q+Y/Lf7TK+VfcHvKr/+0le7vP+dLONsi+8xfi/7wPz2XB+8
85sv2PPkdOoH9kvTO3ZsdoTJV46vSmnnV5y16TNL2S9o/1r8vnEB7YWP+let
3xrfMz6BfkryPtPdZ7xvcrX0986b3Ud9SblvPE05wHbdecZbXP0Lxhfmr6W9
avG5pu+u8weW2ni42r02rlhPHCfsfzXfUnqn3sf7d2y/k1Xrb80OKH+/cT+/
m9xP/jB/y1Kus+T18svuPTbfY/rW1iFbavaNrVdhv73G9Vc8+NXffE35vPGe
2QXGsde4fUuLt83OKR5gftd5f+Nfy6fmdc3PwnqjXqg4ror/L3/UlfNr/S39
+ruP45z+oFoXYzxNOWo8ZP6aq/+G5+v5it+lnCpOMv1Cnptcf7XjD9/S8f38
+sbZXC9rcTkW17Pzu/9VD7/3jt/J/7QnmD/1BuP3yOlmB9BOZUq5Ynrsyv0c
h8b7V/vumlq8Anm7+L+4/2k/Zn9lOcgf9fuh5udcvhz3HIcVp864hdKHu8/4
oPwYZceZfDL/pNk3H103xu+s+emn69dqPXP1N8pf2wfqarfWe6/9v+LnKL/X
35kyPr/sgKXbl83ur/16Vl7WK/e/Mr+r7ddDTjP/P8eV9Q+r96fzk8ZdZi9X
PKati+Q4Mz+y+W+L80wvcd0F7ayav7b1HPYdFh+04+Jt87+ZXmZcitmR1++1
Y9MDFb9TfpOyr8x+rHXeZvfYeuhXvf/dz3LgV96l5s9fve89xvm1bnYpOcTW
X13jlq9p+deunG/51Xyi6Y/pC8bvMI5nPE/ep9+d+2aS921drvE/Od726bF9
gsjpdkz9sePdR3uBz1O+7Lz5GShXbb6U8sDieWweuvqf3W88Qs4m3z/lK9O3
LJfZGeZvNL8++aTilPZ+42SbR73OW5ec5vmrfGD9Wb1f1+laHEHtV3HVX9fr
pcdMH7AfVtxlXb9y/nWcWfvVOnnarZyfHa/Pf7PjpTU+aC9bav59431yMTly
8pfyeteN/5mP+fmtXZia3Vi8b3apzUtVvAB53zi+jq/rZM3/RJ4mB5of2OSf
2R3ke+PPK4/bd5keXr+jvWD1YvnWe6t+Kq1+9nS9r9W3+as27rge+vU9X34n
13ifflfy0ZXrS75S/9X8q+lPcrTN51JOmF+J3GblvXK+yauVb/J6cv3VTl/2
17c4eTtf8Tnke/r9LZ7H7AMev77399/OUx6Qy68p7QHms+tM6/kqF8cXx2nF
IVt/KQ4x3qh+fvV7mr1dcURXjmf69H7aAeXfMy42vVs8bPK99u1hO9EOqzhD
ftfV717z9bb+5Knf/3q+4vrLXqp5tHqOz5v9W/aBtefS9Vfz3xvn029fv8Nl
qdnP5H9+H/sX/bXk+qW0A3g/82HchM37V/+o+8yeKc56Gr9W8e0mZ8qPXjxO
TjX/ds0PPJUf5Yc2DuV7zf9uqc1jWL3a+65xQNUOFt/D/lfrvqte2c7kmY07
2uHjfMbp0M+/Y/L+8qd/k/Kz5In5ba7ztsb79LNYXMM1jpPtWPrAUtNH1Bf0
30z+m1+/1sUuNW7f8S98+5l/+vtv8TqMvyG/cz5gv5+75xn3s/zH/WVX27hk
/6Y/iX78ihPasXF/pdRbS2u9pK07qfXnFi9s3GL92nie/dB4wXiCHG98T44h
p1jcM9/HcWX+/KdxtRWvafxo8o31u/LTX3nlFL7P5i/Mz2T2zTUuufylFddT
61zMr1LrYqwerf4+KsetPTk+6M9nanE+lpLrzS6w8cR9/LmOxOJ7yEvG+/SH
kJ/ML1ty0fxldV/tt2NcVfZw9fdrPN3T1Djf9Cf1lfmt6zuu/mfbn8b0PfUo
y2X2jH2XXWe7Gv/b83xP+e+vduY1fpL1wfKSZ8j743yL31+687Tb2b4ld4vb
yf3mV+GxxTVTDpPzKw7I5gsqLf8Cv884yXj/02Pffx/HY79zy/0xyfmM5yev
87rF+Yzjx/3Mb9df3/2H7+TOdV7Q+rf558vvv+dnD1hK/Ub7gvLs6vc0u/+p
HVB+L+N9s4fLv177idQ6Q/o7LT/jlJXzyvus//K31H5LNe7rfpt/KT6x+QTu
P1R+weIZk1sV31v+QYuPLn3xXf2+Nl9inG/tu+P1P44XcrjJc/r37Trvs3W/
HE/F/7Z+1/Z7WjuS2ydHlxp/0b9P+c99TVjf9MvV+pZKi6tsvU5x8NN1Lx+1
C8pfdvWfmR+7nud95Z+/lte43MpBPU7/Hct7taPIC0xt3sLsH7ODnqZWH+bn
tJRx0IyHpp1k9oyt0y3ONn8lxz3jaiyO0t73NN7B3lN+oeJ9zkOQbyafJ+8Z
xzN+t/gc8j799Ra3Py6fP55+e3L+1U5Yvr/+9779+8PkBbNnzY618Wj+pUqp
x5hSTrG85T+1fd5oP1/tRtOLNn/F/ndd/8v7K16fdgI5iam9j99Bvrd1NhbP
U+tvn8aJs36vz5udwOdWruIRi1ui/iGv2H6DVp9lH13XAdR+dsbvxvE2Diqf
WqdlvG9ymxxO/zz5fMdXzud7bH0Any+72fzkXMc7uTp5SDlMHjJe2f07tnj+
svtsvD/173N8XefFOA9CvizO43PGj6Yvze9r7cV2Kg6nPi3et2PjZL6n/Nnm
v9t58xNe67V4mu+z9q79I67zOsufnLJxRx6an57+SvK+xemznmo9FnmEctf0
msVnXvmm1vPyPuMhK7/Jm9ITxls7Nj3xqu/3/vzxPPnd/PhmH1g8jsXjm3+f
vM/4oO9/9uv/h58q5I90nNk44DjmeL5e53jh/eR6ju+lJh+Nx4zzTT+Z/jL/
Y81zcRxZf6w4H3KO+eGL+4v/7TmWm/xc86fGmRYnY/GFHOcsn8kD1v/VLrC4
BVvPW/NJFq9h9uo1rvnK9axvylHOYzy1f692r8njsifYj42nLV6fXM/rvO9q
N5idQXuBdjrjemy9CDlsctTiJclv5qel/GR/Nbur2otyocaHvb/ifqx+yi9L
vUT/FLm48i2ONjur2sXyYXnLb2fl5vyR5cd2Ku7n99j3mf1i9mnxcXG/xV9a
/dn7uQ/Pqxzv99e0uGba6XtPxatZ/Gr5iUwPGB/VOn7jffPL05959SNQ7lQ8
KN9DnqH8frXbP3n3O1rG+RWnU2nF79BPb+nre//gjff/yqcG+IPP3/3Hn/XM
P1P/iMnh4nqOd8pPcj7H/dWvz/zpN6CeuHKncYv5I6+cXvH+tBfMX29x9XWf
5UdeIv/bebPHKW+qHWrfm2t89zX+oO43P+W+Y+dXH+Rei39mvhafYPrG9JHZ
5df1jWXHmN+HdtWV500vmN/H+H+pyW/6bSo+x/ie+7EtNf63lO+jXbLyr17M
L0eeJe+NG+hPJA+V34Ucbf5DtqvFDXDcVfzNdZ27cWzF2VNvjbvMb0xuLR4l
J5t//MrzfA/zs3ar+in7hSnr3/S+8T77G+vd/H+Vlr16jeuifC17Y+NrnP86
/36fzZ2fHcD4fNotZWdZfKv52yw1f03pY7P3Te4X99v1Wldm9gjllK2LJO8v
fofrcMn7V56f/978+OXPZxw+437G+UvH+a/6+aM33v+vvr395/9Y41lMrhqf
W1p2fc0PMjV5wvHBcVLx4dd4hrIjyw7m+rzy41/X4zIlP1hcjtnBZr/wenHy
03mUWndb/sXyE5s8Mf+j8UnJSysv02vcTa3fs7ggG9c1j8L5D7bv+gP7Zc3X
ln1Q62/Zj83O3Tiw9bjG+1fOXzp/kL2H8wpLOQ/A8Uq7mv2TvDY5OLlo/Fpy
lf5FcpPFd5V84Hir/m78VTxvXGvxGORr8iY53DjY7Iin+q/83lYvVk6rP14n
x9J+2HXGk5V+Nr6fPcrnzD6w/lw8UPZi2UFs171/vM51uPPjG/fvPvr3V36z
F8kx9INRTpfcLz+bxQtd980xeb6U85ilnz86b0x+mf6wfRzI+696c97nelnG
1zC93lf2wo6//zlex3j/X/504z99436LB+Yx5WRx+dN5yKcp32Pj1viseJPz
18W3dmz+ZhsX7O/GO7YfoHEDz1e8tY0vi1ey8VmcX9xc60jZPtUutk7D5Ns1
Pr7iCKsctd/GNW7H5m9rHw+zc6zfL6X8Nrlv+ZS9a/NSxvm2Hp1p7c9jfn+b
J7Dn7f0ct+YHMP8C54OMi+Z/JFeQq8hNO8/+Yv4P6we8j+PgqR/feN841zi5
/FHG98bZV/8X9WfZGWVffHTdKfM3PU0/nNlPVh/GCeuXtE9ZD7Rjr/4/cgH7
gfn5acesnFxXy7id8f3SnWfKdbkst7WHld/2i7B1ZMX55tey50rek0NKn5i8
MH63+UQrD7mf/p/xvvH9OJt+dqbG9eR3pvT327rdHY/zGdczO2Bx+6/v/qfK
P+SLkgPmz7DxT7l2lbdlP3BcmD1r9qTx4nflfOPhWg/A8UIOIucXH139sBWP
TT8C66HkDHn6yvkWp8j3l/wzbqc8M7+5xfmY/Wxx2E/3J7J9gmqeynjJ1hOz
Xm3+4jpunvL+1c9f3M/ztg8Vrxf3z99f+3ta3A7fW3Y05Qd5ZfJv/EA+IceT
h2gv7Jjy1PwgVW4bnxVvZnH77M/UP+bPNj1ifMXnbX579Ts+pJ1F+2up1bvp
v6fzHtfr9Ceb3rZyVL5m37B+jPfJC2YHGI/weZbPON/i8c2fv/Ncp2v+/B2z
fMY3PL/vqPj7q3+/1tFd4/ivcczGPZaanLT5BOMg/n7uq92+xO0vHp98b3Hz
5O4r79Ofv/dyXS/XDVR8z/bjGeeP+22dVMm98juY34Tjkc+VP6Xkt9nB1c8/
2t+ph81uJScbL5t9bHH19BNaPLDlY/bxUz91+QdqvvCj+31UnGLN51zju3i8
/mZcbnHJ5nep+ypfe3/ND3CdsPlxaxxU/7jGZZncvq4zoVynvuF6FouPs/W2
5b+3fXpob9v6GqYcn2YvTi6Sp8YtxkXkHPII7QIbr+ZXu87/2fqXstctDr24
t/QL7zP+pX+Z/Mp6t5T5UD+uPLVP0TVlPbGdTR/z+82PXvXG58mzxvm0a63+
rJ75Xmu/jZvx+3j+1R//zltKzqf/npzP+mJ7W71bfbIdS89wPuOj+tR4/Mov
S+058w+VfcH3Fu+/6vPL/vr065PP6cdf/Az9+paS77fed3FD/N2und99e25c
v/fOn790vL94nnE/xxt5v/blvPoVzD9SfpWn/ouahzK/p/FQ9X/TW+UPNTvB
4veNPyyux+IDqH+f8r5dN39+6XfjRNaTtcOeKw4uXjA9WnEGth9IrRu5rrOt
OJ/yj17Tq13Ldir77GrPGEdW/Kfxvu13WXYCeb+4n5zP53dsesfmGcxeMfuL
cdXkInK/+UvN37p+bf3FON/kC+XGdX0h+5XxPevB/M7XeWXyFuuXnMj10mZv
lZ/M9KHNz9n9xu3G93ZccTrk6UqN/5lvzauw39LeqvsYh790/vvXfb/yud5/
+Y33d51+//n31/4rr9k11/5X7Vz7LPK5WidmepTy3vSFyVmTb5TrlBt2H1P6
VShv6bcZ75OrydPj6Fe5/ujtmNw/v7vF5dOfT85fecb7u4/rBor36d+vcUj5
aPLvus6dcsL6Ofvjdf+R6/rF8hdfecy4lnrN4l543uLzjfPLf7jzHD/mfzOe
v85fGBc+XXdbcUTm97a4Gtp75GXeb/3PeNveazxDu6j89Hwv4/KtP9Z6Bfpr
rF9e+8F13dfVPqZcZ3+lH8f856YPjLuN/20/feZjcTwcj3yO181OZ3tw3mny
lX5Gk7vFcbtOeWp+ioqzNbvRxnXFjVPPXLmp+Omp/6r8ysb7zI/698r5V943
+8V4gP2APG32pHGFvY/1xPx43fid9teOGV8zPh/PLyW3j+fp3yf3M/+V3+ZB
rnaRPc96NDvXuKjmi2q+2/QC4+Qpn+l3Ka4nr5hfgXLe/CvjqMXz2O9jjafH
z+TqcfTSnec++OP0HY/X9x7z7/P3e618e+/4/vX9X/blWcp+Z3K+/O+1v9VH
5RHvq/1Cn/p5jdOK76/+SeNncvdS4xH6Cc0vaLxRfk76D6/x89zHpeYLvus6
f+Zn5Sl/usk59juLGzDut3KYfDQ+rnkA4x9bh/s0zqnstFrnfh0vHDdsf7MP
OY6ufh7jao6zpbYO2MYV30u9d51vIBdzPO3Y5lPIZUvJW8bHxl20N4337bso
Z9ifuG6meNT0A/1U5uev+bvruFt+5n82/zePTf+Z36l4j9/NejXOpt+bPL/r
3FeSXM5yGVeavVN208q1lPEzPM/1tuP7V37v4+93PJ7ffUxZDzbeKJ/N/17+
VRsP9bzpCxsP17ieySOLSzR5UOfLz0H5T7nOeVbbh428v/ib+e2Xjqtf7/2j
d/xv/vXd/yr/l3mAve9Tsf+53+Ud/zMl99N+oB0yzn/V5z9L+9qOOY6L+4uz
KC8pz6/5PeV/ixetfUuufkr2U44P8rYd13mzE2hX837jaX6H8Tu/x76Xep31
a35+4z/z35c/m3LsKmdNHl7XSXH+gf7Mq1+z5htsfFQ9mf1raemB2gegymn1
aXYIudrGBVPz/5R/3saV+bP4HMdz+cM5Dmgv1n495M4dmz9nx5P3y4fcYu1g
8s38Cmzf2mfE+LV4vuzqp3qj1k2b33nXTb5c/WlX+UD7x3ia/cP85MbXe275
8/uMb81fXeWjP52cbn56cv5Sxufw/qU7T3uI4458fuWh8v+zv9c8itkJPN57
jfc3PisO56n8tefoDzX/fvE+4/XH+duPh3Ez5GdyfvE+uftVnj9+O2Yc0OwL
xveQ/+v3ADgfwfmH6zwux9/up96g3fjR9cBX7vqufhrj+to/xZ57GrfA4xo/
5kcrjjEOop423q/xzPKZH96+u7je6tHq1d5n7WrzTJSrpfcrbqv6wZWLK96f
5bV+/DRuuuKRar1BxfPT73u1/2h3Uh/UPLDpjfI/FddbWvGqNo44Pq39Vu+U
0+MQxpdPrpu/mvftOtvN5BTrb9enh/d89U/rTzUebL7pGi9q636Mp81/b9xm
etD0qfkpzG9unF/+PPK1pfSzL5+rPWJ8a1yy93B9rPnlzU9fx+N7W59LO4f1
xvaw/sP2sf5h/Yd8f+V/syut3288lj0/ObXrtT8Z5QLldflH+Z7lt7gd7scz
zuf+m+T98bjFwzPOx45nH5DDlx/X+47vF9ez9NVOX45XbvI/7ZW9d/1o/YF2
vMkp63dMi+fNj89+ePVzXPdLqfmqp/mbn/Zp/IRxDccB+eLVfu9/d8viGGx8
GW9xvFU8g/HV8ls9cDyT48jNT+NLzA969aOz/9l6XYtrNu6/8vQ1fo16hHEX
zJfy+5p/8T3HRdn9Nr/A9rX+YPVMO7b850/nzcw/Ra6337fmOOE44ng0O9Ls
ScZ7kPMZ1z9eIQfwedoFjGOjvKD8olzbfTZvZH5P41/rf3a/5Wv52fPG+6YP
7bzxu8kpsw/sPaa3S7+b3WK8y/fu+eLep5xvfG/cbn598r7ZAXvf3s9xYbxv
+sLazfqVtafxPPuB8bzxCcdpyVEb95R7lJdmN5hfpPw0S8n7r3r4wvufivnP
7ctD3n/1t/f72Y+f6ae380uXn/n356dfeRjPb/uHVjzSys/+RDuf/fDK+2af
mjyy60/5rLjc/D6mJ65xP8b7FT9knHLd744c8TT+gP7G8pdyHC8f3mf323vs
u5lf8d+V941/jVPNX11+xI/GuVe/o7/T4hz4frMv7H3Vj423rH5tfsDmw8rO
s/5D/1LpE3K98b75+2kH1+8AmP5jftbPed7mqchl4yXz79P/snzo590xudTm
PU2OWVxfzceZnVty3TizeKv0jMXFG6dR71k5yh6wuBjj/el14/fSx/QPFi/Y
d5pcJb+uvy1dfx13rx+Px8nzPJ6f/vX8Lyfv8z17/1L7brMjzY9ZafUHjlvr
t981TpLpVe+bf9H8HCZ3mY/5Ibkul7w/Xv65z/5yxvMwLp6cPn5eSq4m58+/
v+vLj5y/9y9Ofxw/rl+5+bvvKz/je1b+pd/VvjT5UfLH5Avzr3FQ8Y7GGdd1
ANc4Zdt/pd5HPWQ8Y37vp3E/xRcctxxXLE/Z42an2HV+N7/H+K78veQHiysy
Ti2/frVv8f5H04qrKb9wxU/XPNl1PsLslafx07VOhv2r9ImdN/uY95v9bHZ3
zbNVec3+5byk+XGM+8nx1AOT1+Qv8h7bq+TFzle/q/lTu7/8+VfeN+6ivrnq
veJr85/R7ir/+9VfX3qY5aO9Z+8h71b98PvWT9lvLY7HOJ/++nH/6/3v4/yN
81mOlbvmW2mPW39i/RX/1LxPzffWfKrxAP2EJh9Nfpm/3vjE/C2Um69+/X59
7tLxMuN5uB6WvG/7Xo7bl3JfTv4Olp3nfj3jfsb1zD5ZuW3/Hs5T7H0lf8xf
RHlncsLSkmsmn0zOVryw+XUqjsPiQ69+pOLFWv9bfv/r/JelnCfg+eJ1y5ec
s/Pk8Sp/2fW1T49xhNlp33U+6DovdOXcshvLX//ROBmrj5pfe7q+8Wpf1/i4
9s/r/PDVz09ut37P58ueMH8Y9W+t/6A/lrw0riHPkNeMxyinOb443s1eqXXh
7DfX+SnjzNJLxmXmZ7XxQL1Je6nmy6n/LKXdZX442g3Fm8YFZjdUfpxH4nnj
ettfZ/xObifXj//pv6fdwHGwduLx0n2vyTHrj+wf5l9lvyu9UPxvctX0g/H+
VW6Z/7/kMt9j/hHyBnmfv5/yqtcvfnH698fN427+vi553fidfE8/vu3TT85n
PM/KO3+/zQPsmN/B8cnxW3Kv5pvYfyv+h3LL7iP3l/+/4jXLruH7nvrtLd6C
91U8g9kB5hcvvig/usUVcdzW+Kber3FucoHPFbey3DUvw+dqfbCtIyy/OPtR
xct/NP7nqT/H/K3kSSt/2d3F99d12de4n+J69jf2H/qlmY/5nzberB9zPJoe
Y7lsPBUfrz0mX8k55Bqbp93zTCev956SV/wOs2NsPJof/2pvmrw3Tjb7oPxJ
1KvM1/ic77lyPe/j/dSzxuVlDzG158gBxvnsf+Nu+tvpp2dKnh/nk/eZ71Lr
/6xH8sNVfpf/hhxVctb0S11nvpwHNn1v8qj0Ps+bn9443n6H0H5vdCk5f/79
pbbvPuN6lo7Xl5pdYPMDe27X9/ynz/rZ30l+3/H4f3bB7AB+D9Pyb9c4L/+H
8bFxfNkDNQ/xUe6/yjG+z8aRcY89Z3Ef9K8bj9n4fBovYPmbvr5ylHGP+Q8q
ZX7GPxavY/7+6zoA42Cz+65xZE/ni+q88fT1Oy1ugv6iiq+o/auecr/tG2Hz
UVe9RLuQ+q/mz67zVMb3Nm7su6y/m1yaHDPuX0p/Jv2eS8mXk4+27s/8Czb+
zf5ie7Cedn/NL5ncL/1j8Srkc9Mnxr30fxfvsz2vdsDVvrHvtfoqfczvId/T
f09+t/T13i/+fXL+UsbpsL+X3WX9g999jRcu/n/qT+R9lAfsrxV3aVxh487k
FOXk5N+u2zzp7rf4yPG8cX/F7XN/y6XjcHI542ZoB5Cv9xzj6nds8Tor58rN
+KPdv5R2AO2Hr49bHhZ31zyArcsxP8KV9ymnrnaB2dW8j+83eWbxHGU/Fe9d
/fnUg6YPqWfpvzRutmOWo3if101OmJ+T8oXlop6vejU5SX+4+ZPNz3713zyN
17/6+42nLc6n1jebvc7xbvVn/lnzPz39brOPq7+ZH7/01rV/m11Qfq2yA2yc
7XvMv0+5OZ63fXvGYUzJR8uHcpvcUd95/d7yA7Aeqh8V/5e/a++Znlj90I9e
dgX5nXxeevCqD0tPGsfbedOztHNYPuP9cfv89sbvZQdYPP7ey3pgPZb9Uv5F
6y81D2x8f40LtfwrDpXym3qe49E43s6T1+383sP8jOftePbA4vcZx0M/OTnd
1tMWxzPlOty9b+l4fTw/zq9y75j2C/P/Or7nvdwrP7jZt7xu/d84uuTg1b9f
+ZR9cv3OWj9g8u+67rP8z8Y/V7+ajevi/Yr3M166+jPtPnKa+fGL94vTbb7F
1rVaPtbPrvNQxcGMZ77Gg5m/3PZ1LLvF+KfmJz66PxA50vql2YnkQp63+2ln
Wj+/jgOzb68cbHa3zT/Rzzd5Su7nOl76h3k8XiM3sT9YvzP9Tg4oe4z1UvNC
Fudf+sXs3qteM785/WHlF2O5rn4ptj+fu+rL5Wf2BfvD+sv6FXl/XF68v/O8
vuM9z/x3bPapyWGT18XzVv+1vpfjxuTz03VSxntmV5g8NT9ixQ8Y3y8dr9vx
OJ6/i0jer7h9+snn/6Z/nv59433jeuZncfkrz/h+5aa9wn1EOT9Azqef3+Z7
LbX+bfcVT5ucMXlp46nGZcmvsnMsP/suK4eN+5q3exqPsfQ6X16cYqnN91l6
9YvWc8bbtr8OzxuXVhymzRNUnCT7y+43+7E4/6PrAK78U7xf48P8TbUOuPz+
zO/K++b3r/5c9/M5e96uU1/S70X9aPPozP+6f9j65TiMfETeZ8rn6M9mf2D/
ph+ieN/ioayd6aewOLVaP3m110tfPJ13Lj9x8afpPV63eQHTc8UJ5Pods7/M
rrT4/HH81t1y/S3Tcf7X63nfr1+w+Qbzw5l9ZKnxj7VzxeNYPy6/leVr66dq
vRf1Mcet7TdM/c77a99ipvTzP+X98TJ5uLh+9zFdPuR4xtu82v9LvM44nnYL
62HpnlvK9/F3efcdm3+wcc/xudT4nOPG5MN1XtLGKcdNxb+ZfHtql/O6cb7l
e32fxUNYvEL5180vaJyxY8u/uMb43fyS5l+9+k0rPoR63fi79G3xtLUj/YA2
Poz3a32N3V/2Zdkxtb6s7NmyM2o+uerb9FXNP9W+rTbfxfvNDn1qDxjnU4+S
bzku7DttXsfizclp47Kl5Lc9t/O8bhy1clE+Fd/vftYP69/kjNlBV/1BfXUd
D9Q/Jv9tHPD9JT9M35lfjnqedl3xAfX0lfcZrz/OXzq+f+X7S2/p6/5ffru+
+7kOheUvP6HF45Z/z+q1uKDkM+WV8b7Z8+YHq3hO2++CvM7xyjh6/t4gOZ+8
brzPfHg/z5P/x/vj5PF3+fcrDof++vE84+1nZ6wc4/xrPe07abfYPAW/Z7zP
fnq1XzkPTPluPG92NfOjftn9HC8Wb/zUT0J5WXE2Jc/tuynvjWvMviZH2Lrd
4mjyc8UJfNR/ae9nOc3vWflXPM3TeZQr31r/Kj4vfXG1I+1+jueyX4q7jT+q
Hj4aN1r+/XruGq+0fvTR9cXkfuP9GhfkV/KvrWOx8V/2zu4zuUWeez33Pm7f
eJ/P7fzkH/2WrKd9J/Wf+Q1YL1Zf1g7XfY2Kn4vjzG6wcVS8z+epV8oOsHan
/DCOpz1Avrd0/YJxO/Trk/fJ90z3PNehrFwmDzfei/etXdi+xv3WzmXn1fos
+ifo17rOT9e6PPPjbZyR/+lfr7ibSsnFZifwvj0/vjbu57pdxuPs/Lh6XL/n
yfdL9x7yPuN1rt9Z5ee8BPcJunKF8To53/j2yis1L3b1A165y+TlNT9+j9kP
Zmdc/Zm2Xwj1OI9r/0WLR7/u21j+RON55ldxGLXfTvGkyfmKL6l4t6v//am9
aONj95tdTf1sz1d5rB9XHFGtX7j2+5pHY/1c7QyLV6q4OVsXcbVPLTXeLzuA
doaNL7MDGE9GnhvXk5+WjtuoB3ZsdgL7ocUf2vfXuj/b36Pax+LyruPj2k9t
vJc/gfKH8yZXf0TJG3uP6Wf67cn9a3/68cufb3y/+8b3sxe43mQp693kk8m5
mre9ynGTT1f9X+ubzL9f/izb78D0vcXlWHwOedV43OJZ+Nz4mHHutCN4zOfG
zeN2W+dKzr/67XdsfG+8b+nuI+/TTineN3lC+93m6Xjd7APjd5ObT7nE+Iyp
yTHjh+J8e1/xv/lJza9a82+2n8x138WrnKg4jbITzD64ltv8tVe7j+1Q9p3Z
ESXXjVuN5+08+wf1Lp83O9vm24oDNr4tP+OF4qOrXc38rVxlp1ztMrY3/fGc
V7rOX9m4KI6vdS18r53n+zmuV4/kNON9rutlSs7b8fLf+zaObb7D4nvpRyQn
sF55bPaRrfMxnqe85zip9On84FVPmfyxfs/rfM/6y84/5Xz2o6s//9WP3/9O
7jif/YpyrvQC5Qb95qbvr34Kyrkr51d5ax77uj6qeL/iC2pfAYuzsXF85V6m
ZleQ8+33dsf943rG++z6+H7PLR2HM3/jefsOe37vZRwP7RXuF7R0+wxZvybf
U7/THjD7gH5H42DjZ85bmhym/DL9b+Vi+a7cRT7ie1lv17iEilOmfV/cYpxu
+V3Xr9Z6T/MTmB1Af6WlxvnWLh/1h5XcrXnZ8vusXOQgjjOzS4072K95n/FH
jber/WrjhXZGxfNXeVmP5Xcgv5Qda3Y295Vhv604IvK86VHy6dN9eXne5iso
r8y/P96in3bXx2G8zvumV9gPzN65+g/HG1aP9v0mL8tvZH4kG6fslyWPSu6U
vW5yivrWvtv05frH2nHHS81eXP9YPxrPW5zOOH/PTU4yNX/i0/l9nv+onuBz
rGeer33izA9lfGDXiwdKDpHTl9IfYeO14nWWFu+bf5+cT96m/537XZLjGZez
55bvzi9/+17z+9v5peT62SG0RxinX/E8HC/rV8bFG+d1ns9THpp8tPFX9xkH
2Xg1O8XsGOqnyt+umxx4yt81jiuu/Xo/425t//laF0Q/2lN7gNxj66pK3xoH
W7tZvHvFude87MpDu5rjseatflIpOaHi2Yz3bR7hOl9Xepr1U+Ofco3taPPk
5W+rdaA1X2X++I+mFU9n82WUh+R9xl+M1+hv5THT5bN82T/s9xDG8YzXoX4l
71OemPyydi470+xr6hOzQymnrnE4HK+mT208Ua7YddPXxflL195r//WfcT5T
xvHQvjTOt9Q4gPVT+oL5PI0bvvr3bV6fflnz65X84nnKKepZjj/j/et63OJ0
8n75vZ/OC1w5eyn5v97PdUe7n/MGy59+e75vnL/nGWdE//1Scv6rPf9A5Yjp
Vfp/Nu6M80ve7bnlw+c5Tp/6T4oHTJ7Zd698u9/iPIwjrzxY/vyar7vaDTW/
UP6A6373tp6yrle8UM1PWf+79nvj35qnuc4T0E6xcln/us5XcHzY/Vd+Nn1m
8QB1vd5DvWz+g2tq49Lit6z9ap7L7IFaj89j2gO2XxefN3vC9jlY/U8ej9ss
DoO8RjuA95P7KfcpB/j9S83fSN6nnXPdb5b1ce1X5g83vfXUT1zjxfq55Vvx
LaYvjffJ/YzbX/tb/7D9dmYfkjNY76xvk5OsJ8vP2uvqBym9UfP35fe3/QQs
pXyzeEP6Izauav/M+p1b7j/J5/nclff5vN3P/Bh/b/zN+5bWe/g7WYz7J99z
PoH77Y/z57//hW+TP/3C8zsm5/+VT8X7A5UDHD+Ue8b75HfzW9IPMvmw+zke
jcuuvG/yuZ4nF1AesN7seUtN3j6NIzFOKh69co+lxvvm7y8/h+2vSP/D9PlV
LxvHP9WP5dcnJ1p7l7/eeL84+Gon8D3X+JnijbJjd97Gx3Xcmx03eUJ5ZNxl
46Ps77Lbr+Pa7AP2c+P0WsdfnG/x6qsv8tt4bTxG7jeOo592+Yzj9h72R8oZ
fjf36eT38tj286pxTPlicsTuK39zyW2WY+1ztYdLP5Rcod6efifnM37H4rqY
rn+sH61/MH9yuZXPvpv2yr6Ddue1/qrdrvebv93GafkFbb+B8k8Y7zOujvx/
9a/bfvNmLzAf+uWN93ed+17SjuB9zN84f+fJ+btOjudz5H/G7Sy1uJ358Y3r
l/763/v27w8/y78/PM9HUY6ZPWx2P8cP5SXtAnsPy1G8bnLX7iu5Xu/hfaxH
3nflO35nyZPisYrLuO4LUFxndotxY/m7ar/ha7+1fvDU3rJ5BLOXzc9U+sTa
u/p3cf51HNn9ZTdaat9V44m8z/ak/DF/w9LSv8bxxWXX+b7ifaYWR3ddn8/7
jWvJ+0sZh03uJ88z5TwB1/Oy/5ofkusnWD+1H2nJD+uXtCdNr5kcKP1gqcl3
G58s39NxbuOMnEw/vvUL2oG7z/rL8iV/X+Vl1RvlBeXElfdrfFd6nee3flu8
X/fXe2g32z5Yxv3k8HExeZ48bvv4mx1Ae4DvWTn5fMXnvPrbe87/DfD8UuN1
cvuOyfu8z+J3xvnz54/vx/Xj/Fe7/dHbcc1Psf9yvBhvFFeVfDT/nNkFxT3G
QSWPKd9YrvIfmvwuHit+vfJm2TnFZdc4o6f735v8tPUFFe9jcY6mn40rLS05
Xv2J9fCU6407qtxWz/WcfQf7UfkLyn4t3rFy1bjk+bLvrnFXT+fz63nTs+zv
5Nmn8wLFu2yH1du4y+IzxnP0y5Ln6c8lB1p8z+qJ32f2TcUzWFrxMxx3lCfG
/df7jbPLjje71cbr09TG1ew/9ou1K9fdrn+w3cn99A+yHYxLnnK1zcuzvVm/
V/nwdN6w9Gztm309X3aB+ffJ++Pn+t0tnifXG79f7xunc37A0tonh+/bedu/
n5xf/L77uM/Olfdf/eM995s/f+mucxwZz/O6yQHKs+IISy2/0t/GOxzHJR+v
9kt9B+W5cXz5KcrvYN9VcrF4n3LK4ultvtH842XnmJysuIriz/LrPLW/Kp7L
2uVq71j/XbnZz629r3FhNR44ru19xvPM1zjH5AZ5Y6lxv+VHuWf9rea7at6i
+uP1veavtv30qKcZz8Nxa/KG9Tu++5rPvuyvQv6n35f2wO5fuvv3vrWX2T/m
13+6ny/9BGVvVz+lnKb+2vfxO80fRLnFcXj1J7E8Ni5NTq683H+Vdlzx/tI9
t35V8rh4/xqvauuJnsqJj47zHZuf3fTbdR+Amt+zdONpcuPV3r7+3fz842TG
6ZOna5/+Wre7lPbHni//fdkb1/37l5LXt08m/fq831LmM+6nv39+fvL9zi81
OWPnr3KOcqn8Faafr+8z+We8YZxcPGLlKDuB7zG/jPEp68H40Tiy5N3TuH2b
B6ScMr/22tv8nU/jo3fe6oXtRrvS9Izp/cq/zrP9TR+Y/Wh2NvVTtZvpR9N/
7M81z1GcX+OI8uRp+lHer3nx63i56v16r3Fqxf8Y79NeYH+nXC7efx1/2Vdl
x7tvfE/uJyfSz7v2Wz1x386K4yGncD+iKyea/c1+bOOV11ev7Iesd9NjZaeb
HjS5VfbJ0rXL2ontSXuPnM/7uQ63OIHfffVXld+p7Itrflf9euX9p/79j6a2
bo5yg+Np9sDS8furvb7EwZi/fZzOtPzz42+mZg/U73Mxn51/9YP3v5O7/Gy/
TON/XmfK/Mj78/fv/Pz924/nJff+QFPyI/t/paWv7frOX9ctMp/iK5Nnxh3l
FzH+Yf3Z+62e67rJH8oL6iOr9+LYshsq/s/801aO8jfU+lbqSfaP0sem50wP
X1Nrv9InbIfpQX6f2dHFleaXNr3E9qvxw7TKy3YpPwH5g+1Y16/8T/62/Wxq
P6zqv+XvM/thx9xX3vzZ5H/bz5bjxXiPfvvxPHl/55eO+xi3z3y+jg/50v/N
z0n/v9lBNh9p8vuqh0z/1bjge6xfmn4wOb77bdyzfU0urr3XTvZ7DJaS+9nu
9Ldc9RO/z+wzs4usfSsfk9dP58nNvrd+XOtvr79zafODPG/+fNuPn37+8fRS
43fe92rXH757jut8yffG+zu/fMftZRfsfqaM32eczo6Xmj1A+4G8v+vG/UvH
+9uvZ/7+reedv3+8b3Ko9C5T06e8Tu4uO8P097UcxlcmP672RnGlyXnTKybn
an7Z4icqPqv0hN3/1D6zdPcZN+0864f5mJ4yjme/qPKZvWDcWO1f+oP30/64
fn/1y9pHqOwc2hfWX/gd/B4bvzbe7fpS8kPZGRw313UsH433ebpexuyJ+n1t
6nNyv8WxsL3Ge6vXHRv3j+vG+/TvLh03Gu+Xn9/sq/rdAdvH3L6f46nGg+mL
q71ZcqfuL//Nnqc/neOHfG/p1+35xc6zOB7ur7n32feVnqnvrfqxdtxxzf/Y
uK04QZMPV/9BrWerfbuM7zlu5h+w36ne8dL6fQzjfMYB7Tz97MblvL/4vbi+
fo93XE6//TVuh/tyXvfnYcr4fv7ulsXzUK6YvuS42Hhdan474zA+T71i+pvy
oewK4/2SuyU3jW/s/pJXV39FfYflZ9939YOQS01+Ft9Sv9p3WT1SL5v9Z+17
tZ+Mv9nviv+r/e37iyOYP8eh1R/b0fq/fYeVi99lcoDj1caxyRPzA1w5zXiK
dozp4ev+VOVnrPie4gbz85n+Ju9X/BE5cHKZvG7rNXc8jjfe3/G4fyn788q1
8o5HrvsaMWV7UC/te8nH7P+l58ovVf3Z7FR7D7/Hxo3xPtuZcfprz6XjerPv
dh/3X7X6NPv7qh9MLpt+M7laesnkwlPer/k9u+/pvjzXeQD73Tv+ju73wPnX
dbO1T//T/Xiuv2db++jbefK+cTx5n+txyfksF+0JW8+794/3mXJd7+J9aryY
fiRfGGcYh1/1taXlvyt5afq/+OWj/gV779V/YVzM9xhHVTvvvMUZPv1++y7e
d+V0+66yS+v9xt123drRvsO+y8aX2U98bt/N51kP1o+sv3Bcblwbn1S/t/FI
vngqH2r8V/1bOXf9yukVz1Z2ucVbXOcJrnEAFf9ivGL9Y+1GXmc8PjlwdsB4
3uwG+vfZ3/n99btlVh+13r7GSdmnV/uV+tPGucmbyp8pr7NdV+9sX/I9/fo7
v/vI/YzXN76v/lnzv6YHrv4+u5/vs/FrcYH2HWb/230mJ2r9D/32HC92nrw/
zl/6s+HP3/WlXFdrqf2uF+0AHl/99zv+wed5Bdt/fxxOHjfeZ5wP43SsPLQn
yPvMf1xvKf397OcmB4rLKf8sH8o34wlLTS7tuK7be4wDrvz+0ft43bii/BKU
Xybfi19t3azZQcbFH60na4+dZzub/63kvMntj7bflTOtfliOmmcwjrZ6tPo0
XuB4o/3A7zF7bKnJEbMv2K42fk0uVXuwv5adaPV45frqD0/XpVv6dJ9uG+dW
v2yP8TlT48Kluz6uN/8x473JicY5131JTL5RbphcrX5j8pH21FL2H9oB7E9P
xzOfv3I+51++br9ffsf75Pyly3fls/VotV7d1olZ/dS6MpPv1Y41fm0/i1qf
ZusEeL7sC/PnMz6fXG/nx/e2D6eltf6WfG/74y+tdbuVcn/94nyLw+f+Ozwu
3qefn7zPlOt2za9v3F/ynCnvN+4wrienkcefvsfym1xZavnzPVfON/4pPW9y
l/LG8rPnLDWupLwgv9T8aek1k6fGs8XBxrlVz/Y9xvtV31a+aztQn1s5ntYr
udzqx/px8b5xPL/H2qH8Bzxv32PPmfwp3l/K/Ph9H+2f9l27Xnrc7H+bR7ju
82H7T1r/WDr5Sflq6zjHf0yN923/zt1HXrT1u7YOkmnJserX9ZxxPt/LfDj+
Sv6zv6+dbFyY3t15tsfqn7xv7WztSzlS61Se7oPL+qNctTjSq51m4/G67sbs
AvZTW09e8YVm/1/3r6Kfn7+ry9T877XPZl0fl7/6icfT73r9ni85v/bZtHTc
zfh543ym4/lxvvE+/fq0A2xeget5Wb7Sv8VVJk9Kz13thdLbZlcY9xf/831X
jrPrVV/1XXXd7J59l5WD8sP00VP7x77f5KvVY9U/v8O+s3iZ77Hz1+vXfnL9
PusPa29+P+31p/2N5a16un4nz1+5n+c5vnn+Km+qn1b/5/fyfMmx3ffRfT2u
8T4VB1zrDey7KD/J/eTCn/3s3+U6Tq7fNL4k7++9q0+Lm7juE2z8yHYm7/F6
ybfiS+snZZ+a/jO/GvUh9aW149qN8zTk/bW3zc+s/BbnXvObqzeLd2F9WzvX
70Q+XU9T+2qVH77sHbMTan36df/eituv39cdr9vv7Nb+mrWPZnE831/31f0W
vz/ONt5nnP1Sxu8vP6YW78/rtZ6X5TEup3+t5L3xJ++jXi79+JT3ed7kmJWL
5bNyGD+WX+DKl5Yf64vlpLzn9yzfikuu7yq+MX5iPZjeI48ZDxovP02tn9t5
u8/0tHGCtXfxtdUz+z252Po1+0fZJzbOWT/lx2Q5yCNWfvZrO29yw+q/OGvX
+b1ln1m+LEf5D20evzjE9vUpXrFxae2/dmNcDjnx6ziQL7+7a+tDeX3vIe/X
ukbbD9HWL5R8rHFu7WftzfHHeUfTe8b1tKcspX7kOgzbf4fnd//anbzP8cB6
uq7LrfZ5Oi5qH11LmW/FH1m/q32uKy6t9umx9erG+/PvLx3/1+/rkp/HzTz/
6s9f/NrG87zP9tEv7qfdsfLW7+0y5f6Ztk6X13c8Xuf32PHu53wA/f7X9b3U
j8W7xtHFEZRL1Mf2nHEI7+d5vo9yjeWn/ia3mJ4zfniaFvde/TuU+/xucjLf
a/LWONX41DjP5K997/I1u4160OqX+VlqXGzn2S943uwjXmf9V39ju9t3mN1Q
/Zyp8WzxfnGR5Vupya31E8oF65/VX3jf3rf3kP9Lblpq9VX2I8ep+QXN71dx
xuZv5XhgvSxlfM948Mfz/xf/vcX1MGU/Z70UD1X8xDUt3mc9sr/VfAr7VfV/
ykuLu1q9s52Yst3YfjtmfuZ3WHtVHKXVY9m7V7+8xcGZX97WG5QdUXH8xevG
7x99zuYDxvfj+Fe/+i1dr1t+fuPZ8fPOLzXeJ4+T02lv0B5g+XjMcnP+weL9
zU9Pu2Ap43dsvx6mZv9YPbOelj/HIeUI5Qz55coVll/5wyx/05PUv9Qf9BPZ
9+58pZTzpq+Lh40L7btN37L85idl/RnvG6fW9/F7mNp3m31RvH21u6w+n6bX
7+V1e2+Nnyp32TH2Hdbfyh5nauO67Cx7b8kLu492rZWf5WC72XPkKquH4n6W
7yovecxxRP9hxbUb9xr32/ik3CVvjs/JkbZ+1/z9tAMox1cP5t+v3ys13mP/
qHVNJs94nf3vOh5MH63eKf8rXupr++k91xvfL91znE9geUreUR8ZZ1/tMHue
7Vv7al3j5Wz8VPzddZ2y2RMf5f7x/jj/1U6/9Y73mVocf/nJx6Pk24rbMb/3
7rN4onG98b3x/45tvmDHe//KM643/zrtAvu+a/2Q680e+tr++aLHOE6L5z/K
GRz3poftvOnzlfu2r8B7fUI+tpT6xeS46el6rurT7DPTA8WpJh9ND1l5jX/J
3fTrmH5ke1u/MX5iuaqfWf2yHnmfcb3xJMedjQvmb/2/0uLQp+OX+bIf7r6y
v9iPrN6Ne5ma3LLvsHKZ/GG7WftVuas/WT1QPvE7KE/Mf3nliuv+59Z+Kyc5
fXJ4nLjjXbd1vGYP7H0rx8pXPGa/R0w7yPwTHO/F9/Wc9b8r73Mc2L5HS8nt
X8dZ7feRf+nz9V98Sxm/s3a7+pfsO60erd5Kzxj/f3SeoNbTsF/VvlDXfXTo
h7ff3TX7tewD8n7tv2l+fdsnv/bJtDh7+tHtOXuf8X3FJS39k89cX+nKY/77
6z789l17D+tn5609vub8f5T6mvLG9D7Hq+nL4lrjJhvf1DPG+5yvNP3B+J5K
Tc/uvMlrfjd5l89byvar9QlmvxlvsxwsL9v72o4mz00flP105UuWr95T3Lb+
VvVCP5G9l+Wz8rI9bNwV5+/7LD/jW+NokwdmV1p/47hm/vZ+a696zuRgcT7t
sd1H3in7ccf0KzAeg/myPWgnr95rn8CK4yH32Li1+lq5yZ3kfR5TPpefhu1W
6yTLz0/7h/2UacWH2L5obDfrl+wX5ZeiH3/1u5S8z7h8xueP/zkvM31q8qTk
hMlx80Nd9Yc9z3aqdbZ83zV+/xqHf42/qXie2s/Ixj/35dnxqz2/8P2uzw74
k88caXExtf7W/Nu7vuNX+37x5y//HTO1fT7Ln/+U98nVKy/tFMbbl/9++bOc
LC/tMq6rZj6mv4wPSn8ax1Dv89h4064/1TP083MdUfklWC/U87Q/TF6bvud3
Go8x371v93F+xviBnHq1O4w/rd2tvWr+oLjc6sP6KfOx9rJ+zfMcL1Yf1DvG
C8btltb3XfXqtf5tnFu+Zlca75e9aeWo8VbjeOOA91N+UE7wfisH8ytuL34z
O8LkiPGK7QNo8ey1XpEp+8fKOflE7iRf7jzjwRkvMnm+lPKP452cZ/xkvGR6
ifnXOtBax2T92dbb2rrc4n3j/nH8nuOx6c+yk80ON3lW/ZnXTZ6av+G6X62V
w3ja4nWudqX9nobZ57Xe1+yKzRsUNzK+Z/xofvTyz+88ub3i2I3rr3598jrt
AuN+phb3Y+Xnetul9h1lX/B3Eswe2/mv52ner6O1cWncW7xlvG56vuSqpSwn
9Szl1FWfX+XR1T9D3qac2v1LmZ+1F7+L+o/1wO8z+Wg8+LT96B+5ym3jXeO7
q16p7zPep157yuX2fvajsm+u9te1nmzcWjsWf1f52N7X8b3veMr79f0cX0w5
Lple7Ye6377H5FTx/tN9Oiu18c7+bOUfP5LzyZvm37f4FNsPxurj+jtdtq60
5FvFRdl+SKZv2f6MzzfeJ/evvor7dz/tLvK96RHafSZP7bzpW8q3q/6gvfvR
cVH79NQ++9ffwat9dD66/w7X59o6XNt/k+tXya07Nv99PVfXjZfJxeW/Z2r2
zU8qfunVP9/79437ad/s+2iXrTwr75//O8i+34jpSzv+KA+aPrHzlCfGH8UB
5t8nT1Pu1PdYPTI1eVg8Qs4oTuH1r/1szvtX/jKevfKd8aCl1s523u4z3q/n
WV9XrjUeq3q27696Md5fSv3N8fz0vdUfrv3F5MbO23ixYzvP8pBLOX5Yf0x5
/1UOPc3f7BDKkx2TO0rOst+xHa52JvXE6nX8SN5carw//qz06/y//B6v8VfF
UZDHWW88Lo6s+QPrN9buZgdwXoR2EuuNdgDrk/4jjqOSe+wfpudMTphdSXlh
8wD061d8z/X3MNju1s7mx/+u3G88X+fJ+xbX/j3h3ut+lrYedan5+8m5S+29
5idn3P6P93v3emR7P+0Gi/Mh5/P7q/zkelt3YOutiyuN96mvSp+b3i8esvFL
fUY9xNR42+SnyZ8qp+k7y+/KIcarLC+Pjfev8rr4q8pn9cZ+Yxxd/kXjW+vH
qx+7377D2snqq/Re6UHqKevf1v9s/Fq9WMr3fLS+19/I0dfxZva1tUuN9733
Kif4HVVvVQ7aV5aa/LV5PGs39ifyj/W36rfX51l/XL87vlycuO3bQz595fd+
H5nlt3oyu4f8RP9r/Y6R+X1tHqT2c9x5G2cm7zm+6Pcn97PeV89MbV005YmN
U1v3wecoJ40Xqv/Ve+05+/2tyt/246z9eSyuv/brXD9cHIf9Xq7ZBYzTt/id
ceNS8iPj+5fu/nEqed/8/PTXk98tPucat1P7cFZc//JhvTCtfYpqPYPNE/A7
2E7081u7mb7m+LryS3E937fzxu/2nrIv7Dy/k/qVPEy9bN9f3Gryu3jpmrLc
xnnG99aOTE2vWz683+rD+IZytvYLpT2xlN9x7Z9V79W+xf9P4ygqfpX9sfi1
7J3qr3Zf8Yhxc/VLa28rl40TGx9WT0yN16+8b9zG53hs85F8nuPVePTar8ze
srgGk7c/Pp7wSxzJOHPnyf3kfd5PfiWnrlwr5zU+2vz9pr+Kf6v+S06yH5Ln
ed7ioViPtJu4LsD0G7/Tvp/jl9dLjhZv13qJp/Mt13h4879XfH31u4rXsXW2
tB9oDzDd89/7zIVX7qe9QO4dpzK+pdbpkm/NP0+uZ/rUPjCeNrug3s9037fv
fY2H97+nVfH9ZafsfTu/9qJesfFFOWT8VzzF66bvTM+bvq/7llLvc38H6mGm
1F/1fcVFzM/4ocpR3FT20dPU/C3lr+Hz1JcsH/uXzZ9bOc3usO833rLU9Jp9
Z9kv15Tltfor3izetevsn+y3TMsetf5q47zazzi4xpN9l8VJmP1S45rl4/HS
kpcsr/GYjQPjeut3Fc/A/s16pbz92n/8fl8Yrt9darw/Tt1zu8/80xbPYVxn
fl+TO1X/rMey11mPFle/66yf3b/+xnpkvM81fofyuexIk4emL9hPzX59Go9T
qcXDmN+d9z/dF//6OxH2XnL8U8631OJDbN9O40/jV57f/RWHb/E25HaWuzie
vL98La14/t1Hu+fV73/0bp/O2QGv/v/Dd/ZRrRtguXZcep3j2/SD+dmMM02e
UU8ZJ5K3rvYAeYDvpR+yuG/y176L+sVS46hKmY+1E+vvabp8KC+tPxTfmx40
fww5xHif+sP0iHE624/1wPaiXWI8/l153/ynZldWua2fXcet9XNy/c7zutml
1m5lx9v38X01vnidfgHGR9T45Pc/HdfGf8y32pP1a3aTyXU+TzlQ497k69fc
/WvveJ3xPeT/ceme23nb54f1xP7O7y77p+ZFrvYW68vGja3DJdcz3fXx/VL6
+Zm/jdeS17VO2eSvcX3F2VccjXF0xeHU+tef1P73T+P2jd+N9+25733mX/Io
48SZmp+/1rWO6y0tTv6aW533l1qc/p5nOXme18nRNQ9g9sC+d1w/7i/+Zz1Z
/dk8BOUN9abpDY5He944hPc/5RWT18aX1G+Uo+R38j71v82nM98rXzzlgt1n
PGRcZPV65a3rdeN/Kx/16lU/Wj58r9kvZkfY91r/qnxsPeR1/4fSlyyXjesa
Z2aXWfsttfFoHM372A/Nf2rv5/ts/O2Y9cBxy/tpx9CPavODfJ7zBOQolmvf
bfLU6pX1W+OzuJb3G9fZeF26crGeGVdOfifXk193vPTrOKBfgr3w/ncVVw7W
Q/GrjV8bFyWH7T72a+5Hyu8v7rfz1j9XrtUPObr8E6wv9rurvrE4m9pf9qP7
WVp8/NJa521++frdXb7fyvHqD/9A/fnF+1cOJt/Sr79yXP38xvHlny7//3Vf
nqf79lRcfNkdS8nnxvuL59n1pbbed8fL1+rP5I/JI+MB4/HiiCtnWDns+bIv
qId3nvP11PP0q1Dv2++/WGocVmnVb9VPcTLlb7ULOe1pvDC5zvQey1/6w+YJ
+L7infqe2s/NeIjni6NsfsPsi7J7rF2f3r/xwfax/n7l02s5eD95n/Jj51me
un/pR3mfackB8l7dx/oqu9U43tYtGr/ZfXxv8Sv9zePRcb7F85Nfd//mB3bM
OHe2A+vlun8Kx+nysf7PflZynPXFeCjG9dBuYsr62v3sxxwf1p8oz0ze1j6X
Jr95bPvd1O9c1e9XMR6nOLr2xbT7bP6h4u2v63OtnLQTmNa63fEted/WAZOH
mR+51OLUjff5fNkrV7ug9uexfXIsf9un1Hh/583Pz319bN0v7QvTJ+V/4HWT
a2VHlP42vU+/nul94xcrJ+MeLS5yctf0h+l9ytHiq6sdZO1Fu8DqmXLb2n3P
Ua8ttX0PjIdrXrzig41fWE7Tx7yv9E79nrr5iSxf4/lab2bcZfexXmx8Wj+r
/me8z35Pbileres1vo2zjGfIfayvXad/mH5RsweK21kOG4cmP9jO5mc3+Wo8
dx0H1i9LrrC+GN8zbv/BZ389+X3yulKuX7X+sNTscIsLqXrdscll9lPaIztP
v5Ttt1m8v/uo11g+8n7pk6s/xPws1/5l/njyt3GxcXDdd+V+u17rfI33+V7z
7/O9ZifYfpTker5n13m+7IdaL1vx/Mb3tS+P2QtmX5jdcLUzrnFN4/Zx/qt/
/+ibT9X5/S/peP81zn6Y+/zbemjTI6VfNq5NTxlPmz43/UR5Y7z8UbuB5aW+
sflfymPjfMpvK/dTe6hSazerd9NLTKtcxrPl/7Z4TO6HYTzL91m85zV+xvR8
7atm87ZXf2iVy7631k/aeCq77ml/43nj26t8oH1vHGU8T7lBnmE5WC9mP5Pz
bX7P5MNSq39rH5a32uXK+SVnd936Xdn5tu5kKe0k7t/DeH7yPjn3Nz77q5cu
H6bFuWXfk/efxuORj60/sx+svPTv//j1tr7ugXqO7U37r/wI7Hcl962/XPVF
7XdT+9YbL+958+/bc9ffuar5hn0XuZ7p94LLKx6J+Zk9sfcwNd6vuJ6P7ptD
rl5qPF/xNbZfUK2LNe63cpp9Qf/9+J7+flvHO7uB/v2lu28px3fpF/O7lb61
/E1vUf9QX5IvKT/Nb8D7WQ7qHeMG8sLO83njCb73ys+mL6/txnotrjc5buUo
3q/9BSj3JkdMrjN+9KPx8HX+yvklvytOp3iA3GTzCeXv/2i/sX5rPExuLL7n
+L1yKvO177Dxa+VmavVE/ifnW758v9Uz37v7ar3oR+vRysXxXfsZlvxdvqwf
zrOO28mxO2ZK3p99sHT31T5LNq9xXRf60bgV2tHUr1w3zvpZSr7neX43+4Ot
j631C/uOiqeh/Lz+7qztW1/+9qu/2+JoyLPmVy+9dtUXLBffy/MWV29cb3YD
rzO+hftv8jpT8q/5+3nduLp43uLrWY7ifYuXWWrfxe8ze4H5jefJ9zw/fme5
WA+8j/KceqD0pukv6jnj3itHFC8b/1Oe8vuory0el9/HY5Zv1/d+4w3jHmuP
ut/q6crzZg8Yf1p9m5+m5G/th2Dp8q39G+iPNP1V+zWYnWFxPDV/wHpkfnx/
+R1rHaG1t/VP8oZxPO8jx1m/5LHxKdOSEyYvVh7jPSs35Zt9r/E/7+PzO+b3
cbxe64f1a/LM5Ab7gckfK1fxrPVD1t/80OPU+flf6d98Ox73ch3AM7vgS/vx
Oype77pux+xS039rL84n1XfSzln98XtXDvabije82nm1T47xOuX8ONT89+T0
74FjjWfJwVc/eKVP9VvlZ/zOuBnbJ9Oes3TPWWp8b/eVH/z6u1c1D3CNG7I4
mPGz/T4Y+dp4n+W2fLnvPs/z/WaHcF7ix9/n/lnTp9SXS2u/Xj5f/qzSO2av
mN4xe8b0M/V8cRHLZXxlXGKcYnrV9DBT44DiftZfcar5w4z3r/4Rm0+97oNG
Tn8ap2P7JVzjd65++KW1HxzjCJ6uG1ha/dA4sOxIS63/Mr/yS7O/kWutfDtv
HG4cbOOWz5mc5LzfUsu/6q/4+doeZReVnDC5Urxfdif9L1/z6fzzi+P/RRz7
/j3jXfLvUvYLfnfZ9SY3+N3Wj2hvkOvJ8yu3nf/aLvrlt+tfr494v16ZPGDt
yu99up+B/X5U8W/97tSet3Wj5seveJY9x/wtvfJ62RN2nZxv9s31vuJ5Xrf6
Nf/6Nc7e+Jn8X3ZH7Qs0TmZqvw/AtOL3WT6zM8j3dt3ut+d//D4/vS8i9aXJ
ZeNlk29X3i89aFx69XsVz5ffy/Rf8QjnEfgey3cpy8fyWH1ZvVo5+XztC2Py
veYx7fcFLaU9MHlYfvlr/sX713li+qVMP5oetTiBshtsnr14r/q79bPqV8bf
vN/GUaVX3q3xXnYO5RflofkL+B6rxx0X1zO+y7iS9Uq5Yu1jvHeVt9ZOJY9X
T/Tvf821v/QuXZwPeX7H5N+dX8p9FyiHGc9DfVn7ky4f9ivyPr/f9t3f95ld
w/rYffTP7X1sN4vX3/Vat2T+E/NnkGeNfylndx95nFw8/rpyt/Gs8fLTfWvs
2MrB6+Ra+pWNO3dc5avUfteK5bB4nfLnG7/b/jjmX699c677fJLrWR98L9uL
9Wt2yI7J8Uy/5vj3cUA/Pu7f92UoPqacov/K9N/0z543PWh8URxs+tM4wL6L
ctnsDCsPeYDfS/l+5QOW28pb3G7fZ8e7n3xP/WD+8uvvDNp+COaHMf93/Y55
rbe19VM1/1DltPkGjkOrXx7X+oSKnybX8Lj6u/UbG4+VMv9an8FyWD7W7zd+
WH6zv8tOYn5ll1ccPvvF+i3r19rX2uNqL1m7s5/W+vLifpNr0yfj1eJ3cv5S
rl9lPuRh9od9F+VMfT/rgf3E9OaOuS6Z9s++19LdV/tQsD9bO9d+ZNd5U6Yl
R8seIF8ZVzMtPzf948W5OzZeNw403rf8WS7ypnFz2RVWT8Xr9f6n+VU8j/F8
cb7F+VhadkjZI9aPa17lB5/nEcj94/fXuHy/vvfTa37M/j6U56UvqL/I88Wv
xpE8b/4m00PF+5by/cXZli/LVxy+81Zv9pzVQz1n3GH1X+9bPVvce+0vfP39
wevvktv6rOvvLF79/BVfWvLb7IDlX/x0XS/3lLM4/q98b3LB7MvrfeTRK++X
XV92t9k5/H67Xu81ecvvpN++6v9ajpK3Vm4rB7/ju8478fvWPuT94vkdk3P3
/M4v5f41u3/vX32tnJQHtT+RfZ/pC34345r4Hfz+fQfv23dxXtlS668lj2q/
nevvyZbfhNcpd41Di3+NR688W3K/yv2U9/m9lhpX8jyv23dfeb84+cr7tf8N
+bx43uyC4n1+z9WeZL2SF9juLA/jdK68v/OTM8bLxoHU18XJH9VPpa9M75j+
r+97ap8YJ+26+U3IGZO/VW+sJ9MTxvN8b9kFV/1u8tzmXSnHKBevnM99fGzf
Y543fq95Afr1GFd09dfwe5/uT2Hrj40fbV7enqOeNw60/sd+SPlAviZnm1/R
4gostXFt8orlsP5vcqt42vIzO4fp8h3/Xe0Q8rN9v8lFlsvkLdur+m3t77hy
rb8wroXcT//9OJfrzMbBX8exf7EPvuboX1d7sOw1s6/ZH6gv6NevfXho9+w8
718+a/drf7XvvMqliuc3Pw+5n/KX1ylXyVfk3vLrMzVOZX5XzqcerHLxffwe
4+qK9zHuL/81udnur/us/Nf9OY3zr/78K+dbO7E92f7Wzkx5P+2RH3z294/3
jet5vJR63fx5V/43fc/nTD+a/HlqN5hetbT0tqWU58bXxRdWb9Q35BWW2/jd
ymVcsHzIheXXIX+Xv8TsZPK7rcuqcWb317oB2yeO+qb2WzZ9ZHqh4pLKHrE4
/4qzKu56Ou6e2u3G+2XPG0+Z3W/j0uQNeYf5XPcnuKZ8b8mtWgdr45ryZPXB
cjBf23el9mOp+I7yg7PdGN8yzl1cjvm5GQ+zfMbDu598bPu2sZ7YTyyuyezQ
tQs533h/5WW57XsYr1/9lHrG9uf56H4BzM/26SmOYlyLcTL5jfqp/OfMl/rr
+hxT04d2n30P0/JvMz8+d/1d2o/GtxcPWLw9edy+j6nxs+2zTzuJ/W3fVXrd
5qlYP+zn/G7+Lu9r/Pzos5z57bfjpeP+HZd/zPSc6e+nPG/6vtJr/tSb9n3G
N5THzJdyk3J78rXsIfr3rRzGWWZ/Gf8zP+a7+1Y/1/00je9NTti4ehpfWOON
x1e/O/3v/P0vm2cwO8TkffF/rXOueXLTw7VfkI2/4mzeX36Dsh9sHF/tAo4T
ey/HDf0hLL/Z8cXRVzuj1sWzvlkPZs+T93c8OWR+oL2v4jW+635V5H/KW/Kv
/a4UU8azcJ5g6eyH5f/1e77Yd6Vf1k5rZ7OzlpL3GYe08tnvZ5Hz9xzXIS+9
2uX8TtuHmPLI7ECbBzZ/h8nT4mnj4+kd8mXxKPMtHq58LeVz9n7Ld3xrvw9V
ermu8/vJ3zafYHzPchfHX+P063ey7Dzryfz45HfjDNP3vM5j2iM75u9zjff/
+qe/3/7mU7F/9nfe2QOlN6/+uJIX1CtLqQ+p34uTy84oeczvLXvC9KfxNL+T
PGB8UXZTnb/aQ7zPuIL706x/2zqmjZf6/YpXPf5Q582Ml2kXVLz8jikny36w
eCTGBdn8Q63P4jinvXDdB8jWI9v64OvvA5Xf3/bnrvHF4+v5K++av+Lp+2qc
U04a73P8U+6ZPK3y0y6gnWZ2PMtjHGi8b/vRGLfXfi22XsXagf4Ucu54/et9
KH/p3bpe85PbOmDjfbYD64N20o6pL3b8tZ/IeX7lWkq7hvaF1Sf7vdm5dmzz
NSZvjOvNn2F+/uJ98qBxo8WdGN8yX9oPlla8u60DLnvAvru42ri3uL84v+r5
o/tkMj/eb3xf+/DY8ywn65u8X3x0tfeWcj/98dJr3H1ZrzuuH+eP71/j7nfe
zpeeM3nE609T6s+nnEp9ZfmbHWN6jPrV5KFxgulX0//2fVc7x+6z56y85AvK
cfOzUH5s3LBfzh7lflIcx+T96zqYsqPrPOUjud7idcj5No9c8wl2veI/jfdr
/bPx/3Wdr42Xsqf5PPvfdXxe139e7Q57H/nH5IuNR3L0dVzvvMmVa2p+F76X
7ze5V+1g/cHsSvMvmP25fGmncL8a8r7t32P2gcUFcX6A9WX1w/pgv9l3LF/G
79t6BX7XK98v8xDU19a/Te/TjqWe2nP1+39mB9R8MeWc+flNblK+GzfbfdRL
3zUenOl1P0ieZ3ns/cbt9V11funVb26/d1X1wd+TKo63eis7oOrP7DLyBPW5
zdNYWvVLvmK8zjh/fP9pGP3M774dmz4wPcB0cqr0mz1/9ZdTj1k+pqfKPik9
b+WzY+PpSqnvqZftu4sjjG9M3+68rUtdf+Z68XH97E6uG/nx+8F+4f6aB934
uqbF35Tz5men3jH9Q/1BuVDlq3W+vG7+hfodR8YlPY3rN3uXnGPcbXxaPF6c
bvnbdbNjrnHxNh45jslzjEfZdZMbJl9KLpk8nVwoO6Lkhd1P/r2u56x9bViv
q0/uX0M/+I53vfiZvE/ut7gnsz/Z39hupj9tfYGtT6j5hxo/1f/s+Svv2/7M
5lchv9s8KuXjjin3Ta8YzxXHGo/xmPqN+RoXV9w8y8H3XOPff9J2jOVv9Xa9
7+rPv6ZWX+Ru9i/T59aPKn+zQ62846Zx1PiK8Tzj/fn5Oc7J+cavvF7pVS/V
86bn6jnqOb6f8su+81oO6lfjC97Hclo9M1+rT8pn45ul1Lfmb1m/XL8bx8/O
XL9b+vV6kS/cv+dnNxgfF6eXXcDxZONz5698Xfqm9Ix9n8kX2hPUh1f+r981
u/4OsNmLxvscL8aNZVcv5Xi1fn+1D+x5G+fmF9nxuJD+jx2Tz2gXjANNTpTc
Mbmy91S+39Wuov1U+6pe/S38DnI/496Xku+XkqPJ+z/4HA/09fVfU/le8U6U
t9S/9rvCVf7Vx/oN7S7Wf/Vz00f0I5m9Zuu2+TsGNY9p66KKv4qrjF95nf7m
K2eOz+innt4jtxYvG+/z/itv1nuudgB5/Pr7tPz+8suz/sgPlq+lbG/W244t
joD8Qf1e9WLttHx4nt/PfTnHW/Pzj/df4+93c97eOHhygM9VPAD5tPS1yf+S
Q0wn/0wvF29TrpceNC6xerDv4nup74yfrF1q30b6X8iz6+frr/Tr074k98/f
P7uUco+8b36YkmM17ux+m1fjfU/X4ZRf6fq8lYfPTy/WPkLlX7PfBTM/re1H
YjzHY44L9v+n54tPi/NLLhr3T96Q93l+xzw/v+6OTU5dOb/kG+Wj1UfNe5g8
tHY3Di17cd9hdpLt2/n1/vy/KPH5f+fdeaY/+Oxv53431FsWx2JxSrQDjff5
OwNfp+/3DS07y37Po/Qzv/e63z73N7767SlHqZdM/ld8TPEyub340fzQzGf6
8xq3YuvgqD+fxtlf44RYnuJ9fq+t3ys+53vKfjA7q+wQW0doevgaN2X1Y3al
2XP8rnHUeJ/xFOSxp7/XQ/1oPHmV11e9sfOlp67pys/nqUdNn5K3r/Vk9oC9
p/yNPK72qP0Z6f+lvF0/XL9cfyPvc3+o9UP69dd/15+v/H2Va3a/8bLZExx3
Ne7NTjfet/S6/sm+p+JdOU9h8xm1f2nFA13XB3D8sJ9znJCXr+PG5IKN/+JZ
G78rFzl+vFj7oVPO0W7gdasH4/6r/DF/hdlRfN7sptq35xq/b9xvvP+Dz/76
cb/x855bSt7nfp37brOPOA6oD9iOy5/vXzp7YCn1EsvB91IvXPV5cUNxv/1O
IvmdcmnnKacoN43PSh8YZxm3kdvND83ndlz7WZBHl5+lpif4/qt98HRfG+P8
Krd9L/nA4pOuKcvL+iaHkHvKjrzOg/B7bP7I7MWl4y9y/9Lx1tLr72LYvg+U
DxzXV38N89nxU31V9xv387ue5k99Z7xCPuB9fI/5w6gvTU7XPtj1+7E2f7X+
ary/lP2OcnH93eT5jk3OX+PhmBp3G78bT9f9H02frp8ye8E43/h+56/z6td1
wrZOk+PD/AIbD8a3HM/F6XafjTvjGMZFmJx4yu20P4wHmX/JO5N/V/nJ6ya/
mL/Jp/I/GKfad65eaF+Nj7/22//i5/Q/f+P/cfX4mXFB4/yl5G2u46U9RD1q
/XHfY+sS7L2s9/Lf1++hl/1+/f3kK/eXXDLONzltacnt6/pP49k6b1zH1Pj5
ysVlvxS3Gp/a9eL86f9xg/n7r3ZArXeu8ls/qP5yrS9rR7NHivervshjXC9Z
8R3mv6KeNL3IfEzOGc8yf8p76hvTc3Xe8rHrpV9NTxbf8zrrpdrJ/DbXfdkZ
z0G5yv5N+3L+/KXsd8b75scxLt9185ub/L9ytN1n5bL4O7MnivOpV3hcvwuy
chbfl/9/+Zi/f/2kfmfT/Jrk64ojMA61cXbl07ITKH9ob5d8s/JSXoxXi7N3
vPvJeXy+voP1UvKw3sP6Zb3YfA/lFst55f2l5ecf73+d/srb/fZ7V8tn6Tic
vM/643eS75fyffZ7Wysnv3v51O8kXHnf/ErcT7X8fTafw3iepZQ/xvnlr7/6
TcjH9L+Ov4xflxrn2jG5ljxO+c84I3Kh6RP618ru+ajf3/ic38/r1/ib8t9f
1ynY/et37H+lv60+rnZd2WlP10XQDiBXUj6ZvjW9QL1C/WJ6wvQC87N5RdNP
LD/lrHH205TfW/fz/abXap87q5fiftu/pdZHkZs5n/l6//vfcV5/I++zn5NT
yddXHqe8Mn/NVd7tuOyfq54x+W3riGy87/zG9+5f/dk6Xsbx2Pl9p61X5jqA
2o/D/LXGoeQ5s6d33ri7OJmczfeZXWBy5Hr/1Q6gnDD+Nzlh+9oztXz5XXa9
0pLntBvNDrB6fPXb9/sgMf2a633/zXH1OJu8v3x2n/1+LeuJ7bT2XrmX31KW
Z5xvv++8fGteiv3D1u9f/fzXeT2bT7b9jU3ukoeYPuUz4y+7/qrnO8fTTzu9
SPlt8SrGf3ZsfqirPqVddeVP81uTA2jfWH3RHjC//9Uesf7xdF7o6u9nPtaf
jONrPsDsJvbPp7w6uWV60PQC9djk045ZjtI/fB/lnJWP+VMPWcp62PvI1Sy3
6cOrvcH3sz5Nby6t+VOeJ/fT30v5y35r/g76PUwuc/72yu+8znFl1zmO9z6+
l9xr5Sr9Uvrjuq+YyXn695eu3NyHs/b1YT+w+2rfn2t8X9m/xsOUI8zHxi/l
0TiNKcedjV+TG5RjZrfwuuVv30M5R3le9VvlNvvjmpacs31tLE6E+dJ+Gz9z
HS852vblIc9znsA4nPxd/Yflpn1i+w1x/QD7K+0r87fX73PX+pyaN7A4P9vv
mfK/eP+j67WMiylvLb+Kr6B8p7w2Tix/tcXB8n7TA6wH6kM+x/LxvOkp43TG
y9s8inHtdX6h6pH1Qt4x7i8/nz3Hcn50H6NaJ8HfOfqau1x+G6eaHrzKN76v
ONz0muVHeWfvs/TKCSzP0++/8r7xzu5j+TnfavLV/PvG/ZQvHO/sd7YOn8/Z
ODFeLnva5KbJQ5NzPG96x/SJ+UdMDtY8BPNjPrUewridcTpmB5Lz7fcy7Xe9
at0fuY/p+r/JH44fjgeLf7uOX77nyvvGz+YnKZ6297N89p3XfMmjfL7iQW3e
hnK44vk/Oh+0fkLeHz+P07/m+l96l369zpf3f7EbxuFf/z5u/24K+zXLS+7f
e5fa+9g/rJ2K101vmF1v88j0C9Q+/DbPTL+T+WHK38LU5KydJ3+Rt4pbn84P
U57zfPmlOU9r8/fUY1d/Wdkt1H/G6+XHtvZjWjxh+rHWEzK/yr/iDOr7r/tA
Gf9/zV8f/z0XyqelO0+5S71h+sF4fynXPdn91HM8/5T3mRbvU2/aecuf5eR7
S2+aX9943uKzOb9aPGvjm+O1OJ98TjnEfl9yp+LsLS2OLy4v3rf5zZJjfP/K
x/a0OBz7XXvqe+P4+j2v677+tR/7UvKcjRemFUdk3G3j28ZtyQ3Kl5K31+vm
x+d7rZ4oVyinmU+103UfJtp9jPu4vs++b98zf/tS+91a7t/DfTnJ90x3fdy/
9xmHM52eJOebv//r+KRff9deth7iagdc/fWUHyYXeJ/db88X7xuH0T9jvEQ9
wueMryy/eo/pt6Um923+o/iV/mvqiT1/1ctX/W9+wfLTV5yQxT1V3M6+01J+
l9Uzz5d9aPEHT/cZemoHvMb5D1XuMyW3m/9n8ox6xzif8oXPmf42+VXfU9/5
lPNN/5L79/2sJ+P10mvkmNofxeJ1rnH7JmfLfrbxWHx8jduhnDBep9ypuMWn
qX2nyXdbb29+DN6/97I9Su+WHq54LusfO7Z4HuP/2u/P+NjGD++36yWfirON
m0vu1H38PuNuy4/5Uq5SbrF+TJ6a/53PGe9bPuZfruuWP79r30Hep5+cnL/0
df+X/TrJ9UzH+UvH7eYHY7uT95ka9++7yO9Vr9ZuFc9vvG56pub/LE6w5pmn
N4r7LTWepz4hp9J/+tQOuMYPmT1AuUv+3/HVb8d6pV67zqdf46xKHxfnm161
emR7G7cXn7O/FAeZn3LH17iksocqjmHHlA/UC+Z/MP1Y3Mt8jaOXUm4ZH5h+
Nz1p5WFKPcJ6KH1t76H+K71n6ZX3a11u+U3Kn7J+zH5uctbuN//77q/4Rr7X
1l2ZPcH3Ma3y1rjc+K35ydILKw/lFvUr25/y3jje2tf4v/x2nP8v/rj69228
1vh66l+4+gHqeZMnfN7yNZ6287ZfKPNlPfH95o8oXrT9d677tdS+kMb7S9dP
xtvjYvPvv66/37eT8Tzk+uXDOHvG1+/91KMsp3G+2QHUl9f9MGv/ntrXoTje
5JDZB095n3Ko4vyNk8j1xuvje4vDLHnPuPXr/jKUw8XrOzZ9X/Ml5bev9ahP
421t/4nSj+U/ND1uqdmJ/K69v3jH6ueq56/xP8ZBxful14pnKzX7Ydf5Huph
83ebHWDlNXlr/r2nerr0aunDp7+DaPtuUm7SD8BxTp6r8x/l8WscpZWT7zMO
r/H0VE6Yn6LkA8cn5VmNc6uPtWu1I/WozeeYHmA+T+cHzB4gz3EckJPJ+0s3
no1TjWs5bmscM6VcK/43OWrywuSRcbjx8NV/b/VeKe0Lk1MmtytenP1k58t/
TXm/lBxtfv5XPn/z7ZjreMn9y2f2A+0B/m7y+J+cT76nX//rdceur+p3fSue
7uk6r+v84jXup+adLf689IHJX8pt47crhxnvm/+W+qN40vTjdf6e+oD6zuyn
Wl925X3Ok5ADrhxh7W12ksUlm76v9rj698uuvH7f7rd1fzYPUv6kK+9Tnpo+
pn4j5/O9Zics391nfkLyAcu5dHKX/he+3/T3lfdN35mfzOYvzH6o9VJmz1/H
gfVbHpf/g/3Q7Hjj3X1HcbY9fx23NY7r+afzoTXurZ1YL+R2i98v/W1+JEup
Tyy+h/rG1vPauKf82XmOQ+Zj/Es5x/cYvxfv87xxvt1n/ojdV9xWdseV45ea
vfHUD8P8ze6zfWLI+zZvxPZcOr62ffXp3x/vj/OX0q+/52kXkP8Zd891xLQj
aDes/OwX13UVNW9s+sTid8iNPE8OLb9/zQNYvKHJ99I7pn8sZT7lp7Z4dYtz
vXL1UvPL0A66+rOoL0uvmp4lZ9O/zTjV8gcuf/su+07jHIuHMt43HiiusPPG
O/U87SXr1+xXprdMD1HP1nO8z/Qh5bH5uey9pp+ov4wbjPeNL6hvix/MnjL/
fcU9ML3+flb5S8h11j8r7s7iVSj/2C8pBzjOOf5YXvIpj/l8zYuaHDP/Pt9r
dr6Vp+SFyWvjZ/OrP43vt35z1d+1Tyc5j+OoxiHlVPFn/R6g+RsoLycnlk5+
8DnKGdofJu/23byv5gnNH8DvNflp9WH2AN9Hf4Pt917zEbVvT+3fs3T1Tz/6
jsfT9M9zn86v/f6//HY/OX3P0z7YeYvP4bqC3f+1HeLx+lc9YvE9tZ++rcO5
xvWYv+Gjfn+eL3907VvO66/6/eE7Xv9J/S7UNY7HeK/0Ge2A0ofUK8a3xdX2
PM9Tb5o+te/l/WUHPfVnGm9bvVj5ipuYf/WHpbV+4cfbn+/Xhxn/LqW+I6+b
XWC8XzxPvVKcX7xv313l5vvKX1L+rYrnebrPMe+/xu+TT4tHrb+T69nfuB/N
db1JySOOa8p74+yaPyi/EevB5AfLaf75kh8sn8XjmH/d+mftu1dcf52/tzhs
427zB5B3zL9u/Gj7lpidYfLh6t+gnDF/Pstp5Sp7puSIvafkM99v/H/lTfNX
mP+C31PfQTm78+s/4/1av/u6/4ufn+t3a/8c89tbnI5xP+OBWN+mJ0p/2Lg0
+/3K38b1V/ug/AhX3if/1D4uOx7vT18Z91Ovcd9zS80Pa/6ep3xu/n6L/6x5
f+qda3yAcTP1rtkBpmetPq5xyNfU6t/0PY9rPqT8e/Y+csmN+7/oJ3I+9R15
n+fNP256rvzu5PpKTQ9e+b/0Nstv8rPkbsXpW2rzrSa3KSfZT572yxq37HcV
x1jrVq/xNpyf47jm9RqfPM/vo1x5mh+53eSl2QVmr1E/2n4qxYWcP7d5dZs3
KPui9nkxOWEcyvsnR4r7Km6O+ZvcYbkov3hs8o/lLB4nf1/X+1w5effxffb9
ZZ+YH744lN9l569xkGuP6alx9jh8/vjat2d+/j1X++iM25fuOdoH5v+nXmZ9
XPd54Dgvu4rzhRYnTv4nb173B7vOD5gcnJys9Y0232x6cNdpB9jvTNr5PV/r
fUv/lZ4g75LXi/ONF3jflZOvfFv3UQ9a/7J+UXYEv5Pl4rHxBvvhlROqHq3+
abeyHsm15Hnqo10v7ie3k5tNn/J+S80+MH1lfjDTC1e99pSnnvphSg+y/MZr
6/fWj56uPykufxrf83TfXJarOJj2fo278i+Y3Cs/h3G+yWOTNyaH9zz1d8VF
cDwYD1j8PfXw1Z//lBNLTlBOMV++11KzJ8y+sPlCk4OUVzU/YXLz6t9/un72
ys9mD9h3WFzPNTX71LiX5WP7rX3G0eVfH99vHe+4f/bB+N143/z+dn1+/PVn
9hPbR8fGrdnlNa9Hniqe/668X/FCxv0Wr0LeJ79/dL8dcvxf+vbyDzzdfRYv
ZPv4GDdf9RHvs/YyvWLcaRx85Vi2U91PO7Piy8weeVo+S1du4wor/7Vcxmfm
tyz/LPXP5B/lCu+jn4F+fdNnxf9mB1Q+5je78r49Z3425mdcYf5Lu+/6+yYW
t2q/i7r+wXFFOXgdt39+f/J95infzM9x3Tdn58nJ1FPk6/oOS228s3w1no33
Wf6dZ3krn6e/c2XzTPX7mdff0eR8A8cDx+PGNcfL5AvlzI7pd3g67ndMTjdO
LLlk5RrH0S54yvusH8qnkoP2POvD5KPZH+b/uM5n2nrRqx1Q+xOZ3iL3j9/H
++N6i+fffeN1y5d8v/eQ96ln2S+4TotypMZl/U4Led389yZv+fzT9bm13sd4
f6nxPo8tntT8UfTzj+Nf7fKjN763uB7Td3z/03VcllIPUU9Y/2E7P+Vk6q3S
gztv73+6vsz8bpayv1zjds2faDzA/ln5Mx/j/RvXuB+K+pV6jfKM8pP5M2X+
zI96nc+V38343eKGr34upqanTS+afqzfy6LflPuamPwk79s6pus+V9c4Q9sf
gel1P33Ln/qF48Lk1tL6TpO/31Xembyw76Hcs9/HrX5Cf2it42N+T+PYKs5n
58n7xtk8T7kxnqa8Mv6lHNj9Np7J+XbMfCjHKG+Nt/m9db343OwHyrGaR2X9
kkNLbpqd8tQ+MHvO6tP0yVLy/vz8S8f95P1dp19+x5w3YGq8v3z2HYyvp1yz
eBuOQ/p56/czjK9Kblncz3U9r5Xf9pu2OIenv89Eub37zG817l/KeB/yv/nZ
7P3kRdMjNS9MO6zmw+168S/1oOV//d019tuaz38an7Tjp3HES1cuqz97n6X2
fNkrti/p5NBS6kvKLcp943/jduZDeWt+rtJ3pffI1dd54/LTmx6lPjW9s+Na
N1l+Vs7rmt1u9mrxfMXpF+cWN9u4+vPt1C/3cbybnLI4mWu5aZ8U719Tk0/m
r7Pfqal1jhXXzX7IfPlc9Ucrp+2fbutUzX9ucsfkDMedca/ZB1fONv4nb1o5
zF4ov375Lep9lpqdwvvI+0/33TGOZ3kpzy3/HbNdmR/10PQe43K4Xz95/2s7
4Fd1H32L599zszOmP1du2unFOSU/at2snbff7yu/BXncuN7maav8fM7kuvG1
+cFsntr89xXPz3idp/4l2nfGn/zep+3D+yt/02fsh8zvo/FmLLflX3x/9bfZ
/dafa96r6tfsV+vP1X/I4zuefKI/jfrU9C/1A+Xp3rPUON/42fSZ8bjtY0O9
YXHx1JfmRzP9Wf41+m3q93ItZf8yO3vH6wfm96h+VZxe/Gzyl+W1fM1/tPrb
eKG84/jfcztm+fY+K/eeo141vVXzp+X3Mr/+zrP/mH/V4p7Nj8L8a17evv8a
Z2ScO/lCOWLyqcbrddxSvhlH0g7g/SbvrByrp+L+K0+X3+Kj9cV6q3id6pfX
9VEmr2mn8ntt3mjfYXpr3D5Or9/pGr9z3uBrrv+yb+fO7/2mH4xzLTW7+zp+
Ka+oR8ijZg+YPjJeLPlpqfE+jyuux3h/KePueZ33zW9U+weVn2v1U78zs2Pj
TGvn8o+znqwcfB/1Za33st/dqPkmm3/i+3m/zXuwvGWXml43e8Dqn+OEXHON
h6Bfn6n5/Se3JgfJ9UupH/c85zWpn3dc/nrTH7uP/WT1tHq3/R7MT0R9YvqK
esX0Lu9jar8vb3xv66XKXjQepx/b7Pqrncn3UX6YnjB5fvX/GAebfqNcMPt+
x8yH7Uv5ZBxNfzrtF8pF2++yOMn6pcXxsrwrn5Xf5JnxBu1slpc8WfKmePup
Hc7rzJ/vIScyJV/aPADLZ+meL7lF+WjcTv8O8zd5R/lY64aX73UetfY3K7lb
8f37fuoh8v6Pj7t5H9+z9Gt74Fff8f7Oz35Yfst/5WH8G8edcbLJyaf74FD+
2rzC7jc5X/OixjnlDzX/1FVf1e/mLi2+Z3w+r5P3yy9r8+2rl9p32ni/6tfu
N27ge/m8+blMH5T8oB5kf7d+yX5ofnWW166bfc18OS9h+rHsluI3sw/J97af
GH+fZKnxPvmd+tDsCZ6nf8P2aTO5XX4m049Xjq+0/GzUu8X7V7uQ8pXjnfdZ
/zA59PR3QYr7zR9AOWHxmzy2+UDrPyZP7PdmlrK/GY9uPBhPsr0t5XfY/pjX
fXGM9y1+3/j+emzr8oz3zV4xPqV/ge1g8YDmzzZ7gFxocu7/p+3ucW5blutM
90C9oFU9kCOgWsAeVGfkyrm+gCpD5nUI0KAhQChAhvzyylJd0lErBGrfOBvf
u8/Dkes7LCsx55o/OTMjR4wYGZlLpeIQ2cXCHdmVcO6u17yl4qe214orPs27
fy1f45q1/5nyyDqOy/e77vb4+de8ntuv89d9fI7XL75/v9/777u03/LSKz8t
F38pHxJ+l5eKn4iXSl/u9776oSt7XX/XOt2Vj7/+N/ee03poflv+WfMW9d/3
u9rxtVSc1v7TdeUf9Q+v/w/3Or9cO166Xe1P/kzx8+LtKz5Qub7j1U7EsxcP
Lx+Xn331g4dnLcX3i+/Vn6Rf9TrVU/516aNr37j6l9az8w1r3ZTsd82bdvyt
ePE1f1921/lQ4W3HW8eJ8vheeXxxZK2LULwn+zq7rT3Vzu64/FE8pHq67GLF
OdoPUfMHxd/ikHB25V1qXbF4m45fdfVP8Wjp97quONN61m6EO7Kv8nnFIcW5
T+OHfpfsVe8vni08fF1fUrtd+Pk636XvuO8+f1c97Hj67/P14/f/4Tfefzp/
9X6VF0/c+2snxbHyjdc898X3xb/F56/sfLDyVKQzi2/WT+j95e+rXOu17rh5
OT0+/t//ldQ+/uX/ax2deHbbTe3bcsVV9e/rdz1H+p32G1/7FS57bdzbepVH
6b76N/2ucaTndlzpulddd/XT+cPy+TsWD7/fxffrf6WT9Lz88fKT1e/kf+sH
l663dCb5q1c/p//LEp9T/2scr/5XXl3xWHqMeLvigs5jtp6dd5N+f7+XJ2qe
f/l7xQPla9X31vi4svtp1/7Lp8QTy3vWfoWLV634svrFwsFP+b70HMXprzp+
y+/yefVv++v1OSve6PnyesWfr/r7wifFDeW/q13v+r5X80ZrnXmf0/2mXveX
0jhRXHXf1XF/unvL4/t/+mteT/n+a36Pyups1cHUnuUda/y+6pXF78P547f1
J+Kr4vuvcYGeJ91K63Hrr7RfpvblXHFAr3+NPz7dF6/tcKXm5ZUnJR6x4ory
Vul39Rcr/275FfH31zwa2bl41zrf9pR+/1ov6fwrvvo6Xr2f5uIzhz/1gyrl
N/We8v3y+/od8f76IfEn6WbVj2p/0pHk55T/rH3NFSdeufBOvH+N6+J4+X3x
dOFU8UL5ddLvxU/KjzT/f+Vdv+Zvlp4s/n/jQvlwd9xxVHuuvYq31W7WOlzF
Q1r//arrS1eUnq945L5T/LM8U+Xip7p+4aKeJzxqqXmf3ifdvOfLt6tr1H4U
96245ey0erPwVeNrxZnlrZ/GLWs/WMW/bd/77o7r49/V+X/YyX/+he9/Lf/8
yzre0/Fb3u/3/O7r335ePOhVjywfW/nR5X3Sc+Q3Fu9curN47vp/3f+/+P56
j+KeVz+65i/6/F4vP6+4Su3dfr/j8uzak+LvNa71/0Lat67nxc+VFydeVv4m
/r/y31ouvv/deYT7/XDjtaz/e40PWi4/t54r/1kclH5fv9Tf66fqJ1/nn173
25HOL75fXf9VP1lxesf1q66g34s/9/y+975Hup3yjHssvnJ20eNeX/voe/v7
2Z/27auuX33wjlve9eVxtcOVl/S674Hmm155wOs+arJ3xd3lje3XpS8s/v0p
31/xWfGo/XfHwp/GNWqP17hB/H/pHIprWy6cXfx8za+92onwec0baF1L7eDK
8v1/medfPs9//EXnv9+r86/9O4sP7ff7DvGe1/0sF594zRtZ/qH3fZpXIr78
youru5fH639hdL/+p1d+8M4vf7rWy/W+nu93v8ZPam/FA8t+Fs+XPrDW0619
pqRfKX9V6wm0n0W/u/MJi+8v3b/X3bF0f/WD/Fz5yR0v/1fesvSx+i35PcUB
0v2kM9Wv1V9Ix195Ocu/rP/JFV9rP6r/ix/S1V/Hbec7l25SfFEpHaf72qjf
2t89X/s9f1k9ruXZVe1HPL/xpXi71r8rv6f84uxe7bHmkc6ePs0zu/Pi84u/
r/lX4f3q5z+qC5QPf8r3a1d6T9+34lHZs3BrxQvF1eJaj6Xntx80vyocf+X9
a/3Td8vFH17z9trvP773vwye/+t6XV13z6kOUL6/8OPqr/m613WNKtd88Hfz
TOqHpDe9+pnXUvk2Ks/fad+dPu91n8/1fZ/m86z9faT7fbqetbxT80fKM1v5
p2s/vaX3S6d6nade42S9p3y/PK7jaz2v9VeeRMt7X3Fafq9lceaOWy6/2/Py
E/Vzd395gHSx+rU+/8r6TfmntX+K9HpdV15VvJa+Ip2luNl8yMMbXde8yMb9
0iuKL8WNKxV/a5/s9nvtp366/vr0s/PTV37dX+PX9Si1X8W3iiv6ful0iovv
92sH8eRlZyt/oXat9buv+Rd9/9JxyseuXu3f9sfi23+U7+t90i9qN9K/db72
XtzTcc/Xnu+513+Ko4qrmkdT+yn+EO+/47XvgfSZNW+g+Ei4cu1Wnn3j+itu
NA9/8/3u3/P1vp98v+8t32/ez9c45KcfrR8pT5M/USld+XBeeS/ioeL/iifE
X1/5vfL2petXt5eOf+tyP+X5yvu547bPyu9Z+bP1023vT/ljeap4dMd5/djS
Rdf+FOLp5cXl28q30XpJvU/xct+j8ffpvIjiCfVn+f6r3yuv7u/1g/WHy88J
p+XX6oekL8lfKF9Y16380JWf/GrHK464UnZ79tPxvni94gXNjwo3u17ryuoB
ai/xffGNxcvkJ8vXxevvfOetui9f33P393fp/o0jVjxcvv6Kn82PUD7Pmt96
XR9ZfBdfW3q2dILGTeKj0tmFg8Uzvb/292m8IT4vvWPx2Nd8WI0vvV/jsnHb
wl3Zm3Q/1Xv5i/av+qnjefH98vvj/cfbGw98Pf/zf7juuvL+0wekEwhPGucV
HzQ/pzyBO65/uOPzA688fsUL4vnlqSvPpfVrPRWHLL9WvX/93nmBvv9+X+sM
yv/1XYqr1L7S+3ufeOzSoV/3i1j5pZ/mO3xXH1ccLJ6udli8THk3a55BevLa
r+jK8qfyJPH3xe/F9+t3pfPJ39dP3/U6v/yB3i8d6tVvLXsW319xZHFadql5
V+Hiwl/honBP+65d/ZqnX7+0+H75l+ywvF35NudXxdf7HuXrKJ6on/5U5y+P
Xbqp8hbE5xWfap3kKz6v5wv/hQPq/+KMcK3tpzhS/LD4JV4vfBT/F28W3++4
+FQ3WfqGcHfpLy0Vl2r+SLp/7fae3/w/xVPqV41L8fzj4z3+l/n934O//7z+
q+5vvq95RfF++Vv1Q/mH8F/+QPy7fmjpS69xwmtei/hxj19L8e6W8otrX+re
3+vVHt8t1U93XN3+dX3Iwnv5LeXtl6d/yvMXL+/zxO+V57RKtePa3+LT/xlQ
KTwsLr6W8m/S1erHNe9d3HrVn7TOU8955fvKo1j5p9ovQnk9K55WP688y4Wf
uk76RHl/cenK8v1rT/njnpedliefX6x/vGPp7IoL1nOlu3363H5Hf2+7yI7F
k9Z6SOU/1+6l8/e84gTN63a8iY+Wx7cUPxcfFd60XHGC7PjK4s/i+8It4ZPw
UOXSR8Tz2w5qp7a/+H/xtPan/hOe33s7XjsOlRdzPP/49vHwK3+fp//U+S8e
6Hrcrte/+8v3W9719a/CleLFlbWzxunlO+WvwnmtS/2U7688kl639P/y8upQ
ax8d5d2svKCl9y+dTO/5bnzyuv63/PS7+vQr31/rd6Rf67091v9FLh1e52V3
tW+1Y9vtU77/yutVSm9afF/+7fCoPF96kPyt/KieJ11K76lfWrxe+ftrXa/u
Vx6Q4ufisMra2af79bzqAOL9h0fF8SvF98vTZI/ix/Vz0s3L93W99LPqfXes
+f/+/hoHiP/Xj7/GwyvPR/nS5ZFrfa/4vnScNW5e+X6/v/YjHrj0iOJI6/Oq
U7R+633i5eJrK19dOKl+1v2tT8dn66e4ptdp/Uifo3aW39C4v/Fb/Vz8/so/
fcnD+ZmXU12/z79j5REWN3rfndc+GGtfgK4vv3Zq3F0+Ub1Z+88I/1/9TH+v
39D16z1XNm6RzrXy7l/zWnW+95f/f6r7rzjh0/19ykulk4vXf7ruXrx+5T0r
L62/9/mKU8Tva4fl9SsPSDy/90m/Vfv3fa/3i98XT+RX68/0+6f+9NVfvvqj
3qd4pL/r+Z/uEyG+r/i0fL/9t/j+2dO/Ft/vdWtec+VVNl6S/d3x4uFLV5ff
X6X88Ff//ytfaKl8Ab1Xfr3tcO3TeOnsXvp68VX5NCt/Z+VfSH9e8wblr4rX
lz4gfNN8SeNNPX/FAXes+HXhZHn44snqP/F93S/dZLWz8LTXtT/b/12/I5zv
c+W3Ol4ar19547k6+/3edbl3Xfl4eb72C9D8ovCmOFJ8Ez7qvdc+bf/OM5ff
NL9E+9GITy//ovvE13u+POxVx1r582t9wnq+yj6/36PvXu2j61/15/KQxeel
I2h8d/7uNT9UeRHrf/Uaz4o/Ky+i7dV2K//u81Z8oXqtPJA+V/zwztcfCTfr
F5e/Xf6319Wv1D8uvv7q//u98sOL71dfWzrn2t9k/X/u2cfr/y3ULm+897h4
87ruSvjS50jX6P6bZ19XLt175c/Xn75e31I6m8r65zuv/P77Xfn+4i319x2f
Ky6Vnvqa1/+q13y6L8/yG+W94n1tj+JB8U7Hi6cvvULxg+KD/q72qJ9c84mf
zl++5sWr3dof/f6l2/T+Gwd9n+L38nuNS+XRv+bXLN1B+nvrLTyovlAc6vcW
J/qcPr94ceO2PKj+onr0j/7z/03VPygOWHHB+a/WS/rSH83Tf9XJVV59pat9
um5YvH3pdqpX+erS8fW/jsKnpRe96qPaX/aV/5cnSU9d+n75fPnZKqXTrvhK
cdDii33v4YNwWuXh2OLTvU9+dPnxxeO/O1/Q97/61WW/K19Zdiv+rv2kFt8v
jpSvf7qvQvFEOF9/UF3ovufarf0nf3/H8qevfL/+V/y9z1O+ztL1VZ8VdzTu
7vcu+6/9yv5e1/8LhxQ3SM9ZPFT8XjhRfl1+2N+FZ7Uz6Q7FDfFY4Yz4fHGo
cVF//3Qf69UPi+8Xv9tu0pvbH+0X+YmOd83fdRxqPB9fPv58en35vNbfrvi8
3y+/1+9tezUeaL2+Hv+67l/xRPHrrrv+Vf5D54v1/7JX3vny1vod7T8vflqe
Kh7+qpe3rB9cfP9T/r/ikBUXtWy7rLhDeerlm+LTxRfpOOLrWj/2uo/E+j+X
Xrf21SxPFm++Y8VB5V8ttR54/T+91nXq/65XfFHcLc+SnyvO1y/e8dIjpfO8
6vPiO0s/kt9d+fa1R+0/9ep/1/5L4ve/H7f9v7+M/1f8+KN8//YfvvJHO//j
b2V1oHtOef+1d3nAWm9bvy69T/5w8fOz89d5gdZD8/CNU8pbpN9ffc6exZ9r
f2u/Au2jtvC166PkF1557MpHFw70fHmp9A3x/eJL44bF9191ioVX0iHE95dO
9ppnpfo37lTcrfGk+aq2f/n8KjuOyu/v+Pd5/6//z9HxfNe9rrO5frx2b/vJ
Pos3rW/bV/im+Kv3XXvXLup/6j/K95t/vvi+/JP8zV1/7228sPj8p+tqV178
p/71/HL9rXS56nOrver/rxQPLe5rX3D5lZX/ufjP0vlXfLDiBOVR1O8tnf5+
13yC4oel5ytPZ82z3P1aT6z3Ft/vuDh/+NN44MrqFsU/lfW79dvLf0rnk/+X
35T/W/uQXPvLTpeer3Xk4v+1p7WPlPDncGPNA7Ysbh4uluf/zT+f/tNPvn/+
QPO8V9+2c3m/eLV0Pelw4gfr/uU367dXXHDX6z0aT2fPHb+KT2VX0hOk63S+
sXlBtde1n/+dL5+vvixeVPwRDknXUHyg50rfFy/vdwm3XvUIzYNIX/t0/7t7
Xtun+Hztozh8rVcRD12/Nz+l/Lzza8ePy/fveMXjjWPKj9tfr/ZRf9XvbHsq
bqle0Xik42XNd169rp7K55c/UF5/9f7lh84fvPJ4zRfUr63/0eo8xdpnWvz9
3q99he649ZM/ftXnWi/p+OWdxW3llXyavyNeLP+ieOF13dniX+L50snFrzQf
oHaVv5VOr/uU/916K96r/xBu1W+K78tf1v9WZ5NfURzQet3zX+ODpeuL97+W
y75f89DUr5pvUr8r/l+6wCvfr85fni8/IHxqHNV+u/6u/le/J9385unLF+r/
62fvfHmA+EF5S+shvnHXideWTyw7rT1JF752Pzsqry9uyo6VJ3TP6/i68Xk4
pP0YiwO1g7bXKz4tveLOF48+5fu9Xv5N/Fz6zDr/Ggc0DlE8JB688uZedf4V
D3Sct7xxe+O8eTl3vOJ62VHtVXbQ9pd/7XuufYsP/b5+z52/64tL4v93XH9Z
v3i4cHit/B7p5+Xn5eU6Fr/XvhFrHx0dKw5QqXo1jikvl79d8+mf3l+/Wh7b
8+L5a39m4c+r7vn6P49rP7c1j9D33neXRy2+L/69/ODrvvkrHll6r+YrxPOF
+/V34tm9T/ginGt8seKIO5Z/Xfx/6WprnkrzTLWDNd+04j/ZnUqNb4332ktx
RHy/+Toq6w/K+69sO9Rf1m/JH5Zf3/GV4tviK8rX1fX1t/fe6pGt76rf2b3s
VLgpXG28oHhAeZJLx1m4Ll66xnNxqDjVeKD8vbxSOHX3Lb6v75AuL31K7aKy
eC19Y8Ul/T7FQeLxi8+37DhePL/jXPF8+f7x4p4vL64/Wu2p/n5dLy2/+cr3
9X1tn9pxv7d+9yte/fr/vMs/rP9lFD/X76//b6v545XHs/bR/zR+WetrFz9X
+br/Y69fefvKR152rDxN8W/5i5WfozyLtZ5s+aWlm6osH198X/MLijeW3t/x
pzye2odwR3518WRdd8fFk+KNdLr6neJxdZeeLw+463qf9LcVN8qu2l/LDmRP
tYvun6B48H5feKGyeLT2Dy5+LryWzn/vL+8p3y8fqO4lvf9Vl5Sf1Hra5h2U
txwvaT3K5xXP9Lm156W7iLc3vqyuv+6TjqF5K+2zXh5a/imc0nhvf4lniu8U
p6QbiEf3uxZfXHqa4h+V0kWEk9Jz2l6f8v2F65036Hjq+24caXyVDyv+b35O
22XFc688X3xJflQ6mfIY7/uKf1cK92Tv93v75+p94/r8yeF39fbm+Rzenz8R
j5auX78hPyS+3+Ol/7fU9VpPKz4vfr/yc3Ve+r2uL09Y877K46ndCsekcy79
qH6o1ym/X3zqU319Xff6/1j6/TXe0Hrd1+fc+fL98vMry6/r58qfX/n3wvvy
e/1efyX/JZ2m9qr1urLPV91+9b/sVOWykxXft+zvxaPq8MI/6fhr/dM9t+t4
m6/Xfj17qL+/Y/HspeevdbbSI/Weq4d4fs+rLG+SjlteIj2k9tf2Xvv6rFL4
vfT9O5YOWtwpPizdQDjR5xX/FH8oHlEcoPzBpQsXd9U+wtlXXH2Ni9ZzVnu3
PVV/1avjVeO+191z7vnSe17XP6y8UPEk+d9+t76zPL95TPf7WqdQvt/2vn4p
Lpy/qJ69/pexfmPxZ+nqd/5H+/06j7z+F+CV1+v3fnff09/lh5ffX7y//r+8
+nW/zeJ049Ole6x8iE/5/srLL89/bc/Fl1d8sHSzvkd+U/r94vu9fsV59RvS
HYTPxW/hdXFfz5NfqP8tTum5xVXhuHB6zRMpvlz9uf4/YuWB1Q5kz4rzVhxY
+/k/wve1H8Gad114eedbj7ZT7bb+sH6+x+XN4vfSLb+br6zj1+vLX+uHZefS
XdquOl77BLzu+yP9qDxKulLxZeFSdYfOBywcKs7oevG28vuljykuEM+UziK8
vWPxueKr5rmE0+Lvax5C31s+sfjvKjvO5L+uPlrnsPY/6vzvyj+WfbTfyse7
nqG8v6XmOatbtH36/juvPJ8rz29ofrh8WLz7ys4TaF2Y4gnl+3+aDySer7z7
K689xMde/fOVS8cWv1D+juavap+yV+H4637mK39/5cuIZ8s/aZ2k4oX+Ln/4
qtu2f1dcsvYZVX3uuvq/+h/Fc8VH8fxPdaeWy48Xf/oe+dPqncvu9Hvtu3HB
4j+veQ96Xn+XHQk3ln2W7wuPtT5oxQuH08XDlrV38X3p8+L7/V18e8UBa96g
fno9X/nPr3yr81XFZ/H9hZO9buHX0imE763v0j01/tVOi6eK3yjeEH8tH+z3
LP1++V/FNR0PjRNXXlP5X+3uSn1/eb76U3FO/VL7u/Ngx2M1zu9820Nxifpv
6ftLH5Leqv8vUjuUl9/3XXntId5f/t92qf6vdRPSDw4Pzs+U99cfKB4oP9f/
+a798ZcO9ZqPI72+9Rf/l76/9P5PS/ED6TfaR2HxfekR3417dX7po686af2V
2mXxpubLL/+3/KXii5Uv1PZY60ulo6iUfxGfL57Kv4rP6/nCafH94vcrn3/d
r1r3r3hT8wVaH9D+XvGA9vtcdli8PvsWbpXXtyweVje5497X51697zuqcx4v
WfP75+/0e/l/ec/K72k80OtWHlH9annn4in3u/RI4eP1+9pnatmN4kfhk+aP
5W/Ka8vrFQ8IP5YeoXigOFUeWz+4/ObrOk/xwbZHefkd175l572/7SP87e/q
v4Xf/Q7FzR23Gtf3fe1XxR2ab3otX/3Linc7rvv9im/+9q96/5WHe833Kd5c
ee2u+cjax9W/vKl5/of30tvFx/v/jcr3eV0/dr8r/6g6VPm+9sFXnHPXfXf/
DM0DvOrai0e84u/i+8v+17rc1337F79Xnnv903f/z0o8vfxpXaf4QPxf/bzi
nMO5+jfhofyhSvnhPnfpcq/zDK8625q/6n3lTb1fes7i32sctD7VUarTd/zr
fV3vu+ywvF+8XPsLS79Z66ikg1z9ihfX72c/1b/q9+64PEH5NbLn4yGrrG76
Ol9QnqL5qlceov2jXvPyF++X3dfeNS5X/vPin3e+cVLx7o/yft3felfPV17s
ymdqKR2mdiq+XLtse736heKvcLn6Uu23/dt6t743bpe+f+Oqcczi/eqHxc+X
3rn2Q1X8pP4qrlSPP5wrzz8cFP413lp2dfUurzz8Li8W/qt8XS/WeGKt69U8
9dL1xdcXT1y6ca/r/eKV1VWqryycFc+SbvEpzxdPeh0ny380DhCfbhy68uPl
B1e/rDjhdb9P6WZaN6B4pX6reCPd8JX3y3/Wr/T3V76/yn7HvUf+U3xf8wIr
HlUcvfQd2f93+dhab6l4VHxepeKAOxZu3nFx+3Vdk+Kjs5+v/v7X/92545bi
+eUN8rstX/P9ldfT8SB7vd+Li8teXvFu5fW/5qstv6F8mDXuiyfSLV55/uL7
0hfqR/W90pfF7zufJTvU78rLlx8Qrkufb31rp+t7xXOVx7Pi9MY3r/2r/tS+
tYrnFLeKR7WdarevOsK1S/n+j/N//8s8p/KfhH8ti0/1W/Urx7dbKr//yqXn
17/Uz1R/6vn6sfoz8falx77qu9/Vk1e+i3TO2nn9xrLXlc+21qmu9bnKo175
c2r/tqfmP5ZfVH8rHlC8oXkGrQfVOrvlv4vXK4+qeFycLx4JV+uHlm7Q63r9
8se9b8U1V8rexP+1vkS8as3vyo7XPv+KM4oL4vnF5SuVz6Pfi7PKrxSu9/57
T8fN2sfrK18un/91H4vjEcrDl79dvL/8/vzqva86ZfMsZL/iy9fPZ09a9/Oq
Zyx/ovUry94X7y9vLi9dvP/1/MITPUfXFU/WvMXixcLb4qV4cu1YOovio/K5
haNqh/U9rc+/zPP//pdxo/HbcaR+u3op3uz3dd5M67vE6zVvLL7/yr+l9x/P
V7sVf+SH1a7XLton8fzLp/tbHv4v/yH/VN4ufv+6n534t/zx4nGvccCV971X
j75fPEK8euG58sG/m8+m9648fsUTK866dmqegPQq+bvmRa84ruc7DmQ/a/2P
jvuee17jJLVz+VNxqLhePO1x/WpxRHqodCvht/xHcV3+WLxm8f3yrcX3P83j
f82HW/yrceji98JD5esUl9d56S2L9/d7Gp+e/dTf/Sj//IveVb93ZfPpqysu
Pb+/K8+4zxVPK984u11xouLRtS5E+FK7W3xf40l49F0eLL4kvv6q+1Zfl85Z
XBR/li6+cHLx/eJpeVl5Y7+37VrdVvqfeL3OL79w36U4ufr0nf8a53v+uXHz
ij9X3pmuX/O4r/p++136wtIZTt/4ioe/4p/wqO/pOGi7lidp/vfw/uIA8X3l
39RPvfq1T8vGFeVvax71lb8ufVq8cuVNShesvUpHk77/yvvVHsprqF658qZX
PsSrvrXyXRfP1/q39l9LxRttl/Znn6P4b+lu9Uct77riqPys9P6lm9avLb8t
f730N9n9yjPr8/7ovlQrPl73rfy0T/m+rhN/P9y+8rt8v/VQfH3fX7/YvJ6v
/u3vfivvfHn47/P+n9cpX2f5xf5ev1qdbfFE2a94+b+WXr/ijNd1Kisvorqo
9FDxpsUzhRtLR9Cx4g/Fb8VF8Tbx995351Xv4rX4b/tn6div66RWP4jvi38q
Pm78svpnjaPqZp0XqO7Q5yr+WfNVah/5S+GScK1xQOdLqnss3Lt61m6q+9ev
vOr74vv1a9/NS12leNvik9/NpyyfFy+U/TW/c81DSOdd81fi9UuHXjrp4t+f
xlfa31DxlPJ/9D3i6b2u96/vLt/XPntrncTikfKjxb1XnaJ8v35r/V7/Kl60
/HnxV/xizX/oOYt/fXdeTHqr8ni6nqN6weL/h7ev5dL3pdf0uvtd9W1c3Piz
fLp+7fJ6yuOrw3eeoHx/8ZDlH3v/vb88RvNU1WGrry0/I5z8NJ9nzWet8SJ+
qO9d41d8qnFh8WSV4tmal5Re0ff3ucrLaT0aP/Y9xcXic+eNhPvKQ6wfKl9Y
+Ttq1xsXN/6qQ6/20fxP4+bymDV/KrxuHN7ny45rn/Wb8ocr7mtZvJL+rzwf
6RHtr6/zq7/OE3We+Xi39scU31cezus62F6/8nrKA6Wrim8KX8v/hJ/i5Yq3
r92Xft79FZZuv3RM+YvF18WXV569/Noax+JF0uvFq9U/5W1ab/m6j4bmY17n
TbQPn/LX668XXgnvq0MV7xee3fHSiZZut/hT+cdaX/g6Pj59jtYRL/6lePTs
Wfn45f3l44vfL92+v+t9wnWte7nvv368/j97E48/3n/+TmX93yuvr0628nqU
N1R7rr1qH6m1znbh1MoLfc1Te92PsMfi6+L9bZeOe+GJSvH9hS/SnxvnFQ8V
RypekU7S+gmf1Y6v+SniH8Jntavap/H2jceOk/Zbv7v7ei2dZuUZ174aNzX+
fi1r9/KP7ff2v3i/cPD38x9/6hsL72qvHacrv3/5gfoL8XvxdPH+/i7+t0rx
weJy7eO7eKzxqfmkK+sXyvMWnn+at7Dyeda+NK/6k57/ug5W+UKqT/th8f41
n7O+Y7V772t/rrwe5WnJD8v/9ffqYMv/Ln+2dLdeL39Y/F5+Qe2pfLel17+u
Z9S8juJh7dcknaO/i++v/B3FD8qD7O933LikvL/juHbafq+Ofn5OPL/+UXqX
8nmk638aD+g95TeNBz7V68Xrlecm//Oa16w4u7yqulXHicZreWfx4ZX3H44J
T8SvpLtKl5Zurbil7ynuLpxuuy19Qzy1OvfireL34qNLf277VOf/NF7Ud644
qe0nPq84Q/asdmz/Lzsv7297XjufDnLrnYRDK7/q6tPvKe9ZeTfyK50Hlr+r
3lW+9fq7yle9+nVedOkjtTPZ09pfRPn6GvfSBV7zEV7zdqRzv/6+4gL1t/q/
5YqTXudzpMNJp1e80d9fdYWFfzdu7z0r/7D4W1wXT6ofLn7U7xX/7vni/Uvf
1/na+Sp1fXlLr9O4ftVdZfey9/L/4mnxVvmW1fM13/rd/xvpffcdtfP6xx7L
74lXiGf0uPHpyuPRcxRnSP/veKmu+ZrfWH8h3r743+JTr3nf4p+vv3eeUXz+
VU8QX1U/r/jiNd5YfLbf2e/v9ywdRXGA/ILws8/pd9z7a++Nt2v/inPUPv3+
Ffe0/pofUXyg862n8t7WfLn6Tfap8lXvV38s/eLO167EP6U3yb/c+Vc+KT15
5cu+8lL53df9cVbc11LjTfcpP63v67hQHCF9X/HMtbf065X/s9rv07jh0/W/
qp/mCfSc8q+7rnHrmid/jQfLi2Qf0oX6e3G2uFZ8L16/4pfmx8Wz7vfqXsVP
1V94L7+3+FGfp+f0ea/7Pryuz6zdil9feXy/+/T0vPT4T/l8cX7ti1B9sfHg
4vvVtVqe3xPvLy/re8rvy/Prd3tcv9o4tuPs2kHxn/BafH/t2/CqHyz9Sc9b
eUD1f8Ix6QQqiwfCndpT4z/h1Cvfbz2KH6941u9QPernNb8rniEdqHbb9zeP
R/Fux4G+s+2jeEBxyyuvEq4rDpZ+1vv6HYuf1b7Ly6UbaN6zZftDccQ9r/hV
3n/fobyHV/1d69c6Ly6+uPir+PqneenKLxG+Ln7wKe8XT+m4Vn7aa17Ryi/W
8fWf+PDKD9J8yXd19uqJyvtZ6+Haz407V1zxmj+r/JJlJ5oHvlJ+Rri79Ic7
lg5TPCmuSV+r31Qc0lJ+QLxkzZ81f1TjsOdXnrPigjW+XvX/6izSXZZuv45f
S+ko0kWk09a/lfeff1t59bVb2bvK2rX8r3RjxeGv86xrHlDzSotfLz/zqT4h
PyheKd4rHFJ/9X7h1ndxbeGlSrX3+u7im+ZjpYv0el3X9rxjzXM1vr34uvGv
9P0VD4kfl9esOFLt9Hpe/qXjt+991YHbD7VH6Q/FGeGhSun9vf9r//7st/L+
fu/KqxE/07rFpYstvq/6rPyTla+z8sAW35f9iHesvB3pLwvHV3ykPAP5+zsW
rxHvafy39P/Xfnzl+82/Fl9XXKDnlHfWXl/to3i9cP6Oi4f1j8X9+tW+b8UJ
PS7fl/6z/N/i46vUuKm+Lx5U3UPjW3Gc8rrWfFdxa41L5dWUzyuOFW6vfJOl
M8iOZS/iG9JpW4qvLb9fu5c/Vj3KR2tPC1cWLlXXr79a+Wqv/mHNVxW/Wmo8
3XHxafHia9fySeHOwjf9/sq/hYvi4S2vHT7l+yqXPqT2LC5Xxy+/Lz/suGx7
Kl4Srre+C+drT2pH8W21Y9/bfrtyrfOSPSjuEu+/+t7x8fXGYXf+jquPFGcb
r9UeVrus9ZTl+fV34v3yj/I38pdLj1p55dJnawficbW//l4c1vuVV7bwXHHM
0vlX/Ca/tHjCmncRz268sfp5xQWtv/zpygP6dJ3div+W3xCfl1+oniN+r3hh
+UvpaMWZ8iLx/sX3Nd8q3rH0l94v3qPnveZTrPGpOEB2XLvXeOi4WHmMaz5s
4VL9Ze2kx9Ltxfulk91zF5+ofd795Zfyw/XHtd/alfQo6f2v86NrfnHhvsoV
B8hvyR9qPKl/xOM/zcd/jQcW/y4e6XuX3t7rFv/99HltP5Urvr7y9Xfht+Jp
fY++r3ZT/rP4/pVth9qx6qO4reNNflxxZ+1a9qz+an5j+f/x/ntex4+eWzxs
HLZ047Wf49KJXvNSFt8XX+154eW/Ft8vnyouKn6Ubvi6rrel8H5d17hO+V7r
PuXRKI+oeqX2MVFcIP+4+FWf03qtfLG2q/yc+K/wUvqJcFX4X94inqbr+nzp
SX3eijsaz9bPCofE3zVuNY57/fJP9VOKw1c8rvVTtW/F44v/v+bTvc6HSg+5
9pA9158tPtf8Gq0LaSk7Vz0UTzQPtnb9yvcXj3/VKdb85sqHXfmxGjcaR7V/
xbnlV8Ux8ffaQftH9wlXF79vueKXV3zRc/W8xT9l921X2fvZ8/FDleX50o80
/l7bW/gqXWfFS/KLyqeVrtRj5fO0n9s+slvFA8Wfr7qHef4dv8Zx6mfpKfLL
r+tfF7/v78q31/qCpVut+WjFm/Lv8ve1C43zNR+72lV4/t18UvGCpf+JV5eH
q3+kVx7/aSm+/7pfUO+TTvr63LZDcVDjXbhafyadUaX8xKf6jPxJr1v8XvX7
VB9bcbf4iPyM4jB9p+rxGndLf+h4aJyreLjPWfHAil/XfGhx51Xvqj9TvsFr
/r7srf32yvdVH+lg973tX80fV0fQPOenfP+1n8TvNY7av9I/F//v/Rpv0g/a
f7WDV3xZfLm8/JXPlBeJl674qOela7e9qytq3N14Or53uvGP83//S35P/VLH
Xeujeqr91U6vuopwX/3edtE8lvjh8iuv8abqI5xsXn/L8v47Lo42HljxXvWV
+/6rt/jvsvPq3R1X8o+L1695y9f5hRXHv+bVVC8TX1e8+ZqPL11u5U0pj0V5
pO036dyK11rf8m3xftnBilP6/Y1D7rhxha6r/25/SjdcPEe6Vv2feHnxWHxs
6RPF9+LYK78vvt2x6iW/1u8UnxBOC7fKL6pziOcI38obOo7X+Fvx67LT13Ll
CzWu1njQPj31b2cv9Tf1Q/Vn4h/l34qva8eKFzreen/tvHZcv6d1HY0TtI5N
dvKan7rW5a64eemxn/LoFY/3+uKM+vN1/mfhy5X115pHWXy/75Oep7j5tZSu
Xf/ScSf+eKXWsYjvtR6KB/r7q90pLhAva38U/zVuly6rdWF9j/qlpeLX8oTG
aT+u//Nv8dqdf8XPxhPF4d5XXiAcabt/mney5p+Xvi/9Vfy631FcX/HLa16S
5vWVR7zyMlfcs/I4ly6vOON1fa54f/lG+cUPO/M+g81f0Lrxq7/0G33/ijO1
/rx5wMpTrn5Y3tzj4kLx5a4XzsoPi59fufiP9IqlbwgHi6uqt/yFvmvxiju+
5ypOKa4JF+TflQ+p+PU1Dn7NC9f4W+NO8W7zbdv+5dH1P9Uff9Tj1/nrrj9T
HLribP2uOLf2Xzs+e1dcKNwVfgvH1/zA0vdbr/LXxdukZ5anvfJrjdvGiYrP
er79KPxpPy09UPFT+UvbsfH+isOkI7T9an+KV8X7V9zdcVKcf43npJcsnrz8
l/i78Fnxqeql/lK8t+JfxcnCL/H+ledzvL98veNIeFy7qL6i/ta4kJ5dHtZ8
8Pq1V/1K+eoaV+L9Gt/Sx1ce0+v6qaX/rHURK154jSfWOj7x5PKV8ovFO9Z+
g+Ujn65DXLxL9qR++Xqd8xPEP8T/5feKgx2XxRXhTp/XsvVQfeUPin+KL16f
I/y/+omXKB7p88pX71g6xiqFH6867qe41+d1fDWOvfPH8/v/XX1P8fjeU35b
HJXdye8o/1S64yvveS31nD6vPLPjbOX9LH4v/Wvh3Hd56oqvxbvE+xavVVwh
HBR+nr2InwgPG/+I9y89uDy2173qoovvaxwVn6U3HT88fbj8TnGTeKrim8Wz
XuNH+SX17+LZKw5d/FV6UO13zVMIB+vvlQ9w/djy4oDrV/GK4p3iwPpL+TfZ
9Suvrb9qKf+1dI41bjv+lo4uXXmt33vl0dLP1zqttvfi+Uv3XnlE2mdH+qD6
s7xe/L9xgN73mt+0dDb14+/7YfOLxuvVLRdvKS6IL4vv6veFk8WLhcPSO17r
JxxVvNB4SDzhzve5wmX59fo5+Q/5De0XpbhS9ln8W/Gxfle5/rf3nlM81PrN
xlPtv+sn6ZHl++pn8X3pZhqH9cd9Xv1h7VLx4sJfld/N39f8eu1T9ly/Ln4v
vy/ep+eI70l36Lzpq65Q3r94+uKz0tsWL1rxUcdR4yLxwxs/xwNPBz6+/5X/
/7rfvnBZ/Fr9Kr77Gj++4vU9R3am/lV/vtr3K99vefWVfqZ+PTy8fm3/lu/f
/R0Pd9z8obOLNW+2ePTiocI5zW+vfHPxtjWurl+13k7l+p8a6Tf6fu0H87ov
w6frbNd+HvrelafzXd6/4ojyFs0fSEdT3Ln2D1W9G593vGn8yo+Jryxclp8U
fktHrz8pv9Hvqk+v733i9WtedNWj8ZH8Tt8jnlP/9uqvi39rHmrx/Y6D8nHt
33/lOt//U1/xg3BKunP74ey6/ux4S3mMeLzi7nW+/F5xhHhl/bnWqSneW3aw
5ik1vyL/Vh70mv8vvvXKh155kPBjxXmf4p3i+9c4QLxnzQO8xkHikx03V4rv
X3l8rnH1ipvEZxunic/rOdLrFUfod9nx/b72HVB82+vu/jtufK/+VXuVT7/G
ceXn6t/y/7b3na+9rPUcxY+FK9WrhW9rv0fl56/8OY238n3Nj9fPCcfX+l7p
Am2H1l/5OCtPQHxYv4vPr/89KI/Qe7RuUfGCeP6KvzQv/rpfxpp/UD5w43fx
0OJr75d/E7+uDvTKv/u+HjeO0Hf0e/S+Vx5ev9d6LF7Qduh39b2vPOnOL9zR
+t2VnyG7FU8/ft6y42KNq6XvN+9n4Zr4X/uxef3i++Up4v2Nn5vnUL7fcXal
7L79L56vecE1DyleL7xf+n550x3LD73mnX+aPyseKxzRuO44bnnXL/651muu
OErtLfxYvHiVtcdrh46fK7WebM0fv/J2xSe6T/1av7aep/Gn/lx2q/OKSzuO
Po3jaudL95N+Ud5fvb95b23v8n3ZiXh/20X8ufx48ULNg5dfK25b85paz1o/
WX/3Ot5f8+zbTtVvPp33F1+t3188evFwnV/zJNLt7/fXee9PddMVDy399MrF
H5Yfe8XDxcM1nuUPm7dcPyn+U1yuH1r6kPBSfkPtp+9vO6nUc1/5jfDl03yy
V33/U/v88T0/dfo1bya+31J6QOtbHFR/3/n2j/yc9Hytm5E+Vvvv+Lmy8fMd
r7xI6Thtr7Vf6qe6v+KAs9fOY8kPSWd6zZNdebPScTUuFXctnFMp3tLvKp9Q
u+g7G1f1O8/+hfc9f9cXn5W3X7svj9P7qscIlxd+K67Te4sT9Rtq12V3xeuu
Q7rnab173yd+v+JatUPxqnGczl8/f+3fn/uuHv9XvkDtp/MHihs6fu9Y+5XV
LyxdTLxY85rtJ+HbmldYfLnvfeX7yt+tH9A6rsUD6r8133/l8QLtj9PrX5+r
6xVfKB/hdT6icaH8ruKi1vPaRaXmv4TXy/8sPls81u+adxAfXtcpzpcfVn2l
+8ifqF597mu8U77ffml95C+Kd/19rVtaedyKSzsuNZ7E9xtvd3zWvhX/d9yt
8df2aZwo+5XO1N8bHzRPX/HAyt+vPd53iGe/zkNKZ7njxf+Lh/In6gfx26WL
fTe/pbxgjfuFc6/4uXCjOCR8Wvyu31e+3Pbq+/S9ao+OA+V7a75MvH/p9uLB
r+Wn+k+vEz6/xpmtf/tPek5xXfz+9XtXPyqvVzrHlcfzf7zv7/56/j/9xt+V
z3j1WHlhxct+r9pDcVKva3+uvHjlM17Z++UH5f/qX4XH8vfy85pfED8t7219
Lw+3+bj9/XhB9+kQbxc/uGO9T+234qm1P+ur/r/iuSvVToqHOj4+zTNQPn/5
TfnQlcXL4ol0cvkXva98aPkl+eXeL//4qgctvi/er++u3xEfWn5PPOhV71dc
UJxSfP9//Zv/8X/+m//xc1zf72tcrrh87Y+s/Mb7/XBO/r79seaza5e9T/q9
4sCrR/N5rly6d9dRX7n0I+Hf0juUvyi9o/Ys3r70t5WXKp7f8aXxLn3gVRcR
32/Z+pR/dzwrXlm8T/ggvr/qVX9Sfb9lddobH/e8xiUrPtH8jHht/ZW+a8V3
ijuWXa94rP1TnFr9/moPwjnh0Tovvf+rzv/n3/j/6f1frzNfqf0Uf69/1B+y
k+Vf1Z/SNZRX+6rvyi9eWb6/dK6Vn3vXtT5LD2q9y+Nb/rC3//7v/vf/9aD/
/tvxlev7+3vjhfJj8eU+957TfCntU7Hme9a+R4v/tP5Xv35HeaXyJYXHK44v
fxXffeX7i/f0997f9+h5vb6/977X31vWP8jf6PvF94tTS9dcPP+1XPMCK59f
8f8dd7xf2Xj/7is/LT41Tnn9n2754Wt/xb8dJ3ef9H75xyuld9U+qlNJz186
SvFN84rF/8YRys9a8wFrvdvar1lxxMrbKW7094Vj4kV3v3BEeQy1K8V3n8Yl
wo3y+36feLDwa/Gy+hnl7QuvFm/u9a/xTct+r75b9vMpXyze9PxrvNX+Vr31
vKVr1e6X/VbvPzs4Xv/jOf/5tzjgeP/Zh3BRvKXn7z7FR4qrpGtJXxC/73gT
/yteny52/u7wuuerf5W/S58X/5Rut/53s/6k/P5HO/9//+4v/9v/uuI3nn/l
fVfvu++896z5jp7/tKyfK79Y+++sfYPa7tVBlfdcPlTddOUHrHm4XtfjG/93
fvmZhZvSCzqfIN1UfEh8uvhYPicepnLFJwt3e53ad+k51UE/1ZmKTyuPonix
9pNqPFs9QLy09l8cKB60PuKp5Zttn/qB64f6nzUftua7a9e1K/nnq2fnWdqu
hw/F1eVHpIsUBxXf9Vj+UTqJdJSlo6lfpXPK7y/+33G+dNDy4NqP8l1qJ7UX
4c3CCeGA+F/jmH5X55WP110pXlacV/1r9+L5+k7x63tff1c7tD61B73/6tf4
S89fPLX1r/+TX1x+cvkp2XftQfjXOPB4/vH/zvtIH6kd3X33nDsvHK1fvX4q
Dq28ja6PKh697m9X3JVernnu6vPyd40LVr6n6n1l/e/x0+PzP+z5L7+Vx/+r
7y8/dX5o5Qk1bljXr/wh8YdXv1f9q+3VevX3+462z9239MSOm/od+ZXqTR1H
SzfoOCt+aFyrPhrHN25XfKHxLz8uXaP1FR9YOHvltVvjh/qJ+qXy9eXvls5V
v9Xnl+8LBxvndtwqPl98X/k+r+O38Xn9cuNB+dna0WucLTtafrd20Pyk6gbF
U8VTK+4q/qid5WeW31Oe/+v+B20H7b8qHW7xvNqD+L/6W3jbvIfjKS2F08Wz
hROvPLj4J1xrvcq/xPel79f+NQ7X+X6f4h/FF6/9Xt7fdm9+fecfGk+u+ELn
F8+XP6xfFA7VvsUn5BfvuPHt6ft/+mt+z9nL13jgv/1Snz5v2V3jytr1taPy
b8qn1z78Wh+s/SBVvua3lJ8rT7M8VXxU+Tw9f9eLlx6vL8+Xf1p+a5X1Y+L5
9Wvl2WueuvrayjtY6wsU30mXu/OLTyw+vfj+4iOL7xePVC/hj/h58bLXX6n3
LDxb7ab8i+L5aufi2Svui+drv2fpUNKlFn69rkdRXk/t+MqOwzu+64tPGq/F
raXvq93Ln2r3tYcVd9fuNL5qz1cP7dN8eCE8VTxVfLlj5fmoXVufFW+tvMhP
15VoPkBxb3mb+JN+Lz4ob0d5CdU1F+8XXy7+vo538f3aZXGr9f3RDj91Wn2f
4mH5lcVbxec7TqvnLh6/5n/6HOGu+KBwXd/d+ET6Q+/Tc+tvlv7wyh/Kx4uH
x8dP31dZu1ceUXXOu6/xQ/P8xffX+rbXvG35wYWLigc0Ly6e2ee/xhGrrD+W
Pn/+R7p+y6VD9T16r+KP/q546TXfqf3W+Kp8RfHI0tuuffoc6UdrvBTXxUc+
xd/lP/se8Z3iXfFH9ZRO0/ijfmfFSTrf+i887vW9Tnyz/qz6kfKgl/9X3sXr
/zatcVK+uOxcvF16/o2HO1ZeXb9j7WOm9hI/Es+vn1nzBbXT2pXmjdW+5fHV
G6TfrH3XFt+/4zW//Ol+B+L3yvup/StPYuFR8ULrOWoPxz/KQ3Rcvt98aOF7
7axxovj+lcXnlZ9W/tbvUZ5G37P4vvyC+nXFc4oXOi41b1K+L5wWXovvv+JC
66e4pN8vfJFfrr961cFkn7Xr2v3Fjfq9drTyyTqe7vrazyvf1zq24p7ybxaO
qrzritu9f71v8c/y4l5/x2s++Y6bt1+eXz5+z+97e594veIJ7RvSvFPpmuIj
iuNWXNX2Lq9Ru9+xdKM7XvkG4uX6feGS+O3Cldfn9ff6uf5e/OtzFq9XffV9
mp89fLl63XOLy7pP/x+1/n9jxQ8rb1/518I74YzsWOWrPlJ9X/xSfF/8vu1e
nefa8/pd8d8rT2kpO6vOqLzQNa/Sdl7/h7b80ppfKf9X/s+nen/7U7xLunbb
u+P5zpf3ls9Ipy8P7nnxIOk3jQOat1B7E29tO/T79b3l+yr7HZovfuXnvU88
Wfy95et7+762m/QT6QeyP/WH4oXVr69xgNppxV3159I9yjea39X48OyncWT5
TMfDxQtXNk7ouivxhPq79X+uiwdK/6of0/XStYqni4fe/cczqweJH5dfr/te
44Dy8vKCe6/iAx1L17/nr/0otN6i/VK/unTN64f2R58jnl99v3atdbzKn2x5
vwtvhaN6nvzoHff+8nHdX/6s61v2fcWnxfuLc3puz+u+K4W/4u1Lt1v60/pf
SOkd4t+Kc6Ur6DrlkWj8lbe+5nfULy/eKX5ZP1l/Wp7e+f3lr+vf737pS/Ir
mh9Z9917tL9bn6f4a8WJa7+59kPtt+2m+ZlPcay8pfgqnlKeX36j/IfyI63/
Ln8pj1z4IP4mvl+e1e8S36p+VFx7tf9er+8ubi/9v+NVdqLniPd3vAvfFb/o
vapH20/+Y71PpfQ++cXF98vXL7//ytpTx5Py5VYeWc/fd7QftQ9F8XTx7/K9
O688/4WTq9T/9Iq/i2eWN6/8mvLzxff/9Ne8nzt+5e/S9V/zf+qn5EflH8Vr
7rz4jPjRlcqPulJ+Qnb+KZ8t75bu0fFfnFTc0OvkZ6sfaD1O3yN9qde/8v3i
WdtNvL71ajvcsfS2e255evFJpfJX+rvmN9f/Qd/v4v0rbhX/F142Tu940roq
xUnVy7UuX+sAXuMx5UkpD+We1/FWfySd/9pD+/KrH4R75fXtj7b/Wrcrfyfd
Rf241udeO954OjwQbyrutSzOap71eEp5yFrnsfB76frioeV7inPuueX19z0q
lY9dHFz1XPqFxts9X3qu4iDxfOH8/S7dYNllv2/ZoeKOfpf6t+3c9/b5wh/5
9for8WvFs1/jw5/7dd754/13Xrxf+Weap2q/tp3K96Wfi2eL58u/vOr2h7ev
12l9aHl/eefizfpd7ykvP75f3v9H+X6vv7J6e/uj/k3fIV5+x2rv1kPxQct7
n/Lzi0vi9eXRr/y0fqLjfpV93uFO61Xe/Bq3KH6pP138Xd/fUn769f7y/eJ6
j5fOJP9SvH/dj7P695r/atxcfUG8UXxU63Kv1P8M6vuqB2sfotan8Y3+v7ft
p31omseu/hHvv+te51+KQ9qfU/ij89W5Ggd03kXxjv6nRv0rnigdVPkS5Y3i
O4vvN09B+Q3CmfLM3i8+JV6ruKjtdPjS+jWOOb5VXlb+1bL6fnm3eHPHV3FQ
/FY4+0fvb7vWbpYdiYd/t+zzVxyjeikuaL3XvEf97eIZaz1748evuv+ff4sD
vl7vPLTaY+tZ++u6TPH4/r74/pXCXT2/uoqeL/1YPLg8tDy2fPbTUvx87efT
evT3Vx3/2mfNv6x1cPqOfqfaU89r/9x19/w7Vr7O2fGNx/Ja8W7x+PqT+13j
Wzi78LTPq5/UujjNd8tP9nmv699a3z8aJ/R+tZvasX5r6ZvCe/lZ5bVon5jF
L8sPqwcoH0542f9H0fplndd87crD0z6Q2mdSenbji7te8UP9r+KwlY9fP9Dv
lB+of/rUz63/J1f7iPevddeLt4g3tSxPu3Et3DlesXRm4d/SN6SfFvf7vdIJ
irt97n3P30LHv/PSXVUv8dS2u45XP4mX6jkrv0V2o7hl6TXr+a/fXb6+1rMI
X/Qd8hstr5+XX37l5cfnrzy+/6M9/u638uvvP3X7K2uP4i21x67fqp+oviGc
Ky7eeeGweH75a/2k/O7dV766+L3KtZ++5gF6vf6Xq3q/6rniFuXrLz+oOKPz
EZ/uH9r39bzigjsvHbl8tXYtfip+q9/lt1bZeqx57ZXnKrxo+/T59a+aH5E/
1jz18jerfRb/Vz+84rL8rPb5UV5Px4/G0+KRS8fvPOfi24pPWm/Nu604XPOq
mte4+7S+oHGLeIR4huIKxWNXn/X99Re9T/6ofqn+8Oql/Kn2b79L8dXrvJbG
x+JhjdNVap6vz2v8ID6/dArNAxSHXvm+3tP5i/Kx4/3C337/ynMpLomvtj8X
j168esUFKl9xV/HAd+OC4v+a16z+r/Gi62XHihe17qP8o/Z31529Xdm4s3Hm
yn+rrndl2726kPi9/FVL6SKveaz6/RWPxZfLa8W/r/xhd3/57T7xXvHl9fzy
6df9OFuWT1z7SF+s3+t8guKcfmf5QnnQai+9T3b6yidl7zd+i599/iteCb/K
o1tq3q86gebVpYvdsfzu4tl3fuUX9XmvcUDr991SfujeW/+59idrKR22uFh7
l5685iv1vyevfL88/d77mi94x6qfcPeOr12azyKeo7yV3r/2h2v7Cx+/4sqv
+yk1HtA6JuHsHWu/i1e+r7wyrc/WfI/4f8fpivc77qUbLDwo71H5yvtbP/FF
+QXp/OVdx/fvfHXUe/7SG8Tzm9dW/CrvbfsKB195/6dxYfn3fc/rcxQnqD7F
77Zn7b/1Wf3Q61UPjZv6y7V/8Z1vfFl7u1LrRrovbs/fe+WPq+8Xn4T/wkPh
qvzFen79q/jrp/7t7jt/ID5efrrW8Wq97un8VzYeKY8ub5cuVb9bHXLpkyuu
UHu0HT8t62+/+ufP/3ej+FL87HgW3y0/f+X7q559bv3N2o9Iflh+b8VHarfG
I1r3v3Cwv189X/Ugle1HxXPC96Xv6/+3qmOs+UXl9RTH1v47yg9vHmbH0+s8
5J0XrjSPff0fd79jxVvr/w/U7sWx8nt9Z7/3Vccvv2+pfXfW+hDd1/bSeu3y
mcVbWh4e3fhc+TbFxTtefL84oOevvIjyKvHKa4e+v3y/vGvx/XuO+O+dX7yy
/VZ8W/ja94u3rufJ39V/9j1XLtxvv4iHi+/ruuK58j4bZ614Sr+rfzp+lp9e
62O0nuTscq17v/rIPoQrxaHirfyMeODKX61+Jh6rfFi9f+2DL535yvV/Wmv/
nh/t/Bfq+eLZatf6qWsn5c++zrfUb2q9sfT/tvuK08SbhE+LB8q/LT1j8f9X
fttx1ucWVzu/p33ill5Qvr/4fetRvOpxzy9/vvhE+0V8v89THNP2rj9pudbr
Np9m6R4dl8qXEd+/cSq9Rfzwriueie+/7ud741rjWbhSPrryjxQ3CK/qL4ov
wsuFry3rr8Tz20+1H+37Kl1fcZ3+v7f6cPmtcFJ4UL4i/l1e0fG/cKfPVZ6E
8hmVP18/0PPFsz6/fP/K39dVf12fu/KutG9A4wHxzNdSepRwW/gtPG09y8/F
o4XXeo5K+W/FVf1dOtO1g96j71l2tfa90vrxize/xp1/99t17XfpcYqfrtQ6
KfHx4qR0/eL00m+krxSfxV8P189/lZ+K3951yrNf61XX+9ReLVuvvq+8oTqT
+u9KzZP0O5T/pPbQPqjyo+3P5Z8Ut9aupfuqLF4uf/lpHCG/+vr/Asp7/W7e
jfzx8gfiCfW/vX/xBPmjVf/2b/H57EH6cvP6ta+KcLD2LX2/477jV+uXFGd8
F0cWfrW866XzKx7R/Mj6LvF76Tz67uLKp+0h/6V5jdqH+L3yyGpv4vnii6/4
pXHWcdxS62iXHlA8kC659P2Vz794Wd8jffV4/h2XtxX/m1dy/VX+udZnLF15
9d+V0qPFw/X83rf4tq6758lOvvue9Z26Xu9TXCGeIH++7Ffz5s3TOZ7f9bx3
/q7TPpyt39Vbev/ZY3FN86ryQ8Lt5cfkH5d/qx8o/75SfLp6f/Nsll9tqfZR
uZ4nf1Z/rLI8W3GO1iOU17z+v5jq3bJxc+dtNT41v93fX3FPvHLNl8r/3PjT
+tz6lfqnpa9pvOt7PvX3V776ca0fav/2d32P9KqlZ10pv7t0Vem0Gk8av+Kj
4q//8vjY+wN/Wh/hqHBlrXNY+yhrvlH+RnineWPFUdUzGs/0d7WH4pbWv/NF
h0/if2u99loPeuUa98LZjrvF93vfeo/4kHR+4WHfJx279Tx99MrjTV/5k/fl
LP5WN+0+tIc70vsVty09Q7rI4rfirVfquuX3itOv9V14vvh8cV68VverP9SO
8pf1f8rPXfZ+dvY13vT+/Xd9eX/Hn/pl7a+sfXzqX+74fpfOo/yO4rrwtfyz
95XHiv/3upVvv/xmv1/5K2u/f9Vf7+/76ofa7n1f36O4p/5S3710y9/nNc6L
ed3/QON94UjHR8d58bfPEf7I/7UsnhSP13Nf45ieLw5/ygd0nb6v9+u++olX
/abt0bhPvF755kvnLx51fHe8dLwXh/Sc9b8cem+vk64t3Vr5J223+o0+p/HH
4u2NF+QHivvCZeF3z9/zetz3XTvWHu545fFr/YLa9fX/eFf823G1xrN4Snl4
n9dyzUuKNx2vWXmO/Q7p9y2PP2lfznt/dQzFb4vvNz5buH3v6/XFNz136eR9
r567/te7332l/PHyT/KXi8fq/e0HxWH9rvIDzUtpnckr3++80+/Hn3/3Szwq
nb9+T3ll/W7NNxaPxe+K+/WPxevOn1bn6X31n8rvX/vbl+eevr38wdLlVE/x
6nW+3yk/2PZsu4sPrPeLv4inLL97zxOfu/HfcajxWRwTXpS/v+oXN15eeX79
kPRw+cO7X7gsfavvveN+92s8sPjBd0s9X/GMSuF+8V77O9R/i69JdxYOyO6F
B2s8ad+vNV5bCr8Wb+246/js+oe7757f92t+Q7xfuon0CbW38L/9dcfKP736
KV5Z/yu/9uevztb10eKT4nPFh+Kk9hNQHkLzXYQ/a/+B13zntY537b9zZfOl
e9zvLm5qn6T2w+v/Tct/3He1XYVzPe754qT8S3FT36nvXnx/4XjtUn5B/GDx
fvEJfUffu/x77Vvz9trf8+zw7Le8/8fvf/4tLujzrn7qB/XHfb/2ryveHU4W
z+QnW5a3rvnz4vPSx5d/6O8rH1fzEsu/3PN/tPtfuL639WzcofqU5/e65ffW
+fpt6Yd9r9ZHLP9Vu/10P93Fy4Ujig/Wc+TPNN5Xnt/CO+FL5+F7X/Hqjnt+
8fWFb7pf+Ln4vnD7ledXJ62upf+Zkr6/cG3x/sX/ryyufcrzO46LW1fe97Yd
Ou7Unkvf13vVfmoftcfC+0/xrP6p9XvN96n9aN2D5lmU17/8uHRKjdvuA1xe
crxZ6xM7/l/xQO8rfz8+dPXQdff7XV9+/zVP2vk7137SR7VfTMfNwqv6F+nJ
xcn6o8V3i/+9XvcVdxUPvMYbK25Z9SofWPVY8YD0ozVfcu3Y/lpxQe29dlu+
f/Z6fP/3df+fx+X/tZOrV3lT7X3lad557fOz8nv0u9aZvubHLP+w8tLLlw/v
xXPv/uYJqZQfX3k99TuKk+o/+509r/in8cfyn5p3uetWno743cKTxeuLm+WX
uq7jo/cLp+tPz7/8/nzer/qVSn1HebXmL1Quv/z6+6q34ohX/yU//Jr3XDtS
Xo/2mRFvXTx/6fjCJeFbn6txLh2jOo3ySBoH3XXXfuX9xafiQNurx2v+UfmY
LaszLH/Q9lRcUl4vvi+9Xvvjqbz27TgQT1k42PEnfeL39cb/+xcck55ffFl6
f/Nyytdbltfr+uNNV7b+xc3v4o7yYHrc/lrt0/ZsfzZuKK4J72pH5dPLPy+9
7pX3v7Z34xc9X3FCv7ft2OfW799z5E/F9+vf7rzi6uaZHa8vv+91jdtlR6rX
fafyC/X/jMK/6v7VSYqnmtetHxX/lP9snFA8b1n81/vrh37YzU8d/8o7/+//
7T834K96/2se/51XnHTn5UcVPy3+/7oPYNvvntP9UYSjxcfiSY/l9+r/NN41
DoQLvW/tP1c/0+PF96v3tB4av2v+o7jVUv57+aNeJ77R+1T/6hBrf7z6oZXf
s/L5lc8oft9xsNaVaj5s8dRP8/7v/WvfyI7Ttt+1a+MC5eF/quv3e8rni6Pl
+fqflIWv7Tf5K+lVd7x4fPOntJ+PcE/jpONL41G6o/THKxffF06sfQpe+f7x
nvL45kGL7/c72k7lh2v/TeFK+0t60eJjC5f73LOLxdfLh195vfyvnrfigJbi
Afd7/VxL6fSa/9J97SfxkF6v+S35zY6Ps8sbB7L3Gx8dJ3df8we6z63qde1x
39d9qaT/97j4Xxxduv6rPla/Ub8nfU7rwOTHu399/Ur90Y9+/Mdfyvu9fmvp
flcP6Yyq/6frARfvX+3e+pdPLZ22fG3xffHy4qXGZe+vf9T9a31O9bEeX7nW
zS3813eoPV7n3/WeV1zreR0Xz9vfS0+THdXexGf1PyVXfqrrr33xy/s1bjQv
KB67/jdj8ctr1+YprHWownvFS1e2PYpD5flXvs6XFqfX/EJ/v7Lxyx1X77rj
tX+/7FD4duNCvEc4oHF9ZXWHr3zjZ6l5SeHV2r+weHh8/Gv+zU9980d9//zL
8ZXl/dqPp3rotWfxZvF8xQXlu+Kfisdecba4vvTz8tbF93W/nv/d+EF6TttT
40F+rnZYHv8aL9zvimM0zpafrv39vj74636dX8uz///w2/l7bttB37X87vWD
9mnT/9gU9/v7K9/v70t3Fn43v6jPFy+uP26e/vH3v/nnZv3TP/5WHs/vdeX7
8mPl16s9Wu+erx+s/5UfVLwlfnO/178tXF16gHh5/V35bX/XOBCvX3n51fFV
nn+r7iQ/qu8Uby/+Lf/S8/LfinM0P7He07K4U7t45fvLvmqP0vf1P7yf8n7h
yNo3WHHA6/9mFPde14WufU3L96WDiyev667+h5dax6yy7VWck9605il63Dim
94n3a31k7bo8qzgl/qDx3uPiVXlFcUp6heIA7U+ieQStW7xy6ftXb63P1fxE
/cGnfHjx7PLL8sH2n/Dxfl96tuxGvFXf2ev1/F73quet9q2/r13Lv608sxUv
qR4ql87W+tWvr/y23x+HNz7+4y/rVPr8+776wWUPV1bnOd5fvUN4LtwtXt51
a787+b3zx8L3vufK+tn6k/ND4u/V98v7f7T7P/12f9+3eMOKR6T/ie83flh6
5p1X3NXz1bXO7sT/y7s7joqbxcUV3yvev2Pl49d/rfnp+kPxf+ln0sUWH5ef
f8VJ5SmJ14tvtJ+Eg1fKb9aP9Hz16OXHVFbPXvOUS59o3Cu80jhXHPC6v1Zx
tvOwax9O5S90HGu96Zo30X7Obd8VJ7VUHCZ+33lp8f+7rnFJ51G6TqJ8X3q+
dM0bN3e+fL+4uMap+Pfxi+MTzYcR71cc0N/F88X3W4/yH81H9LlXD+37ee0m
3lycEJ+WblT8rb8qP+t10quE4/2eOxaP7u/LDvv84u1a5yz8rX3rPWpvxUX1
Q223FSet+sm/tr90/eIRX3n8P/wyLr/yiJ/x7z2v/bvivX5/+0/7+pT/az70
8F3z0T1e+01X1y8Oa96g+n7nlY8nV5c/3i5+3zigv6/1ZuXlS+/SerarZ+OB
lZcvPqJ9BMs3tP+Hxo9wT7gpv9b91sTzi7vK09H513LpYOv6G9f1d72u3yM8
em1PtX/L6kj1j8uviucXn/oe2dXyOwvH9H8kmj9sPHxlx4vG99pXq+Pw9Vh8
VOtEywvUr1r/oPkAzZcsvUf+Y+Vp9nm9/vyPdCvpVy07z93nNh9q5fN0PIhf
SOcQjlR3KD8+Pl1eLb6t+3qdeP96f/Nxfp/f/NdnnaLtJZ4s+5e+K/5Zv1P+
r3XTPVa9hePik/Kr1VuKt/rOlsJd7WMkvv/a/nde/q3t1n5Wv/U98mPlEYrD
VP/7XXaqvIGOj/KBHq/5LLVr2+mO26/Fv+K69JU7v3ineP/yA3d//2/rdd9r
7RMhvv/DTv7pl1Jxgfj42meu8ULjCOUL9XnXPuUhyhtWvFAepPEgvvmK1/Vz
i5cW34TH9R+veau6fz3n03jh9Tnf1en1HYoDpO+rv+sfhDPSH+oflp+567W/
pPalWftNLv258UHxRXh2z5FOrX3o+5yeL0/tfjHXfh0XisvK+9Uv4tM9X34u
PF/raPUe7ZOz/u9q/d+Y9uGvfbXUvIj4f/m+8E3zkIoHxP+rK5ZnKN++8YGe
e+9t2et7X3lxcUf8b5Xlg+KFi//K38lfqZ+kL/W7X+Od3qc4pzpv20HfL71m
xRHFd13X+rz2t3h+n7fivcXrW4ovt91U/ztu/994WPtYddycnYkHqV173P4S
vmp/n+L9+Un51fq/K3t/dXvp9VdqH4jy8Du+Uvc1r6fP0/Ol72k9b79D6wJe
45lP9wMpr/j9eZZf+bx4u3Dr07zxVz/Q9y++u+KOVS/53V7fuL58/zUPaK0v
6O9qX7XD8iev+KuyfqF5YPec8vr6D+XrF4eqTxyenJ13vZHi8Lv+0/mzxhV9
X/fLbXzduPvK+77y0muHay/1i3hQ/bvir5av/+/Y72g/VK8vz9d7xbd7vfbV
XOs8VB/lUVX/F+/SeFq48YoLa78bleX75RvlHas+ve9r/X7ikHjalcV58bI7
Fr9c/F/xWetRPebaqeflD6VrfeqXisPiubpOuNDf77h6jXh/S7X3qkf1iv6+
7EZ8XPFzz9eePv2O8n3N013ZOKDxdseP8oAVp17Z+ksvq56j/FjN29bv1h/e
8xQnlOcezz6dXXx88ee1b9wdX1mdfa1PaKl8/Xtu6933tnzl9arHisOE5xo3
0jPEn1XWfoUHK15Y72kcI5291/e6vk/PuXp2vGvdz2s+UPmB5if0PcsP9fyr
v6mfUKn88v7evJPiT3FJ/HOtU2/crLzB1//bu9/XvFqfU33/vud4qvaBvHLp
Qctf93nVhV5xvt9zx3f/a96M8pAUF7zGKbKb8n/FIUvXF98vXnRcv66XPX7w
+3z/P/3191//B0j33XMPV8Tfizt3fM+VPqE8hcW/y9uLN7Jf6RF3XXns0pGX
3qT1BvJL5beLt91zXvmnrlv8ufG/1q+0HcX3+zz1c/HqVVfqc+Tnle+r/ljv
VZyx+IXG11c9/yfv1/jp+6Tr1a7aH+v/6+tvVXadVPn+4Wn9hebTX/n6nZc/
F/8X317/l1ndbvH7fk/nFfQ9d75x0Ou+f6+6v9a7dnwsPVm4t3h57VS4IFxc
z1X9+97Ff9d77rrqROX7xQXpZa+8vv5HeKE4rO1w7d7vkV+p/z1/UHwp31Me
eX8vH5POfDhU3qk4uLy843eNr+KXjsWLm7dTPeTOX3tW367fee0n+fvmsVx7
K55a+zs0jtF64bUf5qdxY/N6zi7E9zUfoHXSr3z/+uXGoXjxWp+78gJe98Xp
88r3V1m+f/drHlN+pDhfe2zcWXwRzqy8Ndn/XV++Kt78Ou7qtxRf9Hnyo4uf
Kr5XfNN2bLupX17jJ42T1R/i131O20vz24s3rLhD7dj+bT3WvH35vnQ+xZXi
M8Wh2vnKW1zr45THWv9292n+d+Whi//fea1PXfHDyqdp/FC+3Djju3k693vj
j3WfeMxa73v3LbuqXdeexI/l/1TqOvFxxR+v+T2t52t9VK5xuOKFNe+wcE16
xmqPfu/qb/kv7e+g9aLl98Ud5ZUXR6rTlod2/GqcdJw2Tljjrngofnz1v+/R
/7pqvyztc/Tqr/S8xlfCeeF9v/PO93v7nbUL5dMoHmhej/5/pjy/cUD7Y+2/
X/9/7a9xfuOwcX39fM+3LH/Xdfec4xd6X/nHp+uJe//K6yyuiH/rfzhkD6/r
/8s3NX/WflV80vvEh8Vfl/9YOP1az9f6C0d6/9L5FQ8vHULPKc+W/6ufXL/X
v73GTVcu/yy9TuNS/P91PqntUzvRPLrye+TXyut7ff1AefLi98eDy3973fLj
+p+Y8uzO46/98zVP8ZqH3zym8o5P9z3t+3v/1//b+onv9VMa/x3H4oX6XfjV
8VN7fl0/sMZ/n6u4peOo8UH9/Os83F2n973GE/e78GWtD24/KN5Texwern3d
lJ+/jsvfFg9d/8eheb/1/3Uttf69x41Hyn/vfPffqV+UX9d4rF+uf248Jl2/
eF2cK66sfR9e8+Q//b9brfcQz+/vrWfzhcqHOm46DpX/uHh7eX/5du/XfF5x
Tfrj2kdAvF/7Eiydozha+/yjcd8q9RyNj8X7ynfLp2s3wlPx+vqBPkfxhuqx
/Lf4ufDl0+et9/R5Swfs7ytvd/m3fp/io9ZP422t+1B833hacbn4knjQfUfj
47Veq/jY8vz0+b0rlz+u/5W//W655gte989evED5Auu7xUMUR6g+a9+g+138
r+Phu7xDpd7T83csPqtx1vPC047bxsM9v+KVFX8Xt1qqvq/nW77uCyReIJwU
7tdfil92PlE6Q/na4Uj3CxOfb/y84n+t31n7XJUXl0c2b6f5LdXtr30bT8l/
yy+2X5QnX55/9W9eVNvvzuv7+7zq59Jpl47bOFLzRK2H7KjxSN9fXqf2Ft9Q
fn75/fH45t30ujtfPy9cEi9ZOLn05lWKT107lneseZ/+T8LKD+t5zaNd/7Ys
z9Pvy/+Jx8r/qB3rb8Xz62dbH/HEZT+r3v19xUFtv8X7pbvd90hP73e2Pcpz
Wq+eF29Z8Vz98isu9Lzm09QOXYd43732u+788+Hk4Wf9XP2i8m4Wv3/dF6f+
51O9bv3PwLrutR4rn2fND7Tefd9af/g1D8E6++v4EN4t3JCfWf7m1V/1+4TH
q55qh95fHFj41Pv6ndLz+zzNY7z6c/F9+fnlx8X/Ne+ufMLyNfFszbOJz5e3
3u+97o5fcaJ5LdU/mh9efVF+rzzjrr92Lx9Vf6x9bjSPK91h7Xdaf9B4R3GP
1stWD9Y8dPUpxR/S/Vufxq8az+X59c/H589//z/R7X5/Px7v+7L4l+xAekb5
jcbx0kMWD2z8qfXZa53HmgdQfuBaT6S8OY1DxQEt6zfu/Kv/lR9rv9VO5Dea
J1K7ar3PHluP9X3i0f0u2bXibOlT0rHqB5f9rzhH4078RfUt77/xfzhR3Oj1
8vviG3e+47Djr7p/8bw6ysqnlf/Q/nf1832e9tOoLrf2rXnl+6/rYu/4R/v+
4y/fq7z/1//dWvsN6vzZ3+K3irs1fhUX9zqNx+JU7VjjZ/FTfee6rvgnHF/4
3PeJz6/6SecRLsqffDdueuUT8pfVZ6Xvdd6w/Ezj9TVPvzxfZeOHjifx/ebx
VO8v31UcVJ4rviF/X57V9m98VZx4/b+T4m959JXVW8uzxO8bN3adWeOr2ovi
j/aL9t08uy4uyW/Lf/e89DqNd+HrK++8+2VPLbVOWngj/K0dSn9f63rE03us
dR21mz536f6rvdT+8qOvuN92FL8Wn5YfWriu99U+5f91vPyi3iP/KX1wrSdZ
7St/tr5D39XxrnW9hxOHG8UP8f3ivuIgjcfyfY2Ttd5L/Pxf6/9kNd9+ZfMA
7n7p832+ziuPZn3vyifue8QvynO0rq79IftYZf3FHS+cF16IX9Z/iPdLp3gt
Vc+ef9UphJPi3d9t/3Wd/Me67rs4KHxffL/+ea0fUqk8fun+a//elrePlvDq
xpn0jvLf8kx9v/iN/ne346T+6I7bD9VxireNl7R/sOY5yrdWHvXitdpfTv8n
o3hL+SL3HuGV8nfqr8X/134JC3e0LnX9v8JrXrvirvLZpTO0HxVHlLfXbtqP
tacVL2h9vMaV+Lziz9d9gsQXX+MmlYtft59U6rqrd8eB4oQ+R/6j7ynfL259
6t/FG1b91Z614zuWn1e/iscUR4QnWldzz6v+o+++64obCyc7TjsPf/7gNT++
fLX+Z/Hf8tw7vved31rrClrPVd8+v35wzZPrf3vaDsrb0Xe0ntJzF0+v/S/+
2nHc9QKab9P4lL/9NK9f/FntsHh+v/uVVwsnF2+++1bc0PcdTgmfVO/lH+TX
l9/T/sDi+4rniw8dRx1nKtf/5a37hFuNB8r/pT8KZ6tDXjvWPmsvV5afNA+i
+F2e/6Off86DaB+zfuea1yiflN1ofbf24xRP1P6b8uPFsfrnrq+t7v81v8fz
acKF+mfxz8Xzy4sVd4r/L52zfKLxvvYJUbym/ZcWLxHf7/ha+732u1d7rzig
/So+uPSw2suyn/aP/FCPr/7i+/IfqucrH64fX7qe7m+5eI74/eHEHWtcLr7d
7xKeXHl48uO+X/+vq/MGbf/VX/Ujr/spiO9/uh5WfHddd/5fz116vvz4a/0V
lzQeWOt6F99ffEfP+3q/14Ou8d/4XOOp9q716pqP0zhpPKz7er74INwpn5XO
JrxYfFn8vuOvfqL1kM626t/6td/Xdyw+Un4mv18cLY6Uv11Ze9b6oPU/H8dX
m5ci/b/3K69F+KK8n1d+L16hvJj1v8aL7x++vObz9Pv1neKRS1erX229ZS/i
/SuOWjxfeTzl+9Uj1jjq+Cm//KN8f+2Xq7wz9dd9h/yIeJP2iep6D63rV96P
1h+21DqApderP9Y4Vfz96jfkr+rPa1fln32f/PyrvxB/rj2UL4iHrLL3ffdY
9da46v+eC5cW3y8/WfrB4crx/a7r73yh7OKOyxfkvztez56bxy8//Mr3dX49
7/yT4oP7Xf+3U91q5dcr/0b5NuIBK55R3oD8mcq7XuP3jl955D2ndtU4vONK
12v9jfj7whPx/BXvisfqd7VHx9fi69VTqiPUf5ZP93t03XfjFvWn2kv4sfIK
XvN71ji78fL6vxfls9r3R/iw8O3q3XErnfLTvGWVa3/LtntxVN+zjvu99/xX
vVjjTPvK1V5WqX1bOp6+q+t3/7wbPx3H4hfaV0k68lrvqnXbr/uilrdK/xFO
6fs0T1P71+9rf5H1PyBrfXDtVcfaf0q6h/yscLbjQvrR8jOvz5Pf63f0vOxB
/r/jrH687bL8e/3WalfZab+n41XjQKX4ifi/8OZ4/5WHO1/jgV/XV9+x6q24
tnZ9eC49/vV/bj7Vz3uf3t/rpEu97tNf3i8/p/1FrpS/vPqvfJ7X/5FpPLb4
3SsPFN/VczT+zs7lR7XupONbZXFCfveVH2uciK90HAk3rqw/EY6v+rzqg8sf
CH9lB6+48bq/3vp/EMUBiqNv/Cpf/8a7dIC/+efTf/rHX/4fW7hw9bj6veaX
rPWMr3mW4kEt246aN1EpHJReu/L3xWO0v8tax7vaq+OtuKF9eHpc/y29pN+z
8uoX3y9/Xnnq2s9GcWP1y9f4vuNf++e0v9Z1it+ad7HiphUP1T71P179Tl2n
/LX6Q/HYtr/q0f549Wu6Xv6k1/e++hH54/vu+u36n46vtpO+5+rz+v8Lwp9X
XtT3in+X/7cs7y+/P9w53f/r8X/7pf76nuqE5Sk3Ppa/ff0/LfmNxffX/+B0
Pxy9V3z//Lruq39XPdZ58XjFDWtfJB3LTqUXCNeXn5Y9ya4b33ZcK39H9ev7
i5vCN+Hc+l3Pq58U/33dd1xxQt/3mt8hnl98UPstP6/v1fcrj6X3lQ90HHT8
H3503HacN1+/fF58X/v4r/i8uvfaf3DtN7jylvV/Zq/rgrqOWd/d71y68ev6
R+VPqH2k74ofnn0Xd7qfxvnd86/V98tHOl6WPrzi4Nf8/H7nigd1f+tbfFA8
U76geHOtv+08deMDxSVLf1/5+8L34qb8YnFRuk/9pPxy+6H2K9xV/LN4ev2p
7q8fkP8vP69fqX8R36/+VP166VzlK+L/LWv3/T6Ng5b9PrVPef9XHfQffuP9
P87/fY7/K/O97jvbvuIV3Z+nfvb8a/2F9uFf++yUJ5fvyz8pj3fpVsrneY0z
yrdf+b/4+v1evBOvb7xwx6/jsuOuxyrF7+s/xfcb919ZvUz1Ub1r58KFju/i
2to3UPe/6nTK/1z5ofWrr/tuFH9WewrHVvtI3+914iW9r7y/81ln7zcuigPr
/7i1j/9rfr/WD3X/GvE18b+1zlLzIOX3xQfpKWtfseLiPaf5+9JvV97J2o9m
5YOtfVnq/+sfNf94PL/8v3xfcfGVn+a3aZ6k7fZpnovWM6g/xGOKA7LbZadr
HkrrbpVvs+LKxfvrJz/VO1754yvOqt7rO6U/vfr5tsONl/rlVYrfyr+LF/d8
45T6i0/3B1C7Lb6k8dH7W+q7lv5wxyrvuvL+Vz9/7VC9aPkP8e6VD9/n3XF1
vPX/VD2//tervOB+X3y8vEN6fOOknr/vvPdc2XyG4qbOt/9k/1d2fH13PNd/
thT/r/2/xhtr3K34//X3V9ytHym/W7rn2j+u+PaqYy0/Vn+0/M/KKxavveeI
56i91rq+jiPh0qf8VrrFwjGtYxWPayl+pHineCK+Xzy7dlrfVRxe7xPvX7xc
Orfy+fV85amI7zef8Pxm/ewdN+9wjZv275qnWftnLJ5fPfx1vkD7lkoXbf3K
E5a/ev29pdZlSA9pPNLvXHkry18svyG/Kx4qPyZ9Sfmbrf/ir8uvl7erfNWz
e331/MULOr7kh1/5vuKitlP7of3c+EVxTZ8vvt88Q+kRVy4eJ75/9a+fXf5D
+bT1m+dX5Kd1fu2Hv96neKC/V6evriW/2vOaz1BcUP6v56q8fl16rOLZxasX
/+94Lr9XvL6eK7vtuBUerP3UFr6+6umf7pux5vcVRywdffmbni+erXZYPGLN
T7zqkOIHrzq29tVtvk/3m29ZPGp541W8ZfG08r3qnZpPXDrDwmvhYXl+j+85
wqHGO+v7Zf+a/1q6tfCtuNR59OVPGx+UjxR3O07EY8XTO05W/Kf9oF7X+Yrv
FwfK868emo9b9S7vf523kM6w8EVx4cLTT/NdFr9X+Xp9cf7s/O6/dnnloeL7
4um9vn67ZZ8nfn/HfW7bU/GX/Jv6pTjRcfyqF5b3Fxdan36v9jWRHlG8+poP
5PWQ7ZerT8fRjdv6WeWF1p/Ub7RUPv/aB0dldXvNw8v/vfq5xUPuuPfXn/d9
n8YXCxfEczueXvV1jU/x/dqdePwrv1e5cFbtoXLFC+Wza78M/b549YoHlp9Y
87dqJ+WbK/9Cusun607F92X/N77EU4srC6d6vvz/VQcvn7n6Lv5XvC3fL36u
dtH9q/53fb9n4ZH43to3UfMCn+63Uv/Wecfqaec3f1z/X37xo73/nlu9QOPh
Ne5THKP1Htfen/J7tZv0os5TLLtdv5ffy16q56/1Qa/rlFe8uNYZFVfbfvI3
midd8/Gv89/Vu4rz5f3np+t367/lx8XvFz8oT9Cx+ELbte2m+vQ5GsdrPl/5
wCuO6/v73S2LV9UpDq/K9++57Yd7Xvu99tpxXrwXT1/62KsfXvxez5NeX/+n
ein/fuXb1O/1fuUNvfrv/t681dqh1j3V3r/L92VX+r1xvt4vf6p4W3ir61d+
5NKx5U9e+b54s/z9yo9Y63cbF6h/ZT/Kt3hdl6jydd8O6YCLZ2u8ic/fsf7n
bsUDzQMsXhY/Vnwg/CgOKD4q3kl3qX6z9iW6st+n/rj6fbq+83Vfdfl77YdX
ff/855XaT6B+UvNZinelx6//bdA6gNd9KIUnS3fovJP8n8atxrH8p+xl5YO9
4uOab1y4teKnpYcsOxZfFJ9cOo/86/njnhdfX/xepfhs+Wl5Qf1Sj1dcpHhB
fF+8YeVTSW+Uv1U7l+cXr8r3pe+Lf0mHrd2tcX94X38h3i8e/vp/vH2+4ozl
53RefP++c+WpNi6q/+/75C/FF3pe87HimdIRlj7ecXX20vHzGlffscbtirul
b1ePEk/9br7Nwv++Z+Wfiu8vXrye+4pX6vcV97zmCS9eonxgxc/VAfu74gHx
/ZX/s/J+xPfL04sj4jmtZ/Fsfa/WXy18u7J5lFqv0OcqLml9y7OEp8pjk70d
bpQ3lK8rn6d8X/Pk5fsdVyu/5Pql40H9J9165fP3+uJR/y+tfqP1VX/eeen5
Pd9xvXQz8f62s9YXqB1e51k+jUvXfMFrHmR5mOYLlj+XDrZ4svx4z5evXqnz
HYc6XvxAeTP97nV/eYbaf+mIuq792nZuu5TvK69/ree956i/Gj+1Pa7eytc7
vBevF8/+NB5YZf2S6tV61O9Jp1rzs8XHPq/10HXl9eIJS8duuca59IK77647
u5Fd1e/qfQunVr6LePNaJ1s8X3kHi+9LV3rNQ9V7XnVPtYfmIdu+xaWl48u/
Kd5R/NT4eOl+HSdLf1zjq/iz9h1bx8Kxvr98aZXCg4VHfU/r82keY8vqFuVr
3+X7zedfdim+X3/adXA9vrJ6WXHscOp1nYH46es8ntavS2/SevGVD6U8/bU+
pP3b+2sXsu81P7T+X3fFG6v9XstVj5V/9Ok8wWtcIHzXsXS68sPF82+cNL7u
sa6v7iw+uuKbV/2/41e6qeZfGicIp6SvVTd95fvV/dt+ve6e37I6rH4vPnUc
S5+vTiV/KF1f+T2KF6TrrTxV8f7lz8pT9LzWu7/3uev9r/xOccHSA1aej3T8
pQfUf7aePV75c/Jnyg/uerrGc+Lt4lNdfyed+9O8mDWPtOYnlHe67ELx08pf
uuc2fuz33vniyNIBy3MbB9x11fEWXzl8uPEp3Kner/8FL968jmfFB22H8pgV
v4p/FX+Ef62H/gdr8SzxrY6Lta60OlTt7uy8flB+s/pY+X6fW76w8vFe44CO
a+nzKx5Y8wxq3zXPJl7efhfP7/j4VP8S76/da15F8wEaPyvO0Htf1xeI32sd
xdJ1VBbvyzdXueKCxe+vLL8Vz1Q+UvmKeMbiKfWD0ufLR1SP5U97f3nStUfz
D4tDjQdWvqLyfF7zn4oL9Vsaz4vf3v26T3FA8ULvkY7/qb4vPJOe1ude/fp8
+ePFU1Ycq3ka8f4VH8u+Fff2fMffp/NrirfX/L/8n/iKjvuc5Ye038Sn68vW
PMSab+78TvtFusbK41n9o+PX75TOr/G44rWlMx4eiO8rb3DpC7KT9X2rn5UX
JXvo94uXLR22ZfvjVY9dfGfxoOLA4cv5tfrH8n35yepn9ZONY4U3ax5P/Vn+
L31a+T89fs17WfFh7eLsfdlR+f7i/Yo/FfdqvCvOlL2+4o3aU/MqsotlJ7Jz
6cjSYfqcjhPx8vLj3tfrpP8v/l+eKb5f3i4ef8fi5d+dF9D9S8fX9zVeEr9X
2ThLOPaj3j/3G752v3oqTmq7rDwWje+W9bevvH/FAcWRzj8Lj4Szy9+t8/Kf
i+frOs0L3bHi3o7/2nWvr/2uePY1Pl5xxCuf1Lzo4svyU/ILyrOVf1351a86
3ad5/UvH+257vq5jfl3nvNYvSG985ZdrPBYXVr5gef9r3s6n9VZ+wOt6zrWe
RPar8bD43Pou6ZprnH+a51weUH+4eL74/j2n/KJ6w9Jvl64s+1+4UzxRnLjW
77Z/y7M1jpafEx+Q/17r8u49wtnX+OnVfuUHXudNNP/+ur5X89h6vsaL4uKW
4tUrPujv0qGv7HsW39d1ul6/67pXnXM9R7y5pfj7p+0sXeM1v19xW3lgeZX0
IfH98nHhheIB+VvND8of973V16obNL5R/fo+lapH+WdxTePw+rP9KF1eceeV
5euvfF/zWHrO4omv+fHyX7LLxnnV/+859TeKCxbvl59e6wZe80sXL6y/XzxL
v7+u61X/vX7X4j3SKVdcXxxa84av84r3nsXPVtz3aV7v0sGl777Wc7W77Hit
M5F9rfwxrYcrLh4eyg+e/tWyeturH1S/KF9PPHXFu8Wd78aB9d/1ZyvPZvnZ
jrc7XvtxS/cvTxffV3uLv8uOFYevOGHlQSrOXXr9in/bvysuLs8XDxffFD9V
XsrSJXX+01L8VefXc8Rj1F7rvNpltY/a6+5bfL/5/Su+u7L6Ru1+6drivYun
rfJwQc8RX9N15Q+v8xHFy4WbxUvpD1/9wK92cv15x7LX5tkofu15+Wvh1p1v
PLx0ieLemn+uf1xx52pv5XOt9WGLd6/8UJ1ffHnFC50n/lQnWrxTfOJ1XfPi
+71v8dHiyfVz+Xn1/f4uHiPdU/X6Lj9e/XHjs/Gz+mnFW2ucLX7Zei7d81O7
esWX+q3DRfH7K//01/3u7vj8Z/2w8iU1H9P+XXbxyvOLO0sX1rzn0q/q31Tq
vs6L/fA73m/vlffLD2j9g/zp6g/FAZo3+3S+tfPvjSNf44beX/8tvlp+t3h4
r1c88CnPf+W75T3SwcVri5tL19d15VPNk/k0frr2aj+tvHvFEZ/Os6x5leb3
VB+VX3zl4WseWb//0Xlr8QXxd+n7ilvEL1cez9d2/cnvlXeqcbN09+rzr/r+
6/ziWm9bv9n+axy2+Jh4m3jdlX3v4vULj5ffFX/9NG9f9Vo8UHzhNQ9jzdto
Pdpar7z00aU3dJz2fHmL9IRXvJB+KJ625qv0u8bV4s9rHm29V3Yiu6jOKPt6
tZ/6V/mpw7vDRele1fub31M+0fe2vmucyj5kJ2tdtOLilb9T/9bxIL5/fF28
vTy/69uVf9v8Oc2Xr3h65fO8lsrLX3mW4ulrX4Xau/Bv8f2ON+l2yguuvYu/
L57d65buvXj6ijfEsxePl97ZOEnPFR9vffvdan/FEYo7Ggf1ed234HCufFH5
Ta2v7HTx7qWPiaev33vd7/NlxxstF0/8NB555fv/crzk/FSNq1WufP7F19f8
++IZ0sPVv0uPWnkY5X/t987f3vWv+mzjJvGYxbte/f6r/1n8r/UUb1t4qfjw
u/ageXbl86x5wNd8BY1LxQHqD+HRa16H8hbW/MriH6/rBMrLhRs9X5yp/69/
uvPyc8vu+t76PfF66WDi+43jNb9R+6ydrLhf8y2vvLOlcPTGwfHt4qj4u8ru
c9vzf/rrvra3/9WPdv3Lb8fd73bx/te8wLVuouO08wbiIYq71ryern+NF9b6
lh6LL4o3l08e72hZfq+44FP+Lh6tUjy//LW8eun5rb/yoFvPfn+/SzjZ+qkf
V3tW7yjeFXfVbvL79R9rveQr39fvLcvfF5+XX+98Z3n+q+73Kd9/0w89X/Nd
e1p87ZWXveYnrHxv5eOrP5qfIV2p88t3f3FbuvIrf15659Ix9d5X/VXzJ8tv
rHmcVxxoqTji1a5e9VGNu5VfuOJ13XfXrXmXT/OIX3XHV133dV2h7Pj6sbr5
8rv1k/LvvU721fqsdXL1u+X79YP1h/3Oq9fKW5JdiycqL0T2oHEtu5MdVTdZ
fP94enl7z/f/68rj7/rj+eX79/u993D6juunV5y02l3jffnlV91F47b9veK5
1/lkzb+2FD8Qz/6U92t8iwe3XPxl6Q0tFX8snf7u6/tb3/U9a56g110/KZ9x
zSuULxb3xPfL+5UHovVh4u+vfH75v9e8COkt5Qdr/V/v03et3xd+/H5++q/z
NNLNan8dj+3POxaOyP7E12qf0iuktygvo/5o6UznR/79v/3nB//lt/P3PPXL
4tvy88q3WHF6+Y78+eKBK15R3KX8T+mt0ldf88CWPtBx+MqPGx+I7684vvZX
HaHt2ufWjpaesfBS7bN0w9rhq33KH1Ufkv8Wjy//rx+s/xIPEc71OfJ/xdFX
vi99q7in+L39++rfxPdbj64XqB+q/zt7Ld9vWf2kONvfxesPh3+04z/+dtyy
cYLGaXW94vha96Vxufy22vU131LzMp+u+9H4Vh5ccbjjW+PnysX7F+9tfLD4
cZ8nPvqKI5/GNYcHqx2km9/1qqfilfrPxffXd/zpr+uUfvz+6/+K9/vED4t/
C98+HYfrOj3vdZ5P8UHHe/15ceb1O1/jkpbtv+VnVdY+6o/X/M0rb5duXX6p
5xXPi/f1N0t/6u/KE62us/ztWk/Ydu08YdfX3/jruK8u1HrKHutH6iek+3S8
LxwVn+t31O+sfEDpcSvu7zgU729eWOPKjnfZifhD6/eKQ8K3T/MEtK5U806r
35efq/+vvdRulg5WPygcKw6qPuX/HXevfH/Nj4jvr3z9T9fpSM8Xbq51TNVT
pKtUz5d+X35/5d/882V/+nnc6+85jUNUb+kCyodb+Xavupyeq3FZf7F4fr+j
eaPS5aTHiEcXvxd/7zhS/C/+0XGqca366nfdv3T8u7/10fcVL6qb9zl6r+pX
v7nWY/c5rcd9x2seo3C4eFx98tN1iuLdK354jddf5wde9QCVr8/V84vzssf2
q37veND8jfzaa16w9KfXvIK7ru1Rf1W/1PngHn/qP5Tn1XHX+isu7vmOP83b
XLnm6as3XVm9T/1THFl6/qdxgnSm8v21v0nHk9pl8Xzxd/H5dZ3uUz7Hwinh
luLqtufruoi1f0h59sonrH9f/lV+/DXO1Pnlx6Xzy+99qm/VTjU+F99f437N
j654VvxefF98/so733Lp+bqv/3N99W08o/j4U7+u8d7+UjxRXi9evnCr71Ee
z+v+VYqPxZNVvvL9pdO/vr/jb33X6/dKL22p+czqCHe+773z9aeNv6SjK44T
riqeWDrI4v2L/9celY/bcSYd5FXPW/HAwknF1QtP+r7iu/jJ67yd+lH2qnki
8bfF95e+L76vOEHxQPOdr5R/kr+S7qT1YIvni++L96qfFJ91vBUHbzw1/7a8
ddlf7U35PMWZ+qs1n3HlfUfbqc9Z+dCfrue9cbnap+3UY8WbK/9fPOOV37d+
S0d41fV13H6R35KfqB3X/y19UeVdd/a0+IfGmXhKef+dFx8R31/rdF/1YvWr
3ttj5UMufn98WudX/v0qq+M3Xii/73XVa/pd5f8al2sed+kE7bcrX/2b8p5X
fuba1674Ld5bXH7lD698X/y/79O4ku60vkv6vb5vfX/5sfBBcUP9oOIz9at4
fs8vvb/4134q/hW/Vzvd+c5HaL/F+mXx/I6HV7/4qp+Lfwu/V7whvy5dQHH8
la/2KZ1V8bF4q3jZp+t313npuG23P7out/6ufF88X3iqOL04UPxr/k5xpOPz
xu+9v3y/fr3fIb2xev/rPo/l/eL7bRfhU3Gs99/5lbe8eHN5gPBi3S//r7yj
Vx2ivyseEX5o3kz5BMrz1z5T8iPl/52fqt+Vffe5LRf/qH9qvaRjKW5p/YqH
ax18/ZR4vfzRp/uWlj/WfoR/5fU633lT8Xrl7zRPR3HD0mm0/9rax/PO9/dX
vr/ie+Vd3XmtZ3vN21q6mvBYeSIafx2n4n39XeOr40zjrby9x2f/ra/uaz2L
GwvPql+o3sWnxcsXnxLfl87W/tb3Xal+WvObjc+E51ePtf+I/O6rjq74e+X1
r/X02j9GPF/6Yuut95Z/XdnxJv6/4nGNE/GwO7/i0n9tvl9/WLwWzq/9NuVf
pY/e96v91B83rn7c//P/O+/4ysX3rx/EIxTP3PmVR6Z8/sX7FR/Kn0iHuLL+
qfcJ5xoHCS/K94Uv/V3xgfBo4Y/ir6UblK8vvU/rOOVvtH5b8Wz9YP1jx4N0
9O/qbuu6+rXG2Rp/9Wv135qX0nzTird7fuGn8jm0H1TjVeFo+X55f3l4+f3l
4/+o1z/9VjZPv/xd+/KoHsX9tR7hNe5ue0lPKR4UF8QfVrymuE1+Uris9ffi
yfJjK17W+nbFB+LbHWfiIdKvF9/p+9f3F8e6vqf+/K6v/+t3tP/lP19LxRVL
h3zVQRrPiPcUN++6xpfii695NSufv+Wn6900zlY+5Suerzi+/uXaVfneis/a
r+KtGg+11/Kv13Ua7bc1j9L7Vly3+JbylPV9wpniwho/hw/dD0u6x5UaJ4vn
639jNW6k74v/l28sXK4dSXda51f8seyw/vy7uvurvX26nli8ULqv9vfQPkyd
B1jxwrW37F3rTer36y+ER8UflSvOvvddvf70130pyvPv/B233o23a4eLr0nP
WuvGZLfS/c7+1/xSy+b3H99XWV2++54dnz9+r/W4jSv6Hv2P15Xl+YrPxdPX
datc+wNJT+k4WzxA/ON1X93ic8eR/Jp4s8b/a963+MbyD/1d8xULF8Rv7rh4
1bJ+/c63fndc3r/0efndfnf5ivZjKt7qu1YcoDhOeF9+WXtbuv+n62XX9Wud
zcpLrz9d83K6b+XxtL/bLyuuln9cca2eIzuTLr/41ave+akfu/s0L754ZcvG
AeIt4vuaD1z9d/Wqfle9Tvm29Y/1Sx0Pax+JpR8Jf1/LFQ8ozlz5KytPTHy+
pfiC9IRP1+cvnr/4g+Ih5euLH1x57S4+XR1s6QvXzwtn5K+rG8nvVJf7cd9/
+Y2fHL9vHN7xKJ3q2kc6a/cbWHi28jg0Htc6Yeld0v3/aL6+1uE2j6c6fXUK
rScoz1/juPp854FXqXXOqofavf1SfOp9n+b5Kg4QX5S+Ih6s8d/xLZ4vHJGu
KH67/M3i7a2n+I++pzx6fUfbX/Pj4hktV3yw4rvFz3u8eH3LV52m+Ln2F9N4
Em8Rv39dH7N0nLUvmvKGqvev+Lz+tfPmq70VByuOU392/Gk+ee0f0/Ov8djr
OuuOK8X/0g8ap5evaNwIB8SXNF6u3rW3a6/zk/ofS/H97+azdV66OFR9Q3rO
0nuEl7W7vu+uV9z8mk/9ysdff5d9rnLl/yruKv6X9zduajvWX9RfF3+OLyvu
FR9f/kW8v+Ow+QWrPP7feku3q5+SDqf9FT+d9629rPXA4vGrPF5bPtz8nf5v
lvi9rus++tLtxfvL08vn73vKw4t/K8+/7aL9jFbcofVT9/viA8rj0fpczVsv
nCifro7V8ag8j/pJxRf1o8UX6drKH9XzFt9vPN9xLj2hfl24pfhFvFzzAMKX
O69+V/t82k4tl575Gi+J11TPkl4hvyodRXr8q86i+1WfNV/Q/lWc3n5p+y8+
u+a91F8a38vuikevun3zDoqLK49RvHPxjcVDO06ax9Bx1vZa8UHf13F+33v+
pHmw5ft3XL+59CeNi7V+UHqR2ld+QP5CcYTmOYt/0vtrV69516/5euLrHT9L
t9F8x6seVvyVfWuc1O//eO5PfVz5vIv3i1+0vvU71et/PO8ffsmbu7ydH8/7
z7/k95T3971rHl3xb/Fp5Ytq/a/ur9/Rfl3HX3W+/Phw4/Dljsvjf3zvr/vt
6H91+79ZHV9Xv+JT6/1p/LLKu+9K8Xzl/ah+S4/UPOTiQVqXs3T+4kXPlxcs
f7VwWTqCcF66xZpXrt9dPFX8tv5JeNTr64dWnNN2EL6sOEBxgfp3vVdxwH1v
9Z3if9u97djvr84tPBDPXqXiavn/Hl89lJ+puFvzbqsfGw+I718/iMc3vmq/
d7wqfl08dK2D0Lxz9Y/i41on2u9Q+7yuMxLO6Vi65mveTttXONI8sPpp/S9O
9bP6K/FZzSMLl9Uv4m2yvx7f9eK1sue2X+v7un5E8wHSCVa+jOLRFW/KL4kf
9/vX+C6f17pWrUNRuexe46fX3/nj6/U3d/5v/6rfX3k8/+KBu644ILuUvQm3
i5PSP5ZOIn2veSDiu+LLd115rfIB7747r3W21R+q56t+9avaZ6g6n+aP2x5X
qp0aHxQvlX8kPH3V+7+b1yV+v/bvER8Ufi88Wngr3aa/a7wIR9d6ZPkP4Wxx
T/N8S2dSufSs9svi5Qt/VpzU57S/xZ+uHTWf+or3V9belh6nvBiVysdZ++OK
/y++L96r65Wf+XX/kV/1tk/tUvGg8uGqc3U8Ln4vHFv7oiw9v7qnxrniJNmj
2lf8qnih+GHxGeHr9U/zgq+dut6uflvz13dc/yM9SnYrHFn9svC57bPsW7z4
zms/vNpV4yrx/DWeVxzU75R9rHhS+rry6jUe9PzF8xXP9ftUn/oNvb/5ONXt
y/OvLM9X/lHHm+y5+Kd9WIqvr355rUdf+xmUR4v/tlz69+uxeHHzYMp/ly60
/HxxsfxfeTmL5zfOUTxzpfb1uVL9tOYN9f2vPGP5+5Ydv+L9Oi/dWsfC35Vv
LZzVPPOrf5H/l99ZuLHmoeU3xff1fuHP4pt9rtrtypXXKV5Tvtp4r3zn0zwc
8fjF95Wnv+bhpOe3/pp/0/2r/Xq+fqbHr/l+ul/x99L7lYdantl2Un1kj+Ib
r7ql9h/5dF5g8ZfynI6H+85rv+pG55/K96WrLX+z4tj2g/Bl8X3ZcdtT/Xi/
L3+z5otfdRKN57ZT36N4ZPHe6tblq9Wzz557Xnp27VK6vOKA2mv7s+NQ46Xf
q++/7zt+f+WP6/7+r9f93W/8vtd95f+/rnuS7tjf26+vfKbjRHrm0n/WPnUd
zzfOyztXfkx1b+XLly+veKD4o3n06j5LT+t94t3l+63fWres9Qhr3cEr/r7m
J6w8npX3Xjtf47W8WLjecSUe0nGhfQeWzr++U9+zcEs8f/Hu4oT8o/i+2kff
Wz/X64Uv8t/Lb117yC/UXpZdle/cdbWLNY/1yqfF79c8wLK/la+75v/7nI6z
tk/HX68T338txX9e21/zJmt99LK/xVfEH8qHjk9cWf5/58tDa/c9v3RN6Y3l
GSufp/5J+1V3vlnx8iu/X3jR8S6+2FLXrXlX8f7i8+Jhim/X+Lj7FMfIXmVv
1atrvz1fHnzHjW9rf4oDGu+K97+Waxys777vOl7/lcf/w2+/H/+/3/sdij9l
R7Wf4m75k/y//P2KR9e8sfj+HS9er/+Vatn4ofOLh0ct7/o+v/slyz/KjyoO
6vfp+Mqr39V38f47r+s+3U9Uusta96F1bNVtpWcUr155RMdDdeG7vvxz2bfi
4VUKv/Vd4qOKB/r94tvyKxrfi19pf65Xvl/eu+blFce0/eSn5a/Fk4q/0l9e
eb/sbOnw6/h1/86l02gc9z7xpyvVT9fu8jO1h6VzvsZZn+YXyo7rN4sr5SW1
q+YBHP+pblreL72/fOXK1/lQ6Qm6vny/61vOTy1d/47L92uH5f8rfl18uXa4
8tIWr195ggunOw7kt4qf63vlT/Rd5beyu3W+dls7f7X7Zf89r/yhlde54pvG
La1/y/V99/z6lfZP+fuKE3vcUjxJvKFlx53yS6trl/cv/q+8kxUHVEcQ/+35
6t5dp9VxqXFbPHxtF8U7Vx/lNZXP91j7JFx8IP2l7b1weeUTLr1ffL92uXis
eIHeIz7xKb9Y+442vum4Kn/41+L9+q5X/v3Koz79/uKHeLH8dsu2j3ScHq+4
a7Xvp7xz5Zm/5u0or/x1X9z+rnwBjctP7fHK8szaxac8Xe264iGN885j1P8q
vlR+zJWLv4u3vOqbV0/hSeu7cOXK+957bu2189b11+fP6ufEA1S+5qeL/2he
ZrWD1ldr3lD6gfSC1r/11f3SPWSftZva5eLb0uMXX1a5+PXp5CsvRvNia76s
ccl6zl2n6+/8HWteQesNVj8Kj2TX9ZfCscWnqnOXt95xx7Xy+4sX4rWnQ7c8
XCn/vfJH/f/yyzre8uB73tXj6qf9GVZ+U/Wz5jG1XdSOim+0L0L3LdX/hN3v
1fVXPCV8XuvaXvdVuGPpaste+xw9f+mG0l+X7io/JHyXXlh8rv9QO0iPf+WF
zVNWfvji66v9xTuXfUj/kn9Tee2o59T/9/rrT33HyievDqD9bnWs9QOf6ty1
Tx1fP7R9an/l9cuP1W41jtb+X6u9dJ/sTbxQfHvxH/EnPU/zA2veqvxe9e59
4rHXPx3v5w+W36h/OX9dfb/+73U/iFW2P1ccpHZvvsmaHyhPl79aPO71fuGg
5p0Ul77Go9LX9ZzFt8vje75l82Z6/x1//f3Pz/FD44+v+Tler6DxVXsorvT3
lrWTjs/6x+J1r1c8XJ6ifQ2a517eLL4vXv+qx6/8lOP3V5b/r/8FORzSfLz4
/spnqk6n9pFu0lLx0JVtx373a77U+t+Ofn/9dfmEeIXw7sred6XyhsSHX/Xt
lTe5dFPppOU/N54XXohnLf7Z/tF197y1D9HK9y6faj+/zv+Ih4pHLr4jvF24
3Pav3an+4iNrn521Dnjtz7HmXzQexcNrj4uHKD7ofYrDZSdr3+hP49C2g/xr
/af0+/L8K/Wcnu97xQdk3yuO6H3lg33ftZ/2bzg/Ub+k9WjSkeRPpC+I3xcf
Vvu1Pdou169tz5bf5W9a/9vrF1/Ud7Temn+6Ujy/x6u9XuPg8n/x/jv+ytt/
8vg//TVf/vh5yxVXiMf3vOKhto/8hvppjXfZhfQq4YjihPrX6taLz994ls6t
vJXjodWplYe+dOzy/SvvvP4v9+q78hTk9zX/ufSNzpO0XTQP0lLrdpVnWV6v
/UUXT1k6t3jCa6k4oe8vf1FcIB5cfqD7Fp9rfcozpPd0nBYHFJeLf/a9i5+K
J9159b94m8aLrlecsOzqU/4vnnOldJvyVc1rrTyete/T0juVf9h2qr2Ify99
X3G42l1l9eM1X7bydDS/uOxYOoPGofhN9cHyA/HtO158oL8vnKieKx1h8Y2z
g87r/8/Wzh7XsiU5r5oITVmaAR1NQZ7MNxm6dOi3+cznNEBDBgWBIA2OQaIk
SD2BnoHUvPXVxVm3Vq/Yp7pQQGLvs3/yJzJiRWTsvLMbLCsfd3Zkpa1723yy
eIvpG46ncZHF94vrar+Va7y+/GabZzaOlY+085RXe07pyfIvyNHkffI1eZzl
fmc8vu6z57BkPa/7B1VcieNW91W/mx7guJQ/QU4ix9Z6s81jxq8tb4d5NyvJ
/+YH7Hr7u7wrd930Ern2Grez9XryO/Ucf7d1Ucuv37Gtk5g/RP+B76e/Rn+k
8vaNy2wdqTjEeITlNZ5X8WXzJypf4sovxf02r1faugWPKy+7uNvGsd5b7bVx
u66/8PmUC5M3s1Nmr2o/DhuH4vPrfle1z2fly7F/TL5svu15P8v3HI+aV0/3
NXp63nifXF15CxYHJB8a71tcl3JZnFDfkfJ6G09bN+Tf0aT9qP3njPcZJ7R5
UH4b9Ql53/Ro9edK+m82vtQPNd9s3l3nmcmT5d9Uvo3F8Wt+sx/LH+b7iv95
PF4vP8Hi/a/rAv+o/oj5SxYHMvky7mZp/Wv2y/w/Gx87b3rZvke9fp/K+D7j
0ZaPT97nMfUPuZb8v/g+89mnp6iPGIerdY7ifDu2+Ai53/yD8qPML7DnWNzf
9LLxB0uzN5R/6kPqc+pJyzup+lT+BZ9r+/rRn7h+N2x8avbA+LpK43SOi/lj
1DvGh8af5jc8/S6ieL94buX0b9kd2ieLl1AOK5+q1gEq3+nqn1n82uaZ+dkV
lzRuKX+dcnn9rrjy6mr/IePD2XWOv3H+ji3f2Xjfvv+88tT1fsq9zWuO08bF
9tO2fZ1px677P1feznUeUJ+xX4rHbL9Ky4c33jc9yd+vencl5cHiE6y/+aXG
raY3zV7b/j/kffoZ1/wfu3/tYv6O+QOm122cKR/mj7N/TN5s3E0Odj3Hh++x
9YLyMyqOx3x+W5+u71Y3/8efO7Y8fYtTV/yace7xPvP5bZ/Lyp+p75ee7sPJ
51u7LO7PdtM/4nnzS+x7jPp7YxXnLz9213MeMO5EPc/v8a751BUPrPUcfqdg
9snmFfU79XzxkZXsd+Mtjgv1vel943++r/rzum5i7TbepxyxXtST1/hXxXUo
B8af1/6oeKf5VeQeizMVB5q9L443Oa75WPH6yu+w78HNj6Ac0w+88j65v/Ke
ix/IBWa/OW95P8fHxmXn9z7G92cXLM+0+N94n3E1y8sqPVd+rvEX47bGf3Yd
9YGNh3Eg51/NO8pp5c+wpDybfJIHjfN3Pf2P+g6g4uYcB/opbK9xvdXL1mvq
+2zjZspZ+QO8v8aZ19F+Wd6W5Z1RPxQ31Xdk9p0P49qMW49fyfPGq8X7fA7z
fMb39AN2bO+t97Meaxf1384/zcPhc63frD92PeM2tW5h6x6WB0U9ZvOl4onG
0+QD46ArV9X6RfFH5QlxHpW9sv7gcyzeTX1tdsU4gyWfb/y3stZdWFY875rX
S95n/1Dvmr5kSTtHvc720x/d/Ln+XV6To1oHMX/M/GyTG/PPa9z5PNqT67rG
0/WPkh+LR1A/WZzU4o7jjJ2fHSbf0X6Tl4wTjP/JSXafzXuO037nej7jc9d1
Z+P76z6cpifMvzW9Z+Ng8754kLxMbrV9cjjexnEcX95n75kcMt79et7j6lzH
NDth8sv6lj4t3ifXWz4V71t7a3xs/Pm+ypvjeL3Wo7+/Nj1bdrnkeeepr6m3
a5208lw2z1lanl9xvvF07Se/68bn1/g+4/wreb3td1/1Xv0sjs96r6z1BdO7
tl8a/Q7GYSqvh3x8XWc1eaX+IydX3N748ppH8XQ/OFv/uq5HW3zW7DP5teL6
7O+K11/9AKuX+WnkX7PTlJvK3y2eo14zXnrXLlFu+T7j3PI7rR3096x/2F47
X+Nn9qFKk2vze8t/tnlYeWvGjazH6r1xNL6z+Cl5f9cbzxt3FAfa83g9S85j
cobpF8b3itsZzzM7YvzAOH/lRZrcmZzT3hhXchwt/6Pi18WHxX+UE5M/1nuc
b/vYkP+v61GsZ/G+2ffqB/Ir5wXfx/c+1d98X/WLzR+bX2xvzU+T26teqPjB
Stop6uPK39k8r9Ly/Miz5OiKb1vezZ5T3/FaST9gZfE+63n1X/Y81tv6g/1o
/cH+qn05V17z+I3DyfvFHcYNZq9X1t8pqr8jUP5A8cRT/8D41Tip+In8wv6m
H1HxXeoVGyd7ro3fld/LP7LrjG+pfyveY+v41OfUq+zPlU851eL77O8d8z67
zvw+ji+PSw6rJMfb91CmZzjfSl7qe3X269prPDEOGC+Rm8Zf46rX43/+whMW
Rx63Ge8Yjxk3mNyv3O8mT9Snxu2M51vcj37DSq4T13cX5pdW+9dfHIeN53i5
uJr3G2eR11jSbyB/Gu+zHqv/+J6cTz9gx3tO8TH1HuWJ8lh8zedRn5p/a/F6
k2+WFt+5+gWsv/E721f61uxJyRHvo76x6zePnsaj6P/zu37GlY03yaPGueRk
yyvc8e7n8Xj+b/76TxX+3LdzJXnf+N/qyXZavWp9wfJ9iudX2nqAxe8trlN/
/5BywzzZ4sOKExvv75jySp43f7X+LiftjMWfr3npxr3ko6vfY/Wx+Kvx3NPr
WE+Wxbm1XsPyqZ+w60xv0p5UXg/tnvGX6dUaL+N+8wPrOTXP+LvZXdafcmH+
TcWNjAMZF+I8vubzM8+P/WL9afaT+QKvfNXfJVYeAtcRaLeLX4oTaj3B7H/t
Q8e4Pnnf7A7jSfZ9lI2zyTf5yvjT8jjIwVaaXqD/xPli9TGurXyy1Xdc/8rz
v/tW/vbFH9h9lGf6HcXP15LtMv175exr/aw/Ob/qfcbN5l9u3K/cb+9/2m88
Lju0svKbbZ2v4sbG5zxfefPkZfs7s+R726efvM04P/2BlXwv67X21He1vM/8
HON4O79+t/VW+3tq9b1hxSnJy5WH8JTj6j7bX+q6n7fFV4u7LU/hGre1eWk8
VXxv8Qbjv+JEi09c12dMXqxfr3nZxsfsB9PTpl9Zmr0pO2C8aSX9TvJY+aMc
R/PjaKfWDvK8yafJL/UHj40TTT899Z9NfzD/kP1Iv8byo1/zJb7m91T+B9cF
zB+45jkbJ5lfSvmlXiD3M05Crue42b5zNr4Wn7G4o32/ZPxv89rGg1xY/hv7
e/Xh/DJ+47yz+pH/KZfj+Vfu/+3778zrYXvtO4byO4uTTa75u+nRKo3/Td75
nivvG9+b3jc/b8d2PfVx+UXWbs5r2gnqRfuupv7uFv16cnztu2P8bHzMeLtx
O/N6xu2Wz1N5/ozH048xv4Z8bv4O+4fPY79Tr1IvM55WeS7l79Xf3zJOeWqn
yYEVJzY7Ydfx/cxHKj6ruGz5E9fnsz58Hu0e+8u4xvwLHlMvGffXe2oc2X7L
t7I8jysHUK+WfbrGk2gvzG9bfay99h28+VWMK5XfxuP1h/VbyQntB+3D9A85
sOIPtb+m1cPW4Wwde+eNI36cP/F1P5Tx2Ery+TWeb7xlcTzKsZXkTj6H/rbl
8Vo+r+Wb0i6x5Hssr6C4n7zNdhsHWp5H5YEYz5EvrR6VV2j8T+4f57/m8fzt
93L+wK5/va/bZ/UveTP5Z78/5f4aX9PzxddsF59jetOO+Ryzm6zfVT55bPU1
u2HrsJbnUbxvfEvONf6385aXP45nvg79gJ1nyb/PZby9411HPcff7f7yh6zf
ah/90tOV51LfaVMvG5+bPS5uuJbFg7QLzFuy+/l8a1flpRTnWz+ZP1H+lXEa
jytea+dZGke+267i/eI+83t2njxnvH/9Hq/K9YvxSM2D4pkaB95vdtP8AJ63
/uX8qb9bYvx35XzK6Y7px9N/J+/b31ennEwejO93/HH959/1ZBzf7HT5mcZT
5IziF+MSixPYeqWN8+wfx9fGn/EoizNa3GbjTHk1njP+ru826zuf8r+Mkzne
xvn0I+l/vsrdb985/+O6X3Vd6mn8/sr5vP/pekE9n/1a99MPKHkxPWlxI3K6
PYf9s2NeZ35p6Qm2h3ryylMruc5q+X2b18X/xdPG1+P3cb2V5HjjfF5veULm
n1hpvH/9e2LUi7VeWlxv38XV7xbvr7wMiw8a5xjv2Tq8+QmUb+NH3n/li2v+
kfG98bNxMv0T43rjP/P3WT8+t+pH/qzxtudYu82frHUg1p/9YPbM4im2nm/2
ivqX7V79TD7Nz9zx7IT1p/ldNY7G9Wbv2A7yIPVF7etSvGf9sWP2m/nvrCfl
lO3cuDL/g5y/43EY+czyfYxXiht4ndV71xnX7L7ar6P25dt40h4xH4h+QK1D
2ziZH2s8aPPU1l0q34XPs/eTd8vvoP9Bufqx3P3+S8m4P/1Uy9uv+P5T/ja9
WeNj9TK/qPyJinOY3az5t+vtfHE8x/8ad7J5bPbY8hHMntL+Vvx48754374/
5XWM69d3t//+T839uz98Lz/a/Ycv95l/YPlEKy1PZ/W172zr72PRb3g3L5/6
0+LytH/1d9Yqrj89TLknPxrns7yuCzzlQ9oNW/9iec1HsX6hfqm4qvFZlcX7
xon2HNOP1g4+l88p3r9+t2v9zPeR981u0b6Y/a/1fesP9j/1q33vsWNbv7nK
b/WXyQX7cfdxPGp90OK65EHjvtpPl/qA34Oyn9leys3KjTO5cBxmcsL7GPdf
OfkzziBvmJ3nOPF6Hu96zi+Oo43Pfmd8r/4Op+UP2/qzxWFMX9l8Lq5mSc4m
L1u81eIH5Dv6f/Z9wd67crz/Uf72nfN3/Jrf89v36ymvlTdmnE+ONc6mX2X9
cuV266f6vqI4/jp/irPZT6sH9SvjCKYvqFde9Y7vm82SdqHyByw+YvqZvG/x
fpaW9zM+tnx84/iVxvuVx09+Z/y/6lvfJdh+PLYPZ8VVLE7CeFt9D2n5PrSr
podL3oqPK97M55Gnd/5n93W2dTybb8XhxsemN971A4rTjessPm7PsdL6dyXH
23jU/Kzyp6y/LU5jdqviSPYc2purX2vjyv40Pr2Or9m3uo7zmf6ZfQ9vcX6L
TxhX1t995HttPdP02Npn8Tfa5/ET7bPl8VhclfJTnMHxLm7hvKDc1X6ctDtm
h+zvb1n8qf6eO/21mjc2z6/8SL/MSvJy6ZOSB8vTt/rw+9xb+ZlvZu+vdcyS
V84X8qvxvs0bzkPrT17Hsvxd86tZ2jy0+6vfnn7H8ap3fD9o4wLGl4wHS39T
PzMP5Wfze8jL4/Vx/OL4xvF/9y0PiOX173BZPYzr+Xw+t/7Orq17mJ41zi87
aOP8Lu8b/5ncGe8XH1Uc3eyarWuVH2DcTi4uvWClcVbNZ/OT7Pk75v3Fy9Z+
e4/1m3Gl8a2N31V+rF+ox40DitfKX9jvHEdbh2J9je9tPKz/a7zLTzLep19N
/WH2YHprv5MTLR5s8SfqKT5/z2O9mC9i/bfxHbdYHO76fd3kgt/bcb2oOIXy
xXHb75xnti5jvE37vv6dXZrd2rFx//XvOVY+F+WZcsp+Mw7kfK91GlvXs/lP
PiXPF/fz+ld/Y/vv/IrvdD/35dx1zO8x//Vp3J96kNexHZW3cv2+pb6rqO+v
qMfMTzY9z9L8PtoXay/H+bqOYfrY7KTlc9i+apaXZ+u39Puv3/NWHgzzemx/
ncrLMV4npzPebrxe+/oU71d8n3zPdXH2O+1afd9q66nmH5DTjOdoP6/8bRxf
HMyS/szT/TKLb6kfLC5n8TnjOzsu+23toH4w/qt+Z7vZfmsf+2fnzZ6zv0uf
1XOq3mavub7+NA5G/rjKs40fx6n8LBs/lqyn2UGzL+R9i0uQF6mvah8xKy1u
bPGoHZMr2d/rjyuX0W4bf5ALOD9Mn3B8OP6cB7WvAPU87Qbj/PU9GfvZxpf8
wPG0uD71x46NT4sXK95d3/GUH0G+pp9o+Ts/zhv73IdzJc+P93c83l/56jd8
cvjVfyUHGw+XXiQHP+1Pcq+91zi84vLWznoe+8P8ylc/7nMfpY3Px/1f87DM
b2H8iMfkP8uLND/cuJ96YvOdet7i+1aOg8fNH+38jPMzz8d4u/yAit/X7yv3
PvojtR8P9SftV+XrU7+aPq+/o0v7WfujUf8ah9TfWWL8puL5FZeuv+9U+zvT
7ptfQ35lnM3iA8W/Vq+d57pLcR55jc833jbep94jH5petX609xoXm7xQ7/H5
PDb9PHtEe2z2uXjf2l/tu3K8nWd/0l+ocTZ/w9Z/K/+bdsH0ldml2jfGOJ/v
5Tro5IXz3uTC+Mj4jjxi88P0hfnVGzf7Psv0eXG4fW9t35fZ+Fp8irxf+3aZ
3Nr8snFjuXHi8cpxV8Vzi1epP+z73PHeazz/a7yefM/ryY3G9Wy/+U9sb/lV
5iexPyqOYv6acTnnB+WFfrWVT3nf/AdbRyr/j+vKNu/Nblh8lfra/AHT58ah
lb9v+TvkfObvG8+P969/J5frAdc8fvMbjPMtf8i+B1h/0W4Z/1dp8S+eLz/w
Gh8nh1H+nu5LX7xT3Gfvof0wzqLeKO4y/VJ6ie+3fqLffvWL+D76Dbue+ovP
Y7t2bHbC7OD6ge03Pcb21985q/Gm3jd+o/2fPmZZHEg/j/1o41X2i/149Qc4
nvT3LJ76lPeNF03PGXdSTxn3877yM/a8tYv22r6nZJzU8gssX4HzzOYJy41P
xe/4d89md60fal/VWrcpf8DWo2s/Tuop+mWmZ4sXOb6c7+Q0jgO58Cnv8/jV
r1g8/vdfeH/nx/v8fSXjxia31/ULtpPXFe+zn60+Vz+N9b3yeXE+9XTxvN3P
dtOO1Loh22X2gOdL/5OLLE5QPEk/v9YBWTL+PY6u+H39/az6O17k9SvPP60H
n2/x/qu+rPVrs38Wz6cdNbmw/BvjbuO14nzyn8mv+RfGh+QUxsfJhVfOt3go
fzfet7iWfUdv42D1Nv1gPF+/U9+Ra4x3GCdjP+w91Q9s93XfMfo1V3tV8Rnz
B8gPZp/Mn7L1ANaf8mfcbnLLY3se55fFk4vzS69ZfNriVBaXqn2CmM+/dlIu
yCm00xxX2nvjl6f5yBs/9jvbt36ffeW+z/S3ar8c436WrIeN855X+y6Znjc5
tvlq+T42zhWfJgfbeNNvIN9TX3w89x+0ZHyfcX3G96mHKm/H/Ezj8JJXG4/K
p6ry6bzheBevb1wtPmP9cs0fK3+H9sH4gsfGTTvPeUU9vvlnXGl5/OR929dm
pfFxfYd7zZ+3srjcnm9//2ul1ZtxffL+9DP1KPvd9Cr9Ltq14kfjY8bzbb2V
5+255RfQjzDe5u/lDxj/2fOqnlYv4zabr3y/9b9xbPlh1360kvU1O2nxLNO/
jBtfOZ/tLr6nXKwdtNemv43rbX3c7Ct5wbi6/E3jc/qVZr/sOvK/2RPaD9s/
56qfLI5v+/EYJ9bfAzDO5N+vZv+YnLA/yX1XzjB/nPqB7V17aF+5Tj27QntM
Tqed4ThZXK+4nmWtH3Perx8sHmTcT37iONh5i4Mb71MfGu8W188P4Pl383nI
+9RfOy7+pz7kfVc/oL6zsHi31a++A7DSrjfetrLsoNkPjg/lrfwPswucF8U/
1N+MA9u6Hn+v73X/KPF24/3i9SvX23mrx87bc/kdMb8ntveR73lceZIcB9PP
ti/dNR+ifqcfsNLWC2wf7Pr7qyzNbzUevMaJecx1c+NJHpP3jfNtHu95lr98
XWe5XmfcX/4M9Z7lvZv9tfc+9WPMn2R9rR3U92Z/Kl5m9tTaT7mgPNW6Gu/b
cfG+HbM+vG6/m39GezF9ND3F0vwA+x6McSbOi2t+qukbyjX70Ur2I8eZ/pvx
PPt35zf+aze53fa3oJ1dyfXl2R2OT/llxvPlN3A8zO6svcX7PC6/1vLBWRpn
XjmS8rD7jfvH++R7cr0dr+TzjPvJ1cbX13WBK49Xvk6V9j72u42LHdd58xMr
vr/+r/Fg/qdxv9kNixMZn5leLP1t+3Dy9+kX6pvK5ynern3u+R5eZ3qRvG/7
9zPOT33L7wT2Xurtp/k8po9pD2t/TfsOl/xxLa9/14F2bKVdV6XxYvk3V44s
P8F4zOy9xf+Npyo/nTxrftmV76u+5EHqvx1TPzFefPXXKJ97r91n7WY9qN/N
TjNOs3J6nPrc8n+pt2t9zeYv+2/HNl4mb+RcO2/xJcopeZ1xH9NzFmemHjR+
rDyf8pvLnzW54Liynysex/ebHKy9XB/md2azQ4wz2X5wtj+q5fnYeNU6Du2S
xVHYbos7lF69cllxeuX5GC8ad9a64Xidefk7z3i+8b5xP/ndeN/yoqw9xefF
0daPVdr11/dYec3zqnx84/rKdzV9UnFE0y/FaYzX2PdQ0+PUEzve77YvDfWQ
xfdrn536+7W8vvYLoh41P2Cl8T653/bfrH2MOQ729y0rL9/sDLmI+pM8avHH
4u2q/3Ud4prvcY2Ll79g72FZvGw8ZlxQnGD7WBjXm19j/oPZ0SrZXvMfK+/s
KmfX6zk+rC/thX3XZ3GbyoslV5v/aPJn8mrtozwY769++53+A+0L5Yvrw5XP
b7zP35nPQ/tSf7/J5Mr0APvP7Cx5jv4tn7Pf6e/afLQ8KfaPxflZ7j7axz2H
fpbFma68z/V/xvOtrLxP5iEX57O0+b5j41rTc+b/XTnS4gfkdsb9raSfsOfx
PSwtj6m+Z6C+43OK35/2n9kX42Ljf9b36XdotA82frQPjO/XOoXZVdoR088W
96P9IO8zTlLfgVIP7Jh6ijxOjq6/Y2W8bry/+8bZ5PvidNaTnM96019gvYz3
K87C+IiNl+U5mJ0zPWh+gdlP0+esV+XlWl6LxYfYH7zP+Ir1rn08n+7rWfOY
85b+VdXb7KNdX/4//QeLp7GdK229kf13jceytPyMWu/ZsflXlH9bR7b4TdkP
2p3y+zjfzM+5/n0J433jWv5e9mX1sP2Ziw+NJ23/iIqLXPWm+Znk/uILzuer
X7rxMr1IvU57ypL2jess9LesH+kHmD/AceV47zpbv6h4zlN9ddW/xoflLxi3
1nHFw6lXyPsrX+P5n9/vcp1g5Z7HuITl7bAeps8s3984v/yg8g84z4z/d57P
2/m9jzy+46se33XG+U953/TJVY7NXtMeGO+UXbHvpiweY5xfvF/8bPF443j7
zqn257TnkuOf/j1dnre4VeXnGN8wHmL8NjngdXa+8moqTmNcRy4sDq/9O8yu
cP+P4mH+bv4S56PNz7I/9LesPlW/4n2Os8UhyXsVTy7eueZZP/3OpLiKcrh+
pv2hXp6+ZTzG7CPtmq1zm742v6W+6+Y8qrholcb/9ONsn5zifOPJtW/9cM3b
MU6264r7yeM2D69+mf1dWfNrbT3U9h+1/U8ZRyqOt++fyfXke1uPtu/Kruun
FY+gf0v+M3/V1mPJqcaRLOu7V+N+6pHxouX1r9x5+gc7Ls60dQ3zByzObfHq
q/9z5X7qTdpT4+LSx6wP+439x/N2vf1ueYFWmv9petrsNPW3+d/GZ4wHWJyg
8mjGz/Y9rfG2/d1a42/7u1rmT9BfsP126nf7Xsr2qzN7RDth5dW+Ux/u2DiQ
vH/d/8f8keJBK80PeLpuUPaG7Te7wX7mfOX823Fxn8WtLA7M88X7vN/i83Zs
pfHqddxqHaW4uPwj9if1545rfdfsAfUy7SfzNik/9Euu38eYvjY5pb1g+ymX
9EOLTy0Pp/LyTV5sHleeI3+vOIHtf1BxB6sn9wFdafqq9lFeuf6jPSGHm39V
vM/3mh9Xcary600/WTzI9B71hPmrxkfUC+RP41njyCvv/izvk/NNL1E/VVl5
ipUfs/O8z0rjeasf7zNOZlyH9bR1F7bD1nerZP9YvU1OTN7sOcYT5JbiOPue
aPqF8ZvaV4A8/JTDd1z7XZq/wXg/y8ofop7lsZW7bv1m+tL4trjZ9GJxKXmj
uMl+JycXF5Jvah2g+NHk1+Ki1/4zHjd+Kn/Lrrdxod9g9bvyfvH03nftB+Px
6l+Tb5Nbkys+j+2083y++WW0+7QDi+NQT1u8zOI7HGcbLxvPH6/Hfv07YLQz
VlI+Wa9a962/B1h/9/0av7d8FLvPnlN/F6rWq1hv04fG8bWOwe8kav8M2mfj
fOu3d/8ejK0XlJ2jHL8bj7nq3/J7Oe+Nuypua/qDfEje/7jvt+9lxfmNN6mX
iiONh229wri47q/8x9JPtJM1fsX3df7K/bvOOJ5xH6snx43yWvEc4wezI7Xe
aPuprRzfGjeT82ufnZXG48b75Hie53OK923/0bWbcRDj/l1XeadPeZ/njZ/I
Uby/4iyWN2HxYeNc48Rr/vY17mn8d41rs77WPuP2q33h/DSet3oan5s/YHbS
nlN+i42r+R/X8TD5sufYeyYPu5/jxPFbyTjROH92mvaVdrDye8wfLn/beJ/1
Mbuz89QHZi9MTxjvG0/WuuDVf6C+pV6t+L3xaenj2oeA+sz+zoDVv/Llza6s
vHK/cTvPX/O27HnVTxbPsPnwNB5R/oD9XvFp+/5y9xv3UT9Mj4zfGd/fMctd
b/qI+sa4nbxKvqUe43VVVp6T5feYX0X9adfzfNVz7bX+Wbn+Xsn7yn+hfTF/
bL9Tno0/zC8oLrjmaUyPUb9YnJ9cbd/pku8rb8fO1/475k+wpD5daXEV259i
xxb/sHzcp/uZMI5p/uCOqUft+caVxYfGheSMPcfaTT1v11/7y9a9al3M5pnN
O9oBG4fqX7NzvM9Kzm8+x/QE31vjaXqn/A9yPfuP/mnta0O5ML+C9r3iYpb3
ybi/xYuoz2u82f8W99wx61nxNsqn6Yda/6Veqzh2jRufy3h+xa/JqbVuYPU3
P8byW6772NNOmp2hvdmxxbN4fa0D1N9Ftryp6zoAn2P6nHJdesz0YfFO6Sfq
HZYVH+A8Mj3CPMHx+7h98X7m+Vje/jX+QP4nz1q8wuL4FfevdYLSt7UeUHmY
1NfG6bVuYf3DdtZ67sryA0yO7PfycysOV1xl+whQT5Gndzy+/3j+59+v3flx
fPE/S8vfX8n8oetzS1+uvTtv8Q5b3zT995T39xxymMmdcQb1bvE75a2eb7xq
7y9ONjmuOLDxp9kR9uc1XlT9VvPS6mfHvJ68TDmr51T+k+mPq39KP8zktPxS
y2u3ced40B5SP5v9oN2t7932PIvfWDvJ0T/m7q95tvbdmuUlTG5N/1ceO+WG
/G7xDWsn7zfuNl695uOXf8H4Df0Ou85K2i3aHVu/tu/bdh/t8ErzA4r3y0+y
dRWev8ZlzP9/Gucof8D4aPPA9HbFb3ie3Lb5Rt4n3zPeT96fvpn+sXlvce/i
ZdNffN5T7r/G98m5/J1l5d/Y+21dw57D66w9rDftmrXP2mvcUf7B5LHs+uaL
6UPbP4A8PD1U8XzyufG+6cen3+tevwO2OIz5AWYPLJ+Veu4ax2R55VPKwTWO
YtzOehfHGFdSDo2/rT6m7+s9xrNsn8X32b+8jzy5660/y4+5jo9xLfnfnmP9
ZfFl/m7fo1scj/aW/cp2GBfX9+V7H8eD+rLs9Ozsj+31Pytfk/dNTsm/tr/V
a/vu9tXsTPmd1+9nyP+l32rfiNoHlHao8kpqfxzyu/H81Q7Qrth+0Mbxtn9E
/f2XHVfcn9x//e7A/LPKw5wc0L98qv8oV2Y3jPept3ld8T3nja0XWHzf4vkf
4/KZz2/xfeobiy9vnrM0/rfrKn7N5/E51+8Fin93vH6276f4fPOPNh6m321d
19ZTbX3lOi7WH8YfZS9p1y1/h/EV7sdg+pbxb/K5cTp/p94qDt999T0wr6de
ZN6/cf7O087Yeq7FnchBFVc1XqKe4bwg75feNA4xLuR95q8Ur9dz7TlXHq2S
9Sm7YfUnd5t9e2rnrH+e8rn5bTX+1/6z8+YHreT6NPVh6TH7PnDtoT03vct5
RH0+OzB7/J++xd1q3wtyBuWMnMt9TshTZrcrfkf7QXtRcrl+Nb/E4hnkfuPL
p/Gl+juG5FbuS7Hn83n2PpZ7Hzl6dmJ2iH/Xhfxu3M+/X8n7We4+y/tnnJ92
zPrR/D5bf+J1jHeV/qc8mR9PeeW6Iefx5oNxPe/jPKGe4P3G1ePIleT+xfVX
8vrpGeNOy+fnMdtlHFqcSf1W+ThVXtcL+D57/+5fv7G/eX7HK+kn1PcJFlep
8tp/Zg9NjmlvaA8rj6fyGC0Owr8HSL10zWs0P6D0HvXmleeN62ud1zi/4lo8
Ni42jud8NE41P9D0aJXFBdTDxcv1PQHfWzx69RPIX9Y+Xlfrztf1D7aX87R+
t/Xyyg97yvn1nYT1g3E29ZnFmyjXprcsjsH5s+de40yW3/rK/1/XuXe851EP
77g4ihxt9at4P+2F6QnTP/Q/rvuJ1r6W1/397e+XW765rTvZ/j+M91s+ve2H
v/Ian9/5cXz9XfePcfj8u5DX795o91jftaP2MbJxNHmgn1d6pb4rNL1KO2jz
2PxeXm9+MfnXeJ/vfeXHr/n5jPMzr2f3Uz9y/cD41Di7+N/6r3i94g6W31Pv
2+/GyaaHqa/Z75U/ZXmfVm87/3Q9o+TR5LB4n3q88ioZnzF9zTyf4vza73Kl
6bfyJ2q/A9Pz+53lrq88x+v30RYXtXHmeXK88afZex5fOd94utpr8UDzI4rL
q73ka/MrWB8bD8434yezU9d22P273vjQ+pPPrfGq3/lc9kfFi0wfWpyc9bZ4
s3GC2Tezh2bXKi+UfE15ucZf2O/X+JrZH+oL1qd4v+IXxnvkbVsfpX5lnMX0
MMuneeWWT2TPp73bse0fx78Hybg/S/L97v8Yhz/od3A7v+uN99k++kvkfVsv
uebr1zqkxWuMq42Dik9t3nCesOS8sfrs99fzn/vzMJ+H8X3yJ/UK9ZHxfuWd
1PexpkdY2n32XLu/uJfjQLth3zW96mNfZ9k4lf905Xazb/a7+TfG8eQa44qy
5/U9jpWMl0yfkLctblN6nvk39CMYx7/uX7CS9a78x11f8Y7iMIuXbrzL7zN9
ZLxJO8/fjXfN/hcXVDzZuPEpn9vz7XzVz+yNcZL1f/lZ5NhrufqZH2Dt5Pny
0672m7xfnE/5rjgK+6n8HbbPuL/ihLSfi/sw7mYcwfnJ+pdfRT1S9tb4g+0r
vWH+KOtpcWCLH9n+LpZPU+vHppdXMj7F/jX7ZfUi57O+tFPcp+5v/vpPD/y/
30tyv8Xzx/PmB+z3lbOLZgftO15bn7b9lypOwNK+9zD9X/rEvjvd/CS/Wd7I
lW+Lz1a+xrk/+X3lx/t//Xb8O83nYTssfl55LnV9laaXn/ZT+VfURxzn0s8c
19fx//w+mpz/ug7z1R+qvFOzY7RzVzkz3mdZfGP7K5CvTE8y3k99SY6/llfe
t/vmV6w0rqddMLtS8X7ak4ojlX4zvqTcPJUL2nvjTvIiebKuLz4oPjc/1fqp
/Kfq//I3jPONh8wuVb+TO2s82E88rvbZ78WdV95n/RmPobxSnstvLf12XYcw
f6zm24+/w/uXL3aecX6O8+phfG/tsXhYcYvpCZ4v/5T9zXWVWhcm7/N36nvT
43adxeMZt17Jelj83upj58fb5PhxPrnd4v38nf4D+Z7x/NXH1ruN9y0Pivxw
jb+sJE+UfqOcch6O1zYfV/4VuHll5XGQq42fycGWRzeO/DFfju8/83jIpbve
OJR6wPjTuN308ZVP+Z7yR5iXxPrY+6z/K5+I/c91lP1O7mc+prX/ymW0K1ba
9bSLFj+iXbx+Z2V5GBXnr/gH9aTFZfgcnmde/dWvMH+i1mt53vJF6+9ZVdx2
41nzruSgfr/yvvEl+Zr1J88Yd5o/YVxfvFH9bXLP+lt/sX+N863/eb1xvvk7
HAfaZ5Y2j9/Nq7Xryo+z8S35Ynn13+o6vmfjxXnG8bR4Fe0Pvw+kvFS9/7wf
4PvzWN4+23OVU5uPla9nf6/L8u2pzy3ew2PT79Trtl6986s34/nM1zc7Rr4e
f1scnnH8lcb59Btqv2nLK1o9WV/2O/WK8b75zZQf2gXOd56n/80468pxGrn+
lee3/83vvvD16++/KWfb90XGyav37mM96/27bv6H5ZcYJ+/9xuGsJ/WC6Qnq
v/retr67ZT6ktZfcb++3uLzJCTmf/h7HuXjM+nPnzW8w/4HP4/wwO2n2staP
K3/P/i6vcbGdr787aHGb0rssza+4/l3x8nfq74vbuGwcOa84Xzj+NV+pf1mW
vBR/kecol8Xhxrl8r/kZT/PXKfdVD7Nbxk82LmbHzO+6tp/9e80ns3Exbqvv
9aq/r2XdV+0rf9vqt343/b3zxdUVT9t423xgvahnzZ5a3Kz8VZPDmm9WmpxY
XqjF/eu7MFvnrXiM2anar2LPJy8zf4fHxuHj+I/+/cN33rfveXdcf69+5/m7
/R16Wx+xOBZ5gfqT9sv04srSu7yP/Do++zHX/+23dn7+I1+Puxn3Ld6v71BX
rn6vXPmV81caf5JDLf7M+Ux/wOIZZces3RbfN87nc8j31/utXdb/5PzK27d4
iv1uepfzgf1efE9es7iq+c3Ga4zHXr/DqfVbi+dYPPwaDzJuZxye9bDvxorz
aa8qX79+Z5zR5pv5geZfUk6u8dOKsxj3mn42eaz7rbS4d8VH+X7jq2o3f79y
PUveZ5xl/Ffc+5TL+T7rz3ruz8bdr36C7fNynWd8fsmnzUfaubJDO198U+Ng
9mf2in6G+f/kLsqvySHlgfq59nuYXq3vwOx7sCrLHtj76js05sPseM+nH8B6
7fy4nDzPdQDbX9r2/yHPG+fTTyHf0+5x3zjzk1dO/pjPViXl1riJceFxsX0H
uzx5cvZr/vzXfXGMBytfnlz+eh/XG77m8ex9LCvOwPwj40jrb+o3+/7Vxs36
hXxLvbrrruuTJS+87jXu7/lbtj7BfrD+KLndfbT77Acblx2bvTCe47HdZ/aR
PMX3GB9Qj1KvX/U/7YvZB+N0y0uy+hhfPM1vrpIcafEQkyuz6zaelodTvF3+
Cd9f67a1HlxyzOezX/letrc41Pzkq1/CeW3XWT1NXlaPK8+Xf8d5XvOe8794
//p+4/2dN7/G4hCUA8sDM94nZzBuud+pryk3HOen/t3Om79v8X5yAO0J22vj
w9/Lz376d7ZsH5/i9/H0NQ+z9L7liY6T6+828nicTc5nWX8X0vwN/n7lffab
xcNo70yvmj/M0taj6CdU3gY5n7xP7jfe/7E/wHygz+9mV1pekZXMHzfu3/WM
7xt/Wn780zwe0yO8b+PN8ap4PP0CG9fK/zf/xd5T+UIsLU+q1jV2Pe2G6V32
j40X22f8Z1xF7iCP8HezQ8aPFf8nN1MP037zvHG9xd0tDlnrE5a3RL1n30NU
Hq5xaY2HlTbuHEeOm11vHFvvN3+jONS43fjiKa+S080/NX/N/DHqS/Z33cf5
aRxVcmz1fpc3OU6cj0/XCywuYOsFladT42b+AOetrQOtf8yeWNxpetjmBX+n
PFdcwN5r6+m0Y2Yvym5QD5geYT/XepCNr+XVWB6/5XmaneD3uXyevYc8PV5n
XN6+r/3op888/fH6OHylfZdQ+1SwJOfz+eR+84NsHpWeI99UvLQ4bLw2Hh4f
j8t/HN//+n2u+Qc8zzj/7ic/ku9XP76v3lucT3tj+sn0FO1zPY/3rSx/guPN
uEONN9eHTJ9au01eivvL3zE/xurJ/jM/4vre0tvGZcZzZvdsXtN+WzyOvxuf
8Hx9L2D5P5V3Y35B+Q3v5jfwPuMq62fa6au9JleanTb+Z5yS9XzKjyyNdxk/
5nvI1dafxa+1HlPvL//Z5pfF98tPtHoaN1W+jfWnzcen3wVU/PbKfzU+5SeZ
HjA5pH62eVfz0uwR7695unbxPrMftF9mp/icvX/nKc+UD4t31Phf89Dq7zuS
V8nn432Wlr9Jv4HxfXL0eJ3x9fkBlo9vf1+Xcf3if3K/7RdUv5P3r9+hUd9T
DxrvWz4a4+jks/Ez+Zq8b5xvnL7fWZLTd5714/V2f+WV2Pd6pYeMh8t/N31i
esLGlddZufstf596iu3j8/j+8itNvuw6q5fp36u/ZP1ceUz83cafxxa3MXmg
HeJ9ZYeNw8o+G39XPO9pHMm4wvKEy0+hXmT/XPm1uJ/je+VwGwcrr7xlcVPK
C9tn9TXeNvlh+4rnrT3lD5UeuvK+1bfWG4p3Sy6tvVdevs6H+v7f8mpsvnA8
rN5X/6e4heNZxyUXpv9NrlmanWFp8f2y4zUPbZ3nmmdV/uz1ey7yOffV+eUb
35Jra59PcrXlxxSXW36NrQNwn33zI1ZWu8xf4e/0dyyP9fq9jtkf4xzjMnIX
ufzK++Rzct7TODyfyzwdritYafF8zleLG5A7aWdsPltcY9dTb1l+Dn8vTjU9
SX1m11Wc4ypX9PfY7/QDyfuVr3Rt97t+gz23+pE8b+POctfRXph9KH56Gv8x
jr6uF1S8kPrNnmt5OcVVxY81DuQHu4/8YH6IcVPtc3LlS/KT+Y/Fc/x97yv/
ofrd+Nn4nO3geBjf2/v5/BqXq//F95s/do2jW17vdX8Wmy+sL+Xd7FSNH+dz
7S/C/r7OP4vDWRzG5ivrYe3Ze8j1lhdb3x1Qf1/l7939CkpPG9/bd1rkVuPb
nSefV7nruf/lzl/z7fc7+Z77bY73LV+/vr9lyfvZX7aPRo1vxQ2o5zifjXtW
Wr5H8fo1vm/rCsbxH+e/fue745Xkfb6fJf2QcebqVZxpvLDz1v9XP4A8T3/E
eJ/1tjx3i2da3MT4lnK09xvvmx9p6y/ll707PsUTjOO8y/vkE+tn1sfuN34p
nrvqDePmp9zIkvdXHMp4uOL7Vi9yq3FG8aWNg/lFT7mdHMT+snaaXPA5PC4u
pDzyuVfeZj9YfVnuPZuHO7Z6sl0lh1feL//S/F3zW83P434szOs1PrB9u43z
bVxt/Kw/rT1X/jS5YT3Lzljcq+IlNg/M/lp+7JX32d8sTZ7se6v6Hpbfh658
d99mi2cz3m48bnk74+/xeH2nu5Lx9r2P8X0r917zJ1gy/s/zq8f6zfwoy9+5
rjOavjL9Tzkkt1CeyVvkNsufWcn7Le67543byf2vXP8ryr/X9xs/sl723Wpx
X9lF6hfjDeozq0eV9Z2wcX5xLOMqfI99x0z/yvzE8s82Xk/H5+q/UO4pF7YP
A/uP75s8mP7nsXGecbjF5Uov8LmWr2HyWpy20uw77W3Fua/xUuM7qx/HpdpX
/k/xvf1+1evml5lcUM7IF3a/zSOTA+u3qz9pz7eS9SpeNbm388ZfV3/V5HHH
lpdt6/z2PZ/5GdaeGh/zL00ua15evzs23if3095c413Ur9YecsDsju3fYfEm
0+81j0wejPeL05kXZPeZv8C8/l++cbrl09R3t5a3s98Z5995vs++qyWn13e/
O1/+hXH/3mv5O/W927vr5RUvMrtMO7eSfFPfAVg53iZ3G3/zeub50A+w9QXy
vvH99btNzuuKA9O+mv1lyefb8bUePDbe4XNZL8vXsXUH28fA/MXxvckLeb/6
h+2l3rVxKHti8SPqe3sf56P9Xhxn3GP2nM8xe25ca/145f3Kd7G4uPkFxkHU
e+Wnc/ytH9k+40aLY1acuLi+1jVqHIo3+BzrH/aflRx/41DKF+9fe81eXTne
5NnaT/6ycSp+5fuufqHlX/A7WD7P6mP1q/YYF3M+Vh5TjbvJ3eav2eldX/Gu
ldYPr/PM95Eo3jf7XPOI/cD+rrx7+zu6jPOT48mh3Off/h7uL3985f7Kw6ly
3L2S5/k++07A6mf+ib2PfG/cv/fwOwfy/tUfN71QesL85dJ7nD+U0/KnuS6w
kpy/kvzI+UY/wPbzGS+SG/k8+in2Xs5LHhsfF3+++zv5k+NipfHr2kE7x3qY
3qW+s3Uh9rPJAznfeL/8HurP1d/8BGsnz1s77friSeMNK40/jbfqfcZBtk5g
7zM7Rv1leb3FP6yX8a9xI+tlv9Pesl7G+1ZPPre4tOKuxWPsB/MfOS/MHhh3
mb3geePlan/5JeaP2njYe2xeGg9SHio/xdpt/kTlaTNOaO2095h8X7mj5iH7
hflI9VyTP7M7K6n/y66afL76JZ92y+KcZU9M35h8mL7n9bafJuXD1p923dP8
oL2nuJr8bH93dtzM+80fIF+vXH12bOsQ5HSrb+X7WD2Y92R/d7i+u6nvca55
cSVXtAPGLVfeJ1/W+oDF22tfIfMryJnmp/N+q7/1R/Gn9dc1Xs/38Hz5HxtX
03+8bsc2XnZc3x1YnN/GkfrW/JwrF5g+Lr6vvCX2J59vXMzxs3obj9v11h82
3lZWPc3PMA6kviKXkAfMXzD+tXqR74wnef2eS72761m/4lArOW6sn+nt4ifj
Oztf/mPJS/kH1s7ywzhu1Q+VF8b6FB+bv0q7bfLL51u9LS5e8m+8XfWxdlX+
+PqF8WLjFstTtvlgeqs44hrH2fHG48ft/vz7PoxLXvnA5L38UM5TyivHrfY3
5ncdXCfi+Nj+bRvn8Sw52+Lg+33Xm7/A+1hanJ7v57H5JXw+vzdeWX7Lnst8
Hvpfxvu0H5SLn53HJmdlx00Pk1OLDyueb/PZyuJS6gl7b+kLzufqD+P42l+n
8ov4vrKTVn87/3Tdhn6WrZ8Y3/P66dmV1/abftzxdXzY/vJD6zsCe5/J05W3
rvfVeBfHrTRepH3je8lnT/nyys1Wv5oHT+PFVr8r55veZb35vHefy+dd5cz8
V6sX27F+tnqbX1tyWPFq2sWqZ/WL2VWz27WOVeNo/hvPm393fS79I9ufy+L1
9E+KO63e7I+yY9TPxQ9lx9lO4w7jfNa39Kq1u/Q75XX3lX/IfKoaH8sTGscy
jk3uZ7nfLb+d/G88Tv42P+C6j075Dcb7fC/367e/S29/z2bjMHnYuFHPmV2i
vnua9/mUPyjvxv1Wkvts3cxKvq/yyCvfjvO2fje9ZBxp644WT7Z6FwdX+/he
PtfqcR0/+gcWJ6l1HHu+tdvk0/yZsidX+TP/wcaj5MX8QWtvzU8b7+LKK9cZ
71LPlB/CsvST/c7xNH+seJvcZJx55Vrrv+JN9r+Nt/1u4288z/4vf8vGwfrV
1heelux/+z5iv1s/m1zY+Jq9vXK9tbv6y9pt8874j1xg+/Tbc37Myf2dsXGI
yXfp52s80OR+733tl/47kLuf85jz2eTc9GLpd8ol5a/0Lq+z/Z4Y1+d3Acbt
v4CbjfftO+Ndb5y/cu9Zafv/WFnXl1/A0ni//GPLv7J5bfaq5ML0hdmL4hbj
neJv4/GnvFXnbf4aZ1T77PyV843n7D0cF+qd4jw+jxxveq3WRSoecv1+gu8t
7q/vaW08/1JyxHrVeJqclf9c8mFyZ+fteze+3/iRx8YpxS3FzcbHVz/B5imv
s3pa/YpXrR3VL2yn8WY93/iV8mv9VhxZ/Er+N/kxP+Jql6x/+H7jHrNvlOtq
b43H1U8yu2tyUfa+xo31vdaLzzf/qvaJ5/XmZ5Cnax326Xrr3vvKt//yxf5Y
/IbyY+NYZdkFG3eOm+V37z72t33/a/k85HyW417GvXmdxb8r/37lfrd9enbM
cr/z/vo7v3b9nks/5inv299R5Hhd7W3ZDdOrtB/v5i/U9WavbX5f463FcVaf
/W7cbPPU3lu8b/b3KccX73Acr/GMWj8xLq+4v/H+dZyt39l+63eOC59n68KU
A9ol88tsnE2vX+XY7N51naD6r+pt/H/VQ+SMihPz+VeOM54yPjSOor2lfeXv
1h/GoawP32PvY7vZjtIrbK/xIuO9rFf5M1f/6On95X9YP5sfx3ZZ3Mz8gHp+
yTH1E+ex9QfrY+N8nZfkSfaPyUntz2lyw/pZf1x53+w322V22/Sl6ZOrXS79
VXJvcmi8b3prJTnf4v3M9yHXM95tJf0L+gu/gL9X2t/Z3e/kfKvffi/et/2A
LG/f8njsu/yKx5d+MbkpP5PXGS/ZfLrak6udLt6vepS+NM4pXjbeZ8n3X3nf
9NvVT7F2lj9i/WrcbXF8i/8bb1t/XOXM+p/9SA7i9SaX5CU+j/Xg9db/JtfX
cavxvNo94+OSL7OHV742fWPjUlxe9aD+Mf427qUdJS8Ux5SetfZa/YoLaN+N
O698X7xf73nKxTXufA65sq43jrfS2lt+RsXlNo6cV5WfQjm1ssbDxtW+By5/
z/yB6j/jg7LvT/MtaQdWWr6o6T/TM2Wnzd80/jE/ofw0k3+OB8eF+0IVr/J7
Xstvsb/3tWPLt684PK+3vP69x95Pnufza93C/CR+J1F6kOeNS8re2e8mj1d5
N/m3+EzZu+Ju1qPs3u63eEDxsc23p+1ava/fE5SfcO1H01/1Pta34vblFxjX
13iX/F2f81Sea/7Y+2t+PW1X+e12HTm45mnFDSj/bIflC1k939Vf1h+sT3Fz
8a9xkfG0XW/cVdxeftO7XGecV9xbXEH7xP6x61l/yi3lzuS28sSv7TAesr9/
Y36glcZ5xq9rP+2Z2T/rX9bP+J55B5SL+nu6T/3D8o+e2oeKe7A/X+Xnax5P
cUHx/lV/sb3GCeYvXPmx5k39XXP7ToP+Af0ErgswT+ivvnG2/R1flruP8XrL
K+J1Vg/6H1e/oeL6lPPSP9SDxtVmJ4tHLF5n8+2pPb9ysdn9vZ/z2eS/4kbW
L3a++KHsL/vZ4qXXkuNicWLjfetf3vd034LKByo9XPJ15X1et/dNn9t+bjUu
Vzm168xO2Dg89Z+vdt/k+cqd1V6TU/ajcTt5yOZj6RH2yzVebHxUesX61/RC
8b/pUXuO8TU51trP8X/qR/A5fI893/xKk0fWg3aVPL7S+pn9Z/ko17i2xfPM
DpFXKb+7j/OA77U4fPFb5V+Q2yo/ofqp5t1Ks5tP16N5HeWz8iFNzxhH2ftM
L5k+M7ngfexXm//l5+361WPXWz66fWdqvG/xfnL6uHzlR7s9/548z9L20TR/
ge/d8erL/B3OI/OXq6T+pLxceds45prna883vUy9Vvbt+nzOP+MbO2/21+px
9SM4r8xuF98Xr7Kcnvqox9e/R2v+EeXJuKzyw+09bM81/4ftNg43P6D689rv
5hdxPth9Nu41T+t3mxeUR4uz2d+/LB4pvWPto9zxeXyPzU+zb7RPNj7F/WYf
TR+bHqjx3HXcf636uXjf7HnZE9NzxhXW/1Xa+69+D683nud7irspB5wn13lk
/V52hqXpueI5k1vrL/I+OeYat6x93ytfueYX7b6tE/P7sFrH//F87P03bT4a
Z/H+4iuzJ4yTmH4x/Ub5oDxQrsrP5e+UC8qNcf5Kfg8wvmac/RfhffK6fQ9g
19HvYL1sXtg+VObv2rwte2e8/FR+rv6o2S3TZ8X/xb/WnrI/ZrctDlf9b+Ng
7a9jG6+Kd9s47Zj6ipxN/4B5F8bZJT9X7q/vfeevrB3m75getvaWH3C1u8az
13lo86i43/qf1xu3mH62uMzVH2f9rP/qO/nyY65+UPVvzW+bt6YnivdNb3G8
eP7K+cV51h7qQytLz1l7KH/v+ktVL77H9iex91s9zD5w/hQHWX3Knl/nRY0r
21t5Gdf9w4tniguvHGRyYfF3xr2u+3SsP81+XvW22Q3jGbuP9rE43/Sp6QnK
C/uf47XznBfF+5YvU+tI5O7x+S9//DHn7/yus+8C6Bdc99tZaXlKJb/Wz6Xf
ivfLn6T/aftgXv3Zsj9P+absNuOErA/nr+nB0pc2Hk/9C7MrZt+Lr4uzLe+G
64B8jj33Z+tR3/VSDi0uY+9ZeywOVP5LyaXF2a7z4WlZ9r/8E95n9rb0lM0X
q5f179Ve1nmzm3Y/51fpKRuHikPyvuLY0it1v9nr0m/sB2u/6alqZ+nT6m/+
bvbNyt3HOCWfV/LG3zluxrkcB847G3eTTyv5Pt5Pfub1ln9DPrP9U+q7zdqH
s/wEliZnxus7X/uwGffb8TUOaXqP3MLxNo6zdXnTj1d9wfMmL+T8vdf8Wo6z
7edpnM/4OTnf/s4VS/qr9B/se1uL65P3a15zfpt9Nj1n8lV6y+6/cp3ZieJf
6l2zb8ZLNi+q/Txvdqj83pXF43x/8VvZmyvvmx5ifINx8toHhxx35S+Lg7O8
/r2FWhcw/r7q8yuP2jibfTA5KH1bPHTlWv7O95ZeL+4qvWRczvlY+onyWvvj
2bjzPVdeNS6+cq5db7+bfr3qqdLLV7+nnrPfy098Kme8r/wXnieP87l8ntlJ
m6/X9pbfbO9l//K51l8cD9tnxfb9Js+Tk4r7K4+h/INaFyFvsiw9afrB7FXp
s7rf9NRTfWg8UPxg88/k4zqfqRcs/mHj/1TeKs7P/X8sP8j2DzW5Zh4SrzP5
pR4veTTurfvq/ivvUN+RF2z8rbTrfpb3a36YHn3XbvK4+tG4jxxtPGIcfi2N
93f+4z3/7YsfsJJye+W6KqkPr/H7iuuzn+o7FF5XfkrNO+ptlvU75fM6byx+
SftXnFXyX/PL+uPan5ynZnertPE3njOevY4T+8n0C/vxGn976k/Ye62dJR92
v+n34mQrn+pfXmf9Y/r/Ou57jvkt+932lbf+sfqU/PA+4zc+h7/bd5PXY4vz
W7y+8vsrH4jft1z9ZuqZK9eXniu7Z/rn6l9QL5r+ZL3WbuNu9r/54ZyX5c9S
Tp+OP+Polkdm++fY+gB/J+/TH7B9haq075uL83ls9px6zOymPbfkeu8l/3H8
TZ+bnjJ7U3rO7A3rY/1jerVKq7f5Eza+Ft+5cpLpGcuX535itp8O96Uprn/K
97VP0JX3r/mXPLb5ce3n8t+ect7VzlvcxMriIcqf2UnjTJN763eTo42bzdPV
g/qJ9Sj9yfEv/8Lms/UDOfBdrqN9ph41P6G43OTP+tt41ux/6WmTz6u9sH4y
e2XjtvOsz9WPYn0tfn3dj9L67+m8t/rsOZQrluR9461aB6h8ntrP8bpfUO1b
XnJX9tb4x+Y/9dl1vcB+L31Ku1nyv3abfFo+CvvX9FR9j2rvtb/jSx7n+Nt+
nYzv2/3298LqO2Lb58vWR9ZPxUs1fuUPmN4qeS39ufryfuOTn9Vv1+tM31FO
yy5au2gvzA83HrH5Z7xfHM/37frKeyn9YnJoHGXPv+o7ay/5n37Kle9t/lj5
lCdN7ktun9pzk3cra55d+bOuY//YOJY9q3GpcS17baXNW+PFKq1/rb28b+dr
XMufvMq31f/KsdTvrGfZAZPnq70o+Sx7YRxj42N25un+nNVO2iu+t/is/DTW
0+KlxUHX/Xne5X3ex/wJ4wXOI/u99IfNH+Oisn88NnvO9+0+2l37fth4w8aB
x+R4kytbx7J9qa7v3zjbe3g9OZ7ySb+i8tJqHcv4/qqXaC93nfmllAfqB9NT
PC67aXbC5sPey3G/fpdj+8SZnrZ1yevzym6zfna99d/KXce4S3FB8TTlxs5T
ruw7f8pT6cPdZ/uVXfNjLJ4/zv9432e+UT2vuMb0eOl76s+yo1e7X/t2VPnU
X7hyiM0/yofpB5sP1q81r652mL/X+4ufr1xt89lKi0MaT5s+s/EwP6T8xmve
tfG9zRNymJVX+bZx+ln/2PR8zVeze9f5xXbxfWaHLK5fdtLyEK58X3k9th5g
cd3yH2x/mGq/yQt53eyIxZWM48njtLP8/RqHq/fyPsrRU7tk+qfi+WYvzF4a
r7H+Np58bsXxbd/M6/qUzWv7vsTkr7jE+q3699pv7/JF6UGzFyUndp3pw5JD
Xs92GbdZHOUaT3sa/3tacv4bPzOPh/xMHuJ7qH+YB8Q8HcvL5++Vp1N/h5ec
Rzm1ft959r+1n/Oz9GDFt65xr9JvjGMUn1znoc1vcqb1L+XbOJzjUbxczzX+
s3i6cX210+IEJT98julVk6/ixJoHvM6eZ/JjetDmh3Gz8XjxcPkndn09z+bZ
1f6VPeJ95u/Ze6xeJv8m17Sv9r2k5fNYfo/FecsvqHyhsuMcP2t32VvjcIuv
s7R952yfOnvP1b8o3jf9YvPN5JxyU35BzTu778qn9X7zZ+kHmB00fq14HOXv
yvtmz2r8rJ6lr/hc9iPraeNUdoGcc/2+52qHSu/auJa/ZuNb3HHlFZbUQ9fS
4hQWD+D7qGfq+dRzlpdfv9v1rE/5V1c9z3Gw9tv15ndz/pg9NPmzv7PN9lAu
Le5Kf4L8yHqbPr5ymMWZTb7X3+TT8htsXPic4qPSr9fyqr/r/TUOVztqcmN2
ydpx5WO2p/wYsw/FuyWXdt9VvlnafP1ZHnna/2WXKHfX/jfutvjnNX5vcfvi
+3f38Tf9Y/rD7JrF5a/r1FzvtrL+PqX5EeZXGP+vvcabZievcmR6sPSpPaf0
b80Lzr9388au8S/Knc1nm/dm56rfqZ/qe/myA0/t/FUvW//W3ykwfVX8dC0Z
H6112BqnivsZF1z5yPz8ijuYnuBz9z7Tl9SH1GMVr7C4CdtFfjC/q+JZV26k
HeD7eTx5qPVpyrcdW/zs6geXXjN/ne25xg2sf20+lL9rHFxl2ZXiYKuv+SEl
f+WXUs6Kr81+FB+Wnar+seut/3dcPMt5XHzO/ra8Dv5u7al1gNovnvah/KSS
v2o/z1+5pPjG9M7P8j7zf+w5Zq9Lz1k+mfHmu7zP+PzVrtEe2nr67q/3PfUP
yo6Xnqo4hMnxVQ/a/RZ/Wcn2FF9f/frKC2E9y+9k+4oPy46Vvqp1CbOHNs9K
T9r4Gedfv/MvPWXxgFo/MD1uz6X9Kj7n+JndsXlSvGN6yvRV8Tn1hvkZFv94
N45h+2RSL1AOKWfsR9P/1F+lr2y8aE/Lv7brrHxqd21dvuTZ9KzxiOmna7zC
7ArtZe2fydLGnfW/2qfihmp/PY+8Ye8xP+wa97zaQeOsWne1eWbzi/PZ7FvN
a6sHf3/K+zavLb5k9rbyUK/cdPXTSh7q+0azv5b/UHkRpp/se8eK31m7rnJk
dpPzkPbt4/n/dI6zGYfTLvJ5O7/3reR5s+flB6x91PN2/sqjxYE7Lr3JcaJ9
WGntseeV/rnaAXv+9XllD63/yUHX/re8laff0dd6m+ndq/6o73OKY+o99p3/
7re/n8D+/lm5uMpH8Sv1l+mla1zA4u21fkj9SH1EvVTrpZP/67y92k+WpafK
jzd5qriB+b0m97VezuP6bt3kqfwd3n/leuo143jKL/U67XPxful/+516k+2/
cqrJp/Wb1b/0uo0Pn1e8z+dZ3PVpPljpvepH64ernrX5bPU1/nz3O8ennMF5
V3rE2lPxNcujKXtbXG8l9VTFVaufKSfW7+tX6pGK988+lT0s+2pxsB1/1O8f
v+9LYeWu4/Pq/eRJi+dVXMX4uvil/K2yEywtvmpx0tIrJgesnz2/7KDZrSqt
f8pOXf1lixNe86A434z3r/5Fxevt2PZjWn2Mj9hei4uaHak4TNkBs9csSz45
r8j9xvVcDzS9UPmEtZ9Q+QHGe5N3k7PiC+Olsv88T/tSca+yk2U3r/mylRdn
+q740ziW15veMo43+2P60eSh5o/Jwept42zxSOPbp/qhOHm/0248bbfx7nW9
0+Se88Y4lO2gHis5LP/G5qeN/1UPm320uNRVDsoftf681sfsYe1L8u76ZHE+
91U3u1z62fybku/Sf6ZfaA/3u61zW0k+/6jPP33n9x2z3O+8jn4D60l7fuUD
K42ri1Ovep7PZ/2Kl3kf7Y5df23PlffN7ym7dn0/9f7k+Br34TypfHped/UD
iqdr/16LC1zjEKa3an8Ba89Vz5idt7hR2Q/qqVoXqvlnckk7zPKp3rB5a36H
XV/2kf3Nsvim/DrjhZo/tLtXeX933bzsHeWixr/03N6zY+pZHpd+NH+B9SU/
2rwk39v1xeHX9xR3sz5X/uP8v/oPV96/5oFZ3L/4mfUsu2fjZf4G+439RXmp
8Sk7Zjxt9sTsp9Wf1z9d9658wafxt/JzzB8x/i8/yfRixRfN7lKeqF/MfhlX
W7yr8nAY1y/O5/3X/TEYPzP7WvFA08dWsp/ot1POr/5EcTPvL3/H2md2rsqy
Y+++v34vjqx8gcovuObZGQcxf4YcdH1v8RrfX39fwezcdd3xqg/LX7J+LPtv
cnVddytOsvlKXlxJvWL6tez+SrPnpu+Ny9ifV35YPfi8a5xr5TU//7rvBe1n
cSrlxY6Lc8lP5PG1l34i5al4t/Qq63eNB9q8M+4qPiz+tzi2vaf8Afaf8azx
I+XeeK34jXH8K3+X/Su5sPlq85zzmO8xfWjz/bpOZ/1XfpXdd/37oGbHpndW
2nXF2zXfbF5V3N78nJ/1LytetZJcTR6/5qsa9/N8lbafdq0rPN1XiPH89U/F
8ew5tP+cn8W1xQV2HznD9Ax/N7/J9BOPzV8yPir/wvQ/9eE1fm5xR9v/1vSA
+dmWH1T5CaUn+R7aG+uHazz1ylvmN9k6OMfJuP6aJ2W8RH6bHJMHipuKe2q+
PvXTaz5YfcpPYkmepf3a+2jP+F6zd7Y/Re1nYXGv8tP5977NbtIOmtxw/K/c
Svk2jrLreZ89z/iS43FdRyk/sOSs5uu13ZzfnMdXDq5+vPJWcb/1H69nPdi+
q12nHF7rV3Fk03dmZ6rfrvaw/PXr+kutV5u/cM0DLHko/4DPtfdU3Gz1Nr1e
nG96qPi2eNzi75bPU9x+/Ts0rGftw8f6WJy/4uLG//X9gPWz8a1xwJUr1r76
vbi/yrqPv+/Y2m16yErOq+Ld+n7W1i2Nvyu/+Mr9ladQeQtmp40brZ/Yftu/
8/p3xStfp7i7rit99i4vlH1caX5A2XWbl8b71n7Ko9kvjj85hO8t+aEcPY1f
WXy+1okqnkf7auNr/qBdb/dzHKl3S48V79v4FScVjxiXlN4p3q/xvPbv9bq6
v3iu1n+fxrepF4wjTD/YPLR5UHGj63iZvinevK7zlX0z/XBdTzT5rOvMnpT/
+NT/Mf+s9NjVfhbn8zqzP8X75H77nu1n4/PXkty54/r7l8XBptfJ++Rc61f6
A8UN9bwr19d6BH+3vKjaD7XWFyiHxYHF+xbnL31e+QX73eKexfUV7zR+sXaW
fi4/4Kn+re+drn6N8Z2VJRe0q8Zj1NcmR/zdeIW/871Xrrffi/fNDll7TJ7K
vtV8s/4pe1vxVdb3yqtmv6lfOU7UuzZ/jFdNHq9yWX4oS5PDp7xPfXPN66u4
PuWn7jf5tn6064r3zU5YnKf2U7f9D7gOYHJGO2/tLPtWcZen8f7SL9afV+6/
cnnd97Px+uJ/a//Vf7L2mRyVPX3qr7EelFeON3n/Kaez3P31vGv83uL4V94l
79MOkF/Lfpt/UPbfjjf/ed7aw3rUPiKW78Tf2b/1d4ysP6x9V3tXnG/2zfQi
4/dlL40v7D3kfMvbr/VAtr/4j2XxUq2LXNdLKh+I/VbfMRUnlZ0iN1fc5sqz
vM54j/P16g/vvmvck/xg88b61+bXfq92l1969aestHlx9WNMz1z9QcqD2XWu
/5k8UP/Ze572b/FMcVTphad89nS9r/il9KDpRfZbcZfFZypebnFZ8z85/0se
bb6UfjY/1fSJ2WP2X8V9at2a8l7jU/bduLjG5+qHsh8ov/y94l/Xdf9rv9k8
YR4k7TG59+PYv5+95uc8PX/lfIvXV7yfHF/xOept2mmz28W/xvXmHxiXMx5v
fpX1q/lX5c+xPtYOi29UPKb45an/TD1p+p1xGitrXbjqUXr7yjMWNzJ7d/WP
isuu6998P59f41v62/wE41zzHyp+U/re9ITpn9JHNt5X/5n9sffQP7D3GpeV
P2byaH6JcYaNB8e91r2r/tZvfF/Z3fLLr/EO+gM2P0w+a/2k5hXbXe8pTrvm
QZg+KH/H5vmOK+5hcXvT5xUPsvHh/CUHXP0fW5cpeTWONX1hetHiXbZecl2H
uK4fX+Ws/M6yr1f+MPvPdXJy93W/4ad5STu2dQKzhx/24R++l+T/D/31dZ98
8w9o9971Byo/h/xqcWjj6+L9p9eT12nfzV/g71dOZ79f/aV3+5fja/115X7T
exXXqngNr+O+IaaXrnaV+vYa76g4mOlj4yrjfeN6s2/l71S+gPkN1g+1Dmp2
zextcVK998pF1J8cB/P3raT933OpR3i9ceyrPv+qdza/bZ7augr51NZXOA4m
z7y/+LLic8bz1l+878p1V/+i7Ej5Acavpkes357mTdR11Bu1nmnxDPKI6Zsd
V7zI1iH5HOtP20/9aXyo/NF37d7Vr7KyeLd4v+Sp7OpV31/zmMoPtflh7S//
2PwTfvdmHF95vk/j/ZUvUHpyHD/eJ99/tOu/fC/tuvH/R7/6977XOJjxc8Wv
zb4aX/M95j/Y+aofz5s9pn9UeVMrjd95HfOtVtb7Vj+2f+fLnpv9K74w3qe9
+ajPf9fyo1//9T/+W7f85/+R+vyaP1TPKfvJ+Wn9UNxEfU59ZPXkdwtX+2Hr
J2yH6SXTR8b3pb+v3Mj7KF9mx81OPPXj7XfjRLu++Nzmn/Evn1t8z3qWH2/y
zHEvP4zPs/bw/bz/yjX1/pKTa3utvpU3aHFQzntyrO2jUvFYvt/imcbrNj41
H3k/++/6vdQ1bmF63OIRJVclF9SXtT5b41T8ynoXR5afaHHlazufrh8Z/17X
mShvZV9sfpicFb9Ufa2e747Tj9vz999Lcv3Kp7zP+D/jS2bvWF65nzxtHG/H
xvV8zzWubjxe9avvIuhH8bxdx+trfWal8UdxhHEMr7d4g8l38f74fsfj/JVm
Hyy+Q7vG9133yTN7UfrIeN+4o7i87L3F1+09tX76VM+y36p9Zl+v/Wv2kNeT
j8uPN943/idvm19h1+/9FjdePxh/2Xs5j7kOwfvZr+ZX1Hw3bqjn2vPK7hr3
mVxTPs3OF7+YfijeN+7gseUXWPzROLfi+dYe0+/sL8oz5x3Hf8fFo0/1s/WT
5S+avij9Z/Plms9i9TN9XHrO9KzVw+LL9MfNz73OD+vP6/rHVe+bnbM8MJMH
m/9Vv6uduvaDtWscX9xfcf5rfN/i/MbZxsN7zuyOPd+42vwIK209gVzOfii/
oNq9elr+TcX1yfesn60XmF+yY9ptOy7/wOwk5bXW1cjjtg8D+X/l/ISVxvf/
9f/8h////39+ec9VT9t8Ls43zuN1Zhf5/qqf2XPj9mpXPdfstPkBfI7FAcsu
VzzE+HXzwOIGnC/0AzjfOa94fPWzS47MfnAelp02v55+T/k5fM/Vzll7LF5Y
+Qbm91fcdfUwOTJeMH1m/Gl5E9Q/te9McX4995qvYXqDclbnTf6K667+XZXv
tq/0ss2za7zoaVzfzps/fV3ntXXdshPVrzbvrV32vKu8Vvuu69VVP/u9xtH8
qFoH4vuK9+38Nd5PnjT+J5/yOuNS8rBxs/kNV943Ll+5erEfrn6P1cfyeKp/
nnI+/RP6U+QNs+fkEeMUi+OwLHmmXSSnj+d5PK4nz+93+hEr97utY5feon6l
XbjmY/B51q+0I6bPbP2Beql4sNZli/NrnMkrOy6/8cr713GavHOekt+Nc60k
N/M9ti7G8Sh+tnG9cpjpAepdto/9UZxnfstV3ssOltxaHI/vtflf6wXXOLPF
Lyy+X3F3m+/GsdTH1+80ef+V92t8bB3oGh+4xvtLLkzPWNzb9G2tN9n1fL8d
X+Mypo+v6wg23jYuxcUmJ+Y/VTve5fPiduvPkuNanys9fl2fWjleN75fSa7n
8XiSx+NI8qfxZcX/K/5seTfF8fV75evsvLXT+Jz3sf28rvJ8WNZ1fD7ttvHI
rrP4vsX5VzIOa1x1nT+c3xXvJ+evZHzPjm2fT7MDxi3GMcWF5M6dN/t37bcr
j5s+rPWN0nvX+NbTuJf5YSzpP3E8qBc4X65xBI4bj3kd55vNuys3FY+V/2kc
b/1gfj/fw/pTL5jfa3qiOOW6vsV5zPqaXNZ+Atd8e+odXneNV9e6gc1D8gXf
W9xp/vM1flx64hq/N//LnvPu+4sXK65ierTk0+TY+N30YPUj4yyct9bOqq/N
ez63+N2uu9rHp2X5HeXXm76wcTE5ua3bfXL+hx77/feSvD+ONd5n+ZQ3r/vI
zK7Qvli+zNVvoP2y+yxeb/F24336W7YuwvbRr9g4cDyqnizZXuORHdP+Gxfw
fHEJ5Zz+gc2Pa37PzjP+T+63Y64DWF686S9bz7jyvvEW779ykfFy2ZWrHaO+
Mt4wO2/xreKdig+WPaDcUi/YsZUcr7qO77f5Zbxc/FDyaefJ9yunR6aHpqf4
/Ra5fedZf5YVJ776OdfyGtezeL59J/QhL/+qHG959xbnN//Z9BP9BepJ+07q
abzU4hyVj1XxAdqBipfW97wlJ/b9RHG56b16n+kpu67iHNd16LIHte5q9Xoq
J5QLm88VXzK5ueoP88Oe+nXXdSPKafkvT9ejLK5vvP/Kpb//zpXF8Sxt/Zt2
g7xL+8K4fuXH8/3F+yzLv2C9q1+Mz81PIOfbeeN99hs5xvqX/WDnjUsqjsd5
Rl4xvVn2khxPXl9pfE9/YHaa59/lfeM3yqOV1/wf03MVz6fetvjNlYssXmZ6
0zim7HjZ69r/7DpuT+P2V3+uOL+4yXjD4rEsLb6299X3RKbXGO833jf9cNUf
T7m+4pjFE/Y8iz8U71v8odYXLc+m1gX4HvMP3t2/hqWNs83/6747tS5i/oyt
c1zjEjX/zD95mqdV8eCnXF+8XXxNOSx9buNc7y9/xOyV9XvFN65xg6d618bV
1svKrpa/wPpOLzMv3/L0yfuM4xinGu/b+je52Xh69tSee/UvLF5H/i2+53Hx
N4+fXl/f61a/X/0c8sj6x7jjqudtHhuPXuP65PXZV/I6eZ/nef2+1+V3u9d9
PahfjfeLD4sDqcfY/xWPKH3zs/dZ3MX0avGM2cOy6xXfr/UX0xN23uLblp/z
lPOv9rHsfskT4ycW59gx9a75QzZPnsaHi+ev+WNmP8sfNc63eMPT34tfbV3h
mi9kHGL3Wf9Qb5s+MD+txqHaYfEei9+Uf0B9RTm1eWXxYVt3tn6vvxdfvF/2
yPTFlfe5/mHjb+sdVj/rx+J963fjktI/1/Eue2dlxdXquaWv/lK8b3F+lsar
xtu0m8a1e77xfcWjzO8ozq+4vNk/9ovlQ/E+q3f5IfbeleT/leQbcojxO+fT
U7mt9aurfifnU78b/xfv7zx5v9b7il8qz4ccRu60+OneZxy3+pmfYONxtRcV
D7XnW5yecUna62vczPRsxfXpf3HecDw4Lua/sd+Nt69x/fK/zC/ne4v3Gd+g
PmY/mJ7Zeyx+WvECaw/jYdd4Kq+zuPauL740fq+y1gHMz7D6V9ykjo0/n873
ur445un3Vpbnaf7RNU5Q+svi35WHYeuh1t+1/vJuvMby1Wzdx+pleWjGBWZP
n3K0+UfmZ5idpv6p+Ml1PlT7TK6sv/68HHg+CDmfvP/xnq/f8zLuXzxe9mDX
FS+Tb4ufyx+5xvHrer6H/bNj9g/rb3F9e5+1m8/ZefZ/2X/a04rvkCvNHpt+
sXhI6XXj+eJ7OybvGzeYPjOONO5jv7M0f8z41Hjf9J7pHeOqp/bM4lAmR9f1
+mveT7XfuNfWYYzzd93ml/F/2Zmrf1VxffoPJWer//Qx4yGmD3k95dDkyPzJ
63XGW8V9NZ+LfyuOTP31lPd5vjh/51d/8or1D+ebvdfWRfZ8yq3pxerf8rds
XfcavzfeL71h8lb59LXO9DTv7JpvVXEblte43LXetPdlD6yeZh+ueVw2jk/j
C5Tvq7/C8S8/ysb1mvdqfEhuN95n/N9K43Fy/+wD7ablrZCXbV2C6xBXf4T1
Na7f/dYe80+sfnbfnnv1Y6y/uZ5Bezy7TrkmHxhv1HnOE8o/j6/2lfx+1f+M
u+343/3bv//9Pa5veT+0R9VvV368xvmN6+k3r7TnUJ9RzxQPm30wrqi8nIr3
WZzTnlv2uPiy/DT2O/1nW78xu2Lr0BwnjmPZ9YpTWTtNroz/eX79sedxftAP
Kf/D+sP0R8Xh6c8bZzK+XHEFvsd+r3gF60e9dM1jMW6/+i8WXzGevcaPr3Fc
y2MnJ1Vcv/wV6xfTH+UvVDziWq86tnUI48byt8uvsflR+pbz2NYvqaeMq239
yvrd1nev3G/+K+tF/XqVM+P98gP+fBztK4caPy+ez/j+jnl+5auf8Mn9tANc
/yU3M24/XrZ1B76ffgg5m3xs3Gz8T7+E/cr76Hdc4/XG+xVXq5L2mHafdrjm
R8XbbL4ab3I+GL+X/eJ9xvtmr8mXNq+vHE+uIi+SG40zzX/juFac1HiR1xvn
WzyZ8RfLU336XVpdz/cUh1gcp7i/eJ/Xmd9H+1brxuW3cVw5jjxv834lOd/y
Cil/u4/zgfrG/Nen6x3XOLDxr/EB5dj0BPn8qldqfzDzc8v/sPqwvcbzfE71
j+nHa17DNa5dcc3Kz6nvHYzLLb5ecmR+0dUveLp+aXF06rXy+8m7pZdsXlrc
gdxffkj5HdYf1S/VPvNHWV97z+Znye3Vj6n5QN63uD552Tjazle83fJjaEcq
T4fPXWnrDSvZfvN/jNfNzvE5Vl7j+rYu8ePx6jx/2mH2985z3tE+2zy8cqT5
xTZfKh5yjadUXK3Wxfcc82/I+eQb8jl5jf1sZXEn31txUdOvxVPX+Nx1vdL4
zPyEq718d/247FVxv6270I5afKviTZSfiovb/C25IO+bfqF+nH7ZfdYv9JNr
PtCPYr8ZN1o+mMlF6ZviY+P7p3H5yt+5cj7L8iuKL/d++g8WL6h45DVPxOb3
1X+p/Y7YD6yHvcfGq+K2Nq5Xvi89Sv6ruF3Nw6vesDgC38P5f9VPpsev9oHH
5UdQT5i9uH5fUONo7WGcs8bbuHbnydHGzbYOYJy/Y77P4uwVdyc3m//C0nia
7WL9yeeV/8N67nmVT2V+gvkFlidFnre4245XMq5mfn7NP4sfVjy11gfN3631
6LK/pWe5DkE9Ro5haXFfi6ea3jTeLP6jfjW9a3GgGn/Td8ZNpYcrn/ZpvKt4
gf1i9qT637iWpXE/7bHZTZMfG/fVy8bR/G/6C9QX1INcb7T+2PNsvd7mmbWX
95v8WTy25Oqa71L8XnH+q34ib9tzeZ7HpkfNr7nGW8j/ledx9cNtXM2fYn3Y
X+Y37Hn7fe8vv6I40/qj/APqr8rjMD1s9tf8ANo3iw9VHq/5ERa/MP6n/iq/
nsc2z81emF586oc87TeLN5m8Wf3HfZY/wmNyKbnf8nvI9xaXJ/+zXozvGydb
af4A28f28P75ATtf+T6s9+4jt1f9LX5m8TRyPktyJ7nfeMQ4oeTfeLD8afMf
yv+teJ7ldZafXRxCjqHeYr8ax9s8L/5712+gH1a8V34F6192ueKKjKtc447X
PCHjfRsH6/eK83O+sR+rf+0913HZ9WbXyz6z/mZHivdZf8rZVY/YOvx1XfAv
FY+1eLvF3Zd/f+V+Pp96r66v9lz9m+s+QVYW51dp9sP8n6s/Zf3G85aXaO28
5m2U33CNM1tZ9pb+jPG16Tvjcrvf4iPUi9MPpZdtXa7mr/lflX9kcaHSR5VX
eS2f+iuMy5AfyaMWT3/lUf9+l/zK8+R3i2+Ts3mfleXHVN4Q2/v0ffU89gf7
k/Ez4/0r95P3K+7I+WpxOHIl5fqad3mNy1KvmF6sfNTSr5yXxs1PeY39ePV/
rvmQxXPGWayv+QdWsl3XdReLY1pewDVue83zKQ5h/1n7za4Zn3P+Me5F+Sr/
wu63eDjtGPt79zEeYHaEfsCOWb+Ve5/1Z8W9Sq88XU8vfVT5Y0/zdK6l8eQ1
n6R41PiW7d/v/Hsk5pdc9byNc9mXysex9Q9+17X21HrF1a8xvjTeL31leSfl
F1jchPOH9sTsg+k/u970FfUI9cv0BZ9b34Gw3df8feuPiv/w+VfeL14yuX+a
v7V+nR7mMbnY4tWvPNp/r3cl73vl29++xNGNz6+8zuts/YAcbf4E/Q/6N+a3
lD9jfoWNB8uneTvGDxYfvsq5ya/5qdd8NpNn5lVaHGp6faXZYdOP1zhj6cnr
+qu1v/SRcbutK/CYvGh6qTjf+Gj9X3b4ug5OO2d295pXaePyLu+z/42/rT9X
2vPMn6jxK36m/Tfep/2wctex/lxfsTiZ2VH7TuRn49zX+LetG1C+za+tPJp3
z1s/VN7JNa/H6lF+h91PubPx5zzhdbaeaHrGvr+2dcGrPmE9dt7m3/W7katf
a++v+VV2zOLhZh82z8n54xLyCc9TT5p8mP9f+TnWH/bcK9+UX2L1LPt0zWNd
PUwfjxcrfm3x/Y/n//pt3H73Jb+n8n72nHqP8bDF/S3fhu3mffQLVs9apzD/
xOq5kv7C3s/+qHUKxvFZbh5x/lmckXJt/Fl6uHjf5P6p/152mPqcfoHphekd
2p3S12WHrR627mB5mDwmD5LnbT2H42z63DjRxmOc/yF//+sxB139IOuvK9dX
XJ/9a/xdfM75tbJ4vuav+RGsv3G9+Q/TH7UeTP3K62jPbT5RvuhPmr4oLqY8
cD6yX+p7FIvvF29X/ppxH++rOAdLi6vbemrpo+J542XLp7PyGkdhnN9K8n3p
I/ZDxdPZL9d4tMnvdd3q+r2SjbvFf2j/Kh5OPcZ5P/3AY3IK7VfFMai/zV7V
On75C+V3GP9XvLP0F+W41qP+HyXof+A=
       "], {{0, 332}, {382, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Medium,
     ImageSizeRaw->{382, 332},
     PlotRange->{{0, 382}, {0, 332}}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "image"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8511408975654483`*^9, 3.851140899489057*^9}, {
  3.8513997140338087`*^9, 3.8513997340806284`*^9}, {3.872139641405151*^9, 
  3.872139646098298*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"c0d5f110-3e56-4d63-8f1d-345d924f4b90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ds", "=", "4"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"downsampling", " ", "rate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"image", "=", 
    RowBox[{"ImageData", "[", 
     RowBox[{"ImageResize", "[", 
      RowBox[{"imageIn", ",", 
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"ImageData", "[", "imageIn", "]"}], "]"}], "]"}], "/", 
        "ds"}]}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Downsampled", " ", "image"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8513995509166384`*^9, 3.8513996480955515`*^9}, {
   3.85139973952722*^9, 3.851399764199015*^9}, {3.8514080988751993`*^9, 
   3.851408100434518*^9}, 3.8514081525325584`*^9, {3.872139649658389*^9, 
   3.872139666331462*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"245746d7-4b7d-4f60-81fd-1889a4bacf55"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gListIn", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "35", ",", "194"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "253", ",", "358"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"56", ",", "38", ",", "292"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"46", ",", "277", ",", "90"}], "}"}]}], "}"}]}], "}"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "list", " ", "of", " ", "start", " ", "and", " ", "end", " ", "points"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.636452234727378*^9, 3.636452275771961*^9}, {
   3.636453325144884*^9, 3.6364533252168903`*^9}, {3.6380725303207273`*^9, 
   3.6380725306171317`*^9}, 3.851408018167701*^9, {3.8514080574558935`*^9, 
   3.851408058190406*^9}, {3.872139670003334*^9, 3.8721396934451013`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"087c2582-76dc-49d3-af69-aee76d1f833c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gListIn2", "=", "gListIn"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gListIn2", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "All", ",", 
     RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"gListIn2", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "All", ",", 
       RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], "/", "ds"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.636452358458639*^9, 3.6364523772939234`*^9}, {
   3.636453315817244*^9, 3.636453318680439*^9}, 3.6367784264508963`*^9, {
   3.6380720952922916`*^9, 3.6380720956672916`*^9}, {3.6380722423262916`*^9, 
   3.6380722545172915`*^9}, {3.63807253365917*^9, 3.638072533939974*^9}, {
   3.63807342048458*^9, 3.6380734236108923`*^9}, {3.63807435034861*^9, 
   3.6380743541861606`*^9}, {3.85140817107973*^9, 3.8514081718221407`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"da0525ac-f416-4484-8a4d-40f94db3fbe8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
    RowBox[{"Dimensions", "[", "image", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"image", " ", "dimensions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"No", "=", "16"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "orientations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s\[Theta]", "=", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "No"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Step", " ", "size", " ", "in", " ", "orientation", " ", "direction"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8514082949209237`*^9, 3.851408310881215*^9}, {
  3.851408344899782*^9, 3.85140834819989*^9}, {3.8514098442461095`*^9, 
  3.8514098443207455`*^9}, {3.8721397131905813`*^9, 3.8721397415715656`*^9}, {
  3.8722333966277633`*^9, 3.8722333967036333`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"95adb631-9df7-4195-a3d8-73d141853be1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gList", "=", "gListIn2"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"selected", " ", "start", " ", "and", " ", "end", " ", "points"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gList", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gListIn2", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}],
             "-", "1"}], ")"}], "*", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], "64"]}], ")"}], "/", 
        RowBox[{"(", "s\[Theta]", ")"}]}], ")"}], "+", "1"}], "]"}], ",", 
    "No", ",", "1"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "list", " ", "with", " ", "start", " ", "and", " ", "end", " ", "points", 
    " ", "with", " ", "discrete", " ", "angular", " ", "coordinates"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.6380724015878773`*^9, {3.638072516623752*^9, 3.6380725167953544`*^9}, {
   3.6380727303457584`*^9, 3.638072794528758*^9}, {3.6380729051529584`*^9, 
   3.6380729110341587`*^9}, {3.6380734704475756`*^9, 3.638073475352066*^9}, {
   3.638074341519123*^9, 3.638074342236714*^9}, {3.6380755257206697`*^9, 
   3.638075526609853*^9}, {3.638077586513118*^9, 3.6380775905223694`*^9}, {
   3.8514083544200616`*^9, 3.851408354658744*^9}, {3.8514098757760353`*^9, 
   3.8514098758667307`*^9}, {3.87213970107401*^9, 3.872139708355095*^9}, {
   3.8721397460226746`*^9, 3.872139764662879*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"6f8a8a32-eead-4779-8738-8de2fbae1dce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"seedPointNr", "=", "2"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**"}], "*", 
    StyleBox["Select",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["seed",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["point",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["here",
     FontColor->RGBColor[0, 0, 1]]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g0d", "=", 
   RowBox[{"gList", "\[LeftDoubleBracket]", 
    RowBox[{"seedPointNr", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g1dListForward", "=", 
    RowBox[{"gList", "\[LeftDoubleBracket]", 
     RowBox[{"seedPointNr", ",", 
      RowBox[{"2", ";;", 
       RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Select", " ", "all", " ", "end", " ", "points"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"g1dListBackward", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "+", 
          RowBox[{"\[Pi]", "/", "s\[Theta]"}]}], ",", "No", ",", "1"}], "]"}],
        ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      "}"}], "&"}], "/@", "g1dListForward"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.636452300721672*^9, 3.6364523176208315`*^9}, 
   3.63645401775765*^9, 3.6367789333933516`*^9, {3.6380727392557583`*^9, 
   3.6380727413217583`*^9}, {3.638072946383708*^9, 3.6380730032453437`*^9}, {
   3.6380731325217147`*^9, 3.638073139822468*^9}, {3.638073217946767*^9, 
   3.6380732190075607`*^9}, {3.638073302591414*^9, 3.6380733039953957`*^9}, {
   3.638073347612437*^9, 3.638073348626424*^9}, {3.638073440597591*^9, 
   3.638073441861717*^9}, {3.6380740141075206`*^9, 3.6380740149811096`*^9}, {
   3.63807553561088*^9, 3.638075539557604*^9}, 3.6381094782855463`*^9, 
   3.6381098179605465`*^9, 3.638110609363521*^9, 3.638152287471507*^9, {
   3.638152436873665*^9, 3.6381524369672656`*^9}, 3.6381526886844606`*^9, {
   3.6868984629258876`*^9, 3.686898486843457*^9}, {3.6875921234352655`*^9, 
   3.687592123981739*^9}, {3.6875922046653676`*^9, 3.687592239162142*^9}, 
   3.687595088062216*^9, 3.687597499119605*^9, {3.687600351801963*^9, 
   3.687600353201685*^9}, {3.687604486170348*^9, 3.6876045278000965`*^9}, {
   3.6876045753706183`*^9, 3.6876046320534134`*^9}, {3.687604669589272*^9, 
   3.687604678677451*^9}, {3.6876047152908564`*^9, 3.687604741169702*^9}, {
   3.68760478467745*^9, 3.6876048094112496`*^9}, 3.687604981852005*^9, 
   3.687670722425112*^9, 3.6876824302582316`*^9, 3.69443450525918*^9, {
   3.694499948622269*^9, 3.6944999536596613`*^9}, 3.851408380252611*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"847bbcf0-47bf-4e28-b14a-acdd0eefd730"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blueish", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"83", ",", "177", ",", "234"}], "}"}], "/", "255."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greenish", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"126", ",", "239", ",", "88"}], "}"}], "/", "255."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"redish", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"243", ",", "84", ",", "84"}], "}"}], "/", "255."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"redish", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"253", ",", "87", ",", "87"}], "}"}], "/", "255."}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.687604657232399*^9, 3.687604666788823*^9}, {
  3.6876047032397957`*^9, 3.6876047083393807`*^9}, {3.687604752791623*^9, 
  3.68760477963704*^9}, {3.687604960901268*^9, 3.6876049750589323`*^9}, {
  3.687605443944344*^9, 3.68760544837312*^9}, {3.6876063674311476`*^9, 
  3.6876063738141503`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"37034f5b-2821-4c9e-9985-f075dd2e5ad3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"colorForward", "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"Sequence", "@@", "greenish"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorForward", "=", "Green"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorBackward", "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"Sequence", "@@", "redish"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colorBackward", "=", "Red"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorPTR2", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"Sequence", "@@", "blueish"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6876049881477532`*^9, 3.6876049986316442`*^9}, {
   3.687605369189462*^9, 3.687605411842936*^9}, {3.6876059042649584`*^9, 
   3.687605922419286*^9}, 3.6876063110641904`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"428bbd3d-4353-4679-b5e5-cd34af000b83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Image", "@", "image"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"White", ",", "Thick", ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-",
              "0.5"}], ",", 
            RowBox[{"Nx", "-", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+",
              "0.5"}]}], "}"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g0d", "\[LeftDoubleBracket]", 
            RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{"g0d", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"Length", "[", "image", "]"}], "10"], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "g0d", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1"}], ")"}], "*", 
                 "s\[Theta]"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "g0d", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1"}], ")"}], "*", 
                 "s\[Theta]"}], "]"}]}], "}"}]}]}]}], "}"}]}], "]"}]}], "}"}],
      "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"colorForward", ",", "Thick", ",", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", "0.5"}], ",", 
               RowBox[{"Nx", "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "0.5"}]}], "}"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", 
                RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"Length", "[", "image", "]"}], "10"], 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}], ")"}], "*", "s\[Theta]"}], "]"}], ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}], ")"}], "*", "s\[Theta]"}], "]"}]}], "}"}]}]}]}], 
             "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "g1dListForward", "]"}], ",", "1"}], 
           "}"}]}], "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"colorBackward", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Arrow", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", "0.5"}], ",", 
               RowBox[{"Nx", "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", "0.5"}]}], "}"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"g1dListBackward", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", 
                RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"g1dListBackward", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"Length", "[", "image", "]"}], "10"], 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g1dListBackward", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}], ")"}], "*", "s\[Theta]"}], "]"}], ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g1dListBackward", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    "1"}], ")"}], "*", "s\[Theta]"}], "]"}]}], "}"}]}]}]}], 
             "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "g1dListBackward", "]"}], ",", "1"}], 
           "}"}]}], "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "visualization", " ", "of", " ", "start", " ", "and", " ", "end", " ", 
    "points", " ", "and", " ", "their", " ", "corresponding", " ", 
    "direction"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.636452300721672*^9, 3.6364523176208315`*^9}, 
   3.63645401775765*^9, 3.6367789333933516`*^9, {3.6380727392557583`*^9, 
   3.6380727413217583`*^9}, {3.638072946383708*^9, 3.6380730032453437`*^9}, {
   3.6380731325217147`*^9, 3.638073139822468*^9}, {3.638073217946767*^9, 
   3.6380732190075607`*^9}, {3.638073302591414*^9, 3.6380733039953957`*^9}, {
   3.638073347612437*^9, 3.638073348626424*^9}, {3.638073440597591*^9, 
   3.638073441861717*^9}, {3.6380740141075206`*^9, 3.6380740149811096`*^9}, {
   3.63807553561088*^9, 3.638075539557604*^9}, 3.6381094782855463`*^9, 
   3.6381098179605465`*^9, 3.638110609363521*^9, 3.638152287471507*^9, {
   3.638152436873665*^9, 3.6381524369672656`*^9}, 3.6381526886844606`*^9, {
   3.6868984629258876`*^9, 3.686898486843457*^9}, {3.6875921234352655`*^9, 
   3.687592123981739*^9}, {3.6875922046653676`*^9, 3.687592239162142*^9}, 
   3.687595088062216*^9, 3.687597499119605*^9, {3.687600351801963*^9, 
   3.687600353201685*^9}, {3.687604486170348*^9, 3.6876045278000965`*^9}, {
   3.6876045753706183`*^9, 3.6876046320534134`*^9}, {3.687604669589272*^9, 
   3.687604678677451*^9}, {3.6876047152908564`*^9, 3.687604741169702*^9}, {
   3.68760478467745*^9, 3.6876048094112496`*^9}, 3.687604981852005*^9, 
   3.687670722425112*^9, 3.6876824302582316`*^9, 3.69443450525918*^9, {
   3.694499948622269*^9, 3.6944999536596613`*^9}, {3.851408407554053*^9, 
   3.8514084164686565`*^9}, {3.872139790030277*^9, 3.8721398071065826`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"81593c9b-040e-4e6e-8822-3ab71d0aee6f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cost function", "Chapter",
 CellChangeTimes->{{3.851144539441568*^9, 3.851144542851345*^9}, {
  3.872139870451576*^9, 
  3.8721398716086273`*^9}},ExpressionUUID->"df4c8f65-c3d9-4fe0-a164-\
80c8565e7ef3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"osGFCost", "=", 
   RowBox[{"OrientationScoreTransform", "[", 
    RowBox[{
     RowBox[{"Image", "@", "image"}], ",", 
     RowBox[{"\"\<Orientations\>\"", "\[Rule]", "16"}], ",", 
     RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", "75"}], ",", 
     RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "0.9"}], ",", 
     RowBox[{"\"\<OverlapFactor\>\"", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8514008586944213`*^9, {3.851400897245524*^9, 3.85140090218181*^9}, {
   3.87223328311972*^9, 3.872233283383751*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"0186fc9e-7436-41f1-9460-cb763960a6f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"osGFCost", "[", "\"\<FullData\>\"", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8514094292976933`*^9, 3.85140944951842*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"79e5b973-a5f3-485c-bc5d-4243c07c345d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"multiscalecostLIFExtReg", "=", 
   RowBox[{"MultiScaleVesselnessExtRegNoBoarder", "[", 
    RowBox[{
     RowBox[{"osGFCost", "[", "\"\<FullData\>\"", "]"}], ",", "1", ",", "1", 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
     "\"\<LIF\>\"", ",", "2", ",", "0"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.846755382089878*^9, 3.8467554121894693`*^9}, {
   3.846755626142836*^9, 3.846755658632118*^9}, {3.8467566756303134`*^9, 
   3.846756680632657*^9}, {3.8467580092612576`*^9, 3.8467580158801794`*^9}, 
   3.846758530443386*^9, {3.8467590809018526`*^9, 3.8467590830791674`*^9}, 
   3.8467596978682413`*^9, 3.8467599253196707`*^9, {3.8477935995039682`*^9, 
   3.847793603485036*^9}, {3.8514007292611475`*^9, 3.8514007512572937`*^9}, {
   3.851400880775482*^9, 3.8514008809344106`*^9}, 3.8514012007890515`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"074490db-a4d0-4bc5-99df-aaad135498c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testExtReg", "=", 
   RowBox[{"MultiScaleVesselnessFilter2D", "[", 
    RowBox[{"multiscalecostLIFExtReg", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851144562461587*^9, 3.85114456650613*^9}, {
   3.851406223574133*^9, 3.85140623603727*^9}, 3.8514064234164305`*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"161cca84-6f91-4ee8-b2bb-596b58f420c3"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{"MultiScaleVesselnessFilter2D", "[", 
       RowBox[{"multiscalecostLIFExtReg", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{"MultiScaleVesselnessFilter2D", "[", 
       RowBox[{"multiscalecostLIFExtReg", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{"MultiScaleVesselnessFilter2D", "[", 
       RowBox[{"multiscalecostLIFExtReg", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", "3"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"ArrayPlot", "[", "image", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8514062329027195`*^9, 3.8514062386959333`*^9}, {
  3.8514064160459375`*^9, 3.851406479509898*^9}, {3.85140651982181*^9, 
  3.8514066066318736`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"cae79abc-32dc-4d43-8ed7-72a12c36b1c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cost", "[", 
     RowBox[{
      RowBox[{"MultiScaleVesselnessFilter", "[", 
       RowBox[{"multiscalecostLIFExtReg", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], ",", "\[Lambda]", ",",
       "p"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "g0d", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-",
            "0.5"}], ",", 
          RowBox[{"Nx", "-", 
           RowBox[{
           "g0d", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+",
            "0.5"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "-", "0.5"}], 
          ",", 
          RowBox[{"Nx", "-", 
           RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
           "0.5"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8514068837324705`*^9, 3.851406996565166*^9}, {
  3.851409264659458*^9, 3.851409380118327*^9}, {3.8514094844167523`*^9, 
  3.851409553656595*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"f70da2c1-a228-4f82-9190-b723958692d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Lambda]", "=", "800"}], ";", "\[IndentingNewLine]", 
    RowBox[{"p", "=", "8"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"costfunctionExtReg", "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"\[Lambda]", "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"MultiScaleVesselnessFilter", "[", 
          RowBox[{"multiscalecostLIFExtReg", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], ")"}], "p"]}]}]]}],
    ";"}]}]], "Input",
 CellChangeTimes->{{3.847279118419402*^9, 3.8472791257131095`*^9}, {
   3.847279199776988*^9, 3.8472792494855566`*^9}, {3.8472793364393005`*^9, 
   3.84727935422795*^9}, {3.8472803120055523`*^9, 3.8472803200073776`*^9}, {
   3.8472803506477757`*^9, 3.847280355380502*^9}, {3.847280545656602*^9, 
   3.8472805467329206`*^9}, {3.8472805900647316`*^9, 
   3.8472806089845943`*^9}, {3.8472806412169666`*^9, 
   3.8472806922963037`*^9}, {3.8473390919387927`*^9, 3.847339119464059*^9}, 
   3.847339240929378*^9, 3.847339311042441*^9, {3.847341663673251*^9, 
   3.8473416905396676`*^9}, {3.8473430012598333`*^9, 
   3.8473430025075655`*^9}, {3.8473431837110124`*^9, 3.847343192923703*^9}, {
   3.8473480226870117`*^9, 3.847348029734364*^9}, {3.847348478003791*^9, 
   3.8473484790701056`*^9}, {3.8473575670809727`*^9, 
   3.8473575906669683`*^9}, {3.8473577056979527`*^9, 
   3.8473577346394687`*^9}, {3.8477899487766085`*^9, 
   3.8477899490974317`*^9}, {3.851409580235815*^9, 3.8514096148361173`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"a6e4b0cf-5525-4bb5-843d-5ab998c6e200"],

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"Rescale", "[", 
    RowBox[{"-", 
     RowBox[{"costfunctionExtReg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", " ", "2.5"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.847339222550528*^9, 3.847339226182004*^9}, {
   3.847339313946623*^9, 3.847339316178607*^9}, 3.8473430066302385`*^9, {
   3.847348046869357*^9, 3.8473481640694857`*^9}, 3.8473577517008696`*^9, 
   3.851409588665803*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"f752e10b-806e-43b9-b670-3b455acf5922"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters", "Chapter",
 CellChangeTimes->{{3.8514102903051434`*^9, 
  3.8514102914456863`*^9}},ExpressionUUID->"440495e0-b541-4d20-b34b-\
46894420a863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cost", "=", "costfunctionExtReg"}], ";"}]], "Input",
 CellChangeTimes->{{3.8514103083454237`*^9, 3.8514103099451556`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"c894d5df-a133-4a44-9d17-ebdae8e296aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.025"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.851410537667509*^9, 3.851410546778172*^9}, {
  3.851410618692298*^9, 3.851410621811466*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"9325265b-5e31-4a52-8af3-c46aef65a79c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s\[Theta]", "=", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", 
      RowBox[{"(", "No", ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Xi]", "=", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "*", "ds"}], ")"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Zeta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]s", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]a", "=", "0.6"}], ";"}]}], "Input",
 CellChangeTimes->{{3.82756901318349*^9, 3.827569030401838*^9}, 
   3.8275690718194056`*^9, {3.8275694703811207`*^9, 3.8275694781257024`*^9}, {
   3.827571207890485*^9, 3.8275712242020397`*^9}, {3.827575004144817*^9, 
   3.8275750194609704`*^9}, {3.8280947252447023`*^9, 3.828094730863099*^9}, {
   3.828095279162855*^9, 3.8280952801580863`*^9}, 3.8281117126126785`*^9, {
   3.830275025589748*^9, 3.830275027373646*^9}, {3.8304887673123293`*^9, 
   3.8304887716260953`*^9}, {3.8304888690139227`*^9, 
   3.8304888758687553`*^9}, {3.8304897636875935`*^9, 3.8304897649530897`*^9}, 
   3.8304899111538277`*^9, 3.8304913029398675`*^9, {3.8304918513047175`*^9, 
   3.830491852899871*^9}, 3.83049201895064*^9, 3.8305876311569543`*^9, 
   3.8309362808179784`*^9, {3.83096010337148*^9, 3.8309601321301517`*^9}, {
   3.8309610795886717`*^9, 3.830961079745251*^9}, 3.8309611202033777`*^9, {
   3.8309617313452034`*^9, 3.8309617315228662`*^9}, {3.830963063656073*^9, 
   3.8309630660535*^9}, {3.8312014357645464`*^9, 3.8312014368313313`*^9}, {
   3.832152203870513*^9, 3.83215220704047*^9}, {3.832153595161108*^9, 
   3.832153598314642*^9}, {3.8321536534982967`*^9, 3.8321536661479254`*^9}, {
   3.8321545312376056`*^9, 3.8321545377809315`*^9}, {3.8321660980069456`*^9, 
   3.832166112452669*^9}, 3.8321675625958023`*^9, {3.8321699291301537`*^9, 
   3.8321699296731396`*^9}, {3.832170813165534*^9, 3.8321708586107144`*^9}, {
   3.8321727905091496`*^9, 3.832172793510076*^9}, {3.83217380047865*^9, 
   3.8321738424143705`*^9}, 3.8322140831387672`*^9, {3.8514105277774253`*^9, 
   3.851410531987581*^9}, 3.872140023993292*^9, 3.872234345255533*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"51b9bd61-ee99-4d20-a6bb-b98909db66e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Xi]", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.8454519109952097`*^9, 3.8454519267344923`*^9}, 
   3.8454535284350915`*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"8ae06e34-c459-48e3-8222-4ae7334d414e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", "image", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8275688841314116`*^9, 3.827568893944194*^9}, {
  3.851410551258254*^9, 3.8514105529175987`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"ef795ca4-1901-4d80-9bea-44c16a5fc56e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0FM", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"discreteToFM", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "g0d", "}"}], "]"}], ",", "No"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1FM", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"discreteToFM", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "g1dListForward", "]"}], ",", "No"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"544079b7-c4cb-48d0-a1e0-2c3659159560"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"NxCost", ",", "NyCost", ",", "NoCost"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", "cost", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dims", "=", 
   RowBox[{"{", 
    RowBox[{"NxCost", ",", "NyCost", ",", "NoCost"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedsFM", "=", "g0FM"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tipsFM", "=", "g1FM"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xiLIF", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[Mu]", "*", "ds"}], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsLIF", "=", 
   SuperscriptBox["\[Epsilon]", 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"costFM", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"cost", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8275674997954206`*^9, 3.827567524004422*^9}, {
   3.827567557084155*^9, 3.827567666941328*^9}, 3.8275682247736826`*^9, {
   3.8275683492981186`*^9, 3.8275684003764915`*^9}, {3.8275762889840717`*^9, 
   3.827576298731626*^9}, {3.8275763421784134`*^9, 3.827576433694724*^9}, 
   3.82757651991945*^9, 3.8304230766650004`*^9, {3.832301155445491*^9, 
   3.832301200284541*^9}, {3.832302162841693*^9, 3.8323021662082105`*^9}, {
   3.8475167438519545`*^9, 3.8475167596714296`*^9}, {3.8514103832161393`*^9, 
   3.8514104597567844`*^9}, {3.851410505197259*^9, 3.8514105078375387`*^9}, {
   3.8514107147790656`*^9, 3.8514107393886895`*^9}, {3.85141113849018*^9, 
   3.8514111410508027`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"8415fbea-217f-44ab-bdc0-43aeb0e26223"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sides", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"NxCost", "+", "1"}]}], "}"}], "-", "0.5"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"NyCost", "+", "1"}]}], "}"}], "-", "0.5"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], "-", 
      RowBox[{"s\[Theta]", "/", "2"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sidesLIFmetric", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "NxCost"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "NyCost"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"2", "\[Pi]"}], "-", "s\[Theta]"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[121]:=",ExpressionUUID->"51f39912-3a17-4f90-b9ef-db236d281a89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ySelect", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.851410764979083*^9, 3.851410768239772*^9}, {
  3.851410811759239*^9, 3.851410815679432*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"85485e9d-7394-4afc-96e9-475f7a9484bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gauge Frame", "Chapter",
 CellChangeTimes->{{3.85141123311119*^9, 
  3.8514112349008293`*^9}},ExpressionUUID->"9e9da6ba-482c-420a-9b05-\
bdd82f893a39"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"osGF", "=", 
    RowBox[{"OrientationScoreTransform", "[", 
     RowBox[{
      RowBox[{"Image", "@", "image"}], ",", 
      RowBox[{"\"\<Orientations\>\"", "\[Rule]", "No"}], ",", 
      RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", "75"}], ",", 
      RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "0.9"}], ",", 
      RowBox[{"\"\<OverlapFactor\>\"", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{",", 
      RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", "5"}]}], "]"}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7955047831757755`*^9, 3.795504905582304*^9}, 
   3.795504969953719*^9, {3.7955935739329433`*^9, 3.7955936059769173`*^9}, 
   3.7955973700621967`*^9, {3.7961216804381638`*^9, 3.796121680736288*^9}, {
   3.796121723804056*^9, 3.7961217240229483`*^9}, {3.7961217952229424`*^9, 
   3.796121795632704*^9}, {3.796121827654848*^9, 3.7961218277817755`*^9}, {
   3.79612348691343*^9, 3.7961234897277193`*^9}, {3.7967129321527433`*^9, 
   3.7967129415947294`*^9}, {3.7967144685197973`*^9, 
   3.7967144710468864`*^9}, {3.800786060701063*^9, 3.8007860633492756`*^9}, {
   3.815805755163107*^9, 3.8158057553655667`*^9}, {3.8199919385554047`*^9, 
   3.8199919397835283`*^9}, {3.8275686949145594`*^9, 3.827568746007337*^9}, 
   3.8286758637082434`*^9, 3.828677287456855*^9, 3.8286773209818006`*^9, {
   3.8286788080342283`*^9, 3.8286788099131203`*^9}, 3.828679070661134*^9, 
   3.828679869826039*^9, {3.830572550137044*^9, 3.8305725751531134`*^9}, {
   3.830602285373852*^9, 3.8306022979545236`*^9}, {3.8308349794224634`*^9, 
   3.8308350815740256`*^9}, {3.830960155460507*^9, 3.830960163771866*^9}, {
   3.8309616766851387`*^9, 3.830961722236022*^9}, 3.830964495696587*^9, {
   3.8309653839219165`*^9, 3.8309654115698433`*^9}, 3.831201439667492*^9, {
   3.8320002977461076`*^9, 3.832000309030801*^9}, 3.847792339853436*^9, {
   3.8722342321377726`*^9, 3.8722342331766453`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"559e43ae-ad32-4a59-a245-690d85b598f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", "image", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8275688841314116`*^9, 3.827568893944194*^9}, {
  3.872234246886922*^9, 3.872234247287364*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"906478ef-06c8-4491-98e9-7d9d0a5d9576"],

Cell[BoxData[
 RowBox[{"os3d", "=", 
  RowBox[{"Image3D", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rescale", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"osGF", "[", "\"\<FullData\>\"", "]"}], "]"}], "]"}], "-", 
      "0.08"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7961246781939216`*^9, 3.7961247715594044`*^9}, {
   3.796124906632715*^9, 3.7961249453547397`*^9}, {3.7961250334197445`*^9, 
   3.796125109796521*^9}, {3.815805758581487*^9, 3.815805762523642*^9}, {
   3.8199919654060416`*^9, 3.8199919658974676`*^9}, {3.827568810920482*^9, 
   3.8275688124342747`*^9}, 3.8599654034285917`*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"2c223232-3572-4067-8769-2a9bb0d5b954"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gf1", ",", "oc1"}], "}"}], "=", 
   RowBox[{"StabilizeGFandOC", "[", 
    RowBox[{
     RowBox[{"osGF", "[", "\"\<FullData\>\"", "]"}], ",", "1", ",", "\[Xi]", 
     ",", "\[Zeta]", ",", "\[Sigma]s", ",", "\[Sigma]a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gf2", ",", "oc2"}], "}"}], "=", 
   RowBox[{"StabilizeGFandOC", "[", 
    RowBox[{
    "oc1", ",", "1", ",", "\[Xi]", ",", "\[Zeta]", ",", "\[Sigma]s", ",", 
     "\[Sigma]a"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gf3", ",", "oc3"}], "}"}], "=", 
   RowBox[{"StabilizeGFandOC", "[", 
    RowBox[{
    "oc2", ",", "1", ",", "\[Xi]", ",", "\[Zeta]", ",", "\[Sigma]s", ",", 
     "\[Sigma]a"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gf4", ",", "oc4"}], "}"}], "=", 
   RowBox[{"StabilizeGFandOC", "[", 
    RowBox[{
    "oc3", ",", "1", ",", "\[Xi]", ",", "\[Zeta]", ",", "\[Sigma]s", ",", 
     "\[Sigma]a"}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Max", ",", "#", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"oc1", ",", "oc2", ",", "oc3", ",", "oc4"}], "}"}]}], ",", 
     RowBox[{"Image", "@", "image"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8275686472403936`*^9, 3.8275686483669786`*^9}, {
  3.8275690440597277`*^9, 3.8275690565004144`*^9}, {3.872234261920355*^9, 
  3.872234262563324*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"0ad11451-d24f-42e2-8ca1-f1bf753c1f7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hout", "=", 
   RowBox[{"CalcGaugeFrameNew2", "[", 
    RowBox[{
     RowBox[{"ObjPositionOrientationData", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Data\>\"", "\[Rule]", "oc3"}], ",", 
        RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
         RowBox[{"2", "\[Pi]"}]}], ",", " ", 
        RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
        RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
        RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], "]"}], 
     ",", "1", ",", "\[Zeta]", ",", "\[Sigma]s", ",", "\[Sigma]a"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.855047439988881*^9, 3.855047460005116*^9}, {
   3.855047541726737*^9, 3.8550475645919886`*^9}, {3.8565962019634647`*^9, 
   3.8565962023145275`*^9}, 3.8565963435361323`*^9, {3.8570259533051076`*^9, 
   3.857025953528444*^9}, 3.857025985954403*^9, {3.8619363891461906`*^9, 
   3.8619363986351905`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"38874ebd-7f08-4dca-809d-7ec5260298fb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tracking", "Chapter",
 CellChangeTimes->{{3.8511443135103436`*^9, 
  3.851144314813199*^9}},ExpressionUUID->"4d08ac40-53a6-4af1-867c-\
392423d3e4ef"],

Cell[CellGroupData[{

Cell["Left-Invariant (forward tracking)", "Section",
 CellChangeTimes->{{3.851410254698206*^9, 3.851410257225869*^9}, {
  3.8514120630688777`*^9, 3.851412063859191*^9}, {3.872146933195772*^9, 
  3.8721469350936384`*^9}, {3.872241216009858*^9, 
  3.872241229288211*^9}},ExpressionUUID->"f3a619f5-6ef4-42f6-90bd-\
b2b57a9cb5dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MLIF", ",", "wLIF"}], "}"}], "=", 
   RowBox[{"MetricMvectorwLIF", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"costFM", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", "dims", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.1", ",", 
       SuperscriptBox["10", "2"]}], "}"}], ",", "epsLIF"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8552930652227664`*^9, 3.8552930771613255`*^9}, 
   3.8552934850480647`*^9, {3.8552937161816187`*^9, 3.8552937175503273`*^9}, {
   3.8552939417276173`*^9, 3.855293942560137*^9}, 3.8552941483096547`*^9, {
   3.855294322639676*^9, 3.855294326071306*^9}, {3.872146786121642*^9, 
   3.8721467994794874`*^9}, 3.872146837685032*^9, 3.8722345323270063`*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"86ca427a-2293-4f80-a412-5db5c3b949f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HeightLIFFG", ",", "geodesicsLIFFG"}], "}"}], "=", 
   RowBox[{"runReedsSheppForwardGFMultipleHeightGeos", "[", 
    RowBox[{
     RowBox[{"N", "[", "dims", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"MLIF", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}]}], 
       "]"}], "]"}], ",", 
     RowBox[{"N", "[", "wLIF", "]"}], ",", 
     RowBox[{"N", "[", "sides", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "-", 
          RowBox[{"{", 
           RowBox[{"ySelect", ",", "0", ",", "0"}], "}"}]}], "&"}], ",", 
        "seedsFM"}], "]"}], "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "-", 
          RowBox[{"{", 
           RowBox[{"ySelect", ",", "0", ",", "0"}], "}"}]}], "&"}], ",", 
        "tipsFM"}], "]"}], "]"}], ",", "0.1", ",", "3"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[135]:=",ExpressionUUID->"f18a4d8d-e601-4980-85bd-2a650d0ee2a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"endtracksFigLIFFG", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"LineImageCoordinates", "[", 
         RowBox[{"image", ",", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", ".003", "]"}], ",", "endtracksFigLIFFG"}], 
      "}"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.830953853710662*^9, 3.830953875286275*^9}, {
   3.830953916614195*^9, 3.8309539457461967`*^9}, 3.8314544243784065`*^9, {
   3.831454461554757*^9, 3.8314544646824274`*^9}, {3.831527027499473*^9, 
   3.8315270311148796`*^9}, 3.8315382540097446`*^9, {3.831538450821371*^9, 
   3.8315384649241056`*^9}, {3.8315402728745947`*^9, 3.831540273426297*^9}, 
   3.8486736404304714`*^9, {3.8487237951281223`*^9, 3.848723877341494*^9}, {
   3.8487239139370937`*^9, 3.8487240057913213`*^9}, {3.85141117209011*^9, 
   3.851411185890672*^9}, 3.851574712899291*^9},
 CellLabel->
  "In[136]:=",ExpressionUUID->"f22f5243-41cc-4e0d-a596-04048ae32406"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plotContoursR2oneColor", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "HeightLIFFG", "]"}], ",", "80", ",", "10", ",", 
       RowBox[{"Image", "@", "image"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Flatten", "@", "g0FM"}], ",", 
         RowBox[{"Flatten", "@", "g1FM"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotCurve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Image", "@", "image"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Flatten", "@", "g0FM"}], ",", 
         RowBox[{"Flatten", "@", "g1FM"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.851771848361508*^9, 3.8517718751540585`*^9}, {
   3.851771914975686*^9, 3.851771939661628*^9}, {3.8517720235924435`*^9, 
   3.8517720409018373`*^9}, {3.8517721158632517`*^9, 3.851772134199942*^9}, {
   3.8517721741196337`*^9, 3.851772207904423*^9}, {3.851772271329598*^9, 
   3.8517722769894753`*^9}, {3.851772478469736*^9, 3.8517724819519806`*^9}, {
   3.8517725646504045`*^9, 3.8517725706425333`*^9}, 3.851772651018094*^9, 
   3.8721461003452587`*^9, 3.8722345505128765`*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"ead39f2c-eafa-47cf-9133-7f8dfb2cb4ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data-Driven Left-Invariant (forward tracking)", "Section",
 CellChangeTimes->{{3.851412087678687*^9, 3.851412091548688*^9}, {
  3.8515779657636895`*^9, 3.851577970263874*^9}, {3.8721469224919825`*^9, 
  3.8721469301664305`*^9}, {3.872241219225975*^9, 
  3.872241223938133*^9}},ExpressionUUID->"5e5b6459-9eaa-455d-9f72-\
c701fabee98d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MGF2", "=", 
   RowBox[{"MetricMGFNew", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"costFM", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", "dims", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Inverse", "[", "#", "]"}], "]"}], "&"}], ",", "Hout", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.855998089612275*^9, 3.8559980944658775`*^9}, {
   3.8564992343556595`*^9, 3.8564992421463275`*^9}, {3.856869246028661*^9, 
   3.856869247463849*^9}, 3.8722327470316505`*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"e0c54c69-8b78-4fc1-882e-e3e2f6e8ead5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mD", ",", "w"}], "}"}], "=", 
   RowBox[{"MetricMvectorwLIF", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"costFM", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", "dims", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "10"}], ",", "0.1", ",", 
       SuperscriptBox["1", "2"]}], "}"}], ",", "0.1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.856499246590893*^9, 3.8564992547265844`*^9}, {
   3.8568692489087024`*^9, 3.856869249984333*^9}, 3.8570181754255533`*^9, {
   3.8722327503819776`*^9, 3.8722327648026805`*^9}, 3.8722328620235815`*^9, 
   3.8722329476031013`*^9, {3.8722329895777907`*^9, 3.8722329912209845`*^9}, {
   3.8722334795731072`*^9, 3.872233496269469*^9}, {3.8722340450631666`*^9, 
   3.8722340734330783`*^9}, {3.8722352071965647`*^9, 3.87223521015915*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"034aa13f-d0c6-4fd0-ac89-103f17fdf4af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.8515759663480034`*^9, 3.8515759704114537`*^9}, {
   3.8515766878886013`*^9, 3.8515766892407427`*^9}, 3.8515774500703297`*^9, {
   3.8515775459119277`*^9, 3.8515775461418242`*^9}, 3.8516622268180904`*^9, 
   3.851662266583994*^9, 3.851662714645871*^9, 3.8517530647641754`*^9, {
   3.8517531222509985`*^9, 3.8517531230739665`*^9}, {3.851753209666733*^9, 
   3.851753211244788*^9}, {3.8517599131439753`*^9, 3.8517599132765446`*^9}, 
   3.8517599523423758`*^9, {3.8522094036957636`*^9, 3.8522094042280827`*^9}, {
   3.872235278848339*^9, 3.8722352874315715`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"d0043bd3-3d88-4b94-8154-e3e43f0534ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Height", ",", "geodesicsGFFG"}], "}"}], "=", 
   RowBox[{"runReedsSheppForwardGFMultipleHeightGeos", "[", 
    RowBox[{
     RowBox[{"N", "[", "dims", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mD", "*", "0.1"}], "+", 
         RowBox[{"\[Gamma]", "*", "MGF2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}]}], 
       "]"}], "]"}], ",", 
     RowBox[{"N", "[", "w", "]"}], ",", 
     RowBox[{"N", "[", "sides", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "-", 
          RowBox[{"{", 
           RowBox[{"ySelect", ",", "0", ",", "0"}], "}"}]}], "&"}], ",", 
        "seedsFM"}], "]"}], "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "-", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "&"}], ",", 
        "tipsFM"}], "]"}], "]"}], ",", "0.1", ",", "3"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8492362731727424`*^9, 3.8492363067161417`*^9}, {
   3.8492366971201305`*^9, 3.8492367711911497`*^9}, {3.849237565245867*^9, 
   3.849237593891073*^9}, 3.84923822668323*^9, {3.8492421868919945`*^9, 
   3.849242240568558*^9}, {3.8492474588425407`*^9, 3.8492474594822702`*^9}, {
   3.852209513590969*^9, 3.8522095162367444`*^9}, {3.855036610589243*^9, 
   3.855036613889108*^9}, {3.8550467886322904`*^9, 3.8550467894981956`*^9}, {
   3.855301345204176*^9, 3.85530135864006*^9}, {3.855303649712189*^9, 
   3.8553036521769004`*^9}, {3.85582314483035*^9, 3.855823150602358*^9}, 
   3.8559923927400455`*^9, 3.8559982479266205`*^9, {3.8564992610160117`*^9, 
   3.8564992851152153`*^9}, {3.8568692550605173`*^9, 3.856869260344598*^9}, {
   3.8569387558317533`*^9, 3.856938755902177*^9}, {3.856939018633926*^9, 
   3.856939018928189*^9}, {3.8722328125770397`*^9, 3.8722328386118584`*^9}, {
   3.872233674731162*^9, 3.8722336806764193`*^9}, {3.8722347713329353`*^9, 
   3.872234775889866*^9}, {3.872234823992429*^9, 3.8722348281045423`*^9}, {
   3.87223503213338*^9, 3.8722350347501884`*^9}, {3.87223517644401*^9, 
   3.8722351788484087`*^9}, {3.8722365537498255`*^9, 3.872236554471265*^9}, {
   3.8722365899321632`*^9, 3.872236594830612*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"b734e046-35d2-4b40-ba68-89966012c47d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"visualization", " ", "of", " ", "results"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8722335378603463`*^9, 3.872233546211935*^9}},
 CellLabel->
  "In[1267]:=",ExpressionUUID->"059e0d68-6d55-43b4-9a0f-1437e745b237"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgeodesicsGFFG", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", "geodesicsGFFG", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{";;", 
          RowBox[{"-", "3"}]}]}], "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"Normal", "[", "geodesicsGFFG", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "2"}]}]}], "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"Normal", "[", "geodesicsGFFG", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"3", ";;"}]}], "]"}], "]"}]}], ")"}], "/", "3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endtracksFigGFFG", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"LineImageCoordinates", "[", 
         RowBox[{"image", ",", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
        "&"}], "/@", "avgeodesicsGFFG"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", ".003", "]"}], ",", "endtracksFigGFFG"}], 
      "}"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.830953853710662*^9, 3.830953875286275*^9}, {
   3.830953916614195*^9, 3.8309539457461967`*^9}, 3.8314544243784065`*^9, {
   3.831454461554757*^9, 3.8314544646824274`*^9}, {3.831527027499473*^9, 
   3.8315270311148796`*^9}, 3.8315382540097446`*^9, {3.831538450821371*^9, 
   3.8315384649241056`*^9}, {3.8315402728745947`*^9, 3.831540273426297*^9}, 
   3.8486736404304714`*^9, {3.8487237951281223`*^9, 3.848723877341494*^9}, {
   3.8487239139370937`*^9, 3.8487240057913213`*^9}, {3.85141117209011*^9, 
   3.851411185890672*^9}, {3.8514124058368177`*^9, 3.8514124134968324`*^9}, 
   3.8514126752440915`*^9, {3.8515754989697065`*^9, 3.85157551897958*^9}, {
   3.8520201120627155`*^9, 3.8520201145260906`*^9}, {3.852020212052109*^9, 
   3.8520202121806197`*^9}, {3.852020638305935*^9, 3.85202066817389*^9}, {
   3.85202074873542*^9, 3.8520208276181264`*^9}, {3.852020887900152*^9, 
   3.8520211560459976`*^9}, {3.8528058466759033`*^9, 
   3.8528058609167957`*^9}, {3.872232914663659*^9, 3.8722329241870823`*^9}, {
   3.872234428252185*^9, 3.8722344719230223`*^9}, {3.872236977503598*^9, 
   3.8722369779256277`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"aaec9932-598f-475d-a870-48e19b3da7ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"endtracksFigGFFG", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"LineImageCoordinates", "[", 
         RowBox[{"image", ",", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Normal", "[", "geodesicsGFFG", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cost", "[", 
     RowBox[{
      RowBox[{"MultiScaleVesselnessFilter", "[", 
       RowBox[{"multiscalecostLIFExtReg", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], ",", "100", ",", 
      "3"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "g0d", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-",
            "0.5"}], ",", 
          RowBox[{"Nx", "-", 
           RowBox[{
           "g0d", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+",
            "0.5"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], "-", "0.5"}], 
          ",", 
          RowBox[{"Nx", "-", 
           RowBox[{"g1dListForward", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
           "0.5"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", ".003", "]"}], ",", "endtracksFigGFFG"}], 
       "}"}], "}"}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8514128762523212`*^9, {3.8514132010815268`*^9, 3.8514132278618*^9}, 
   3.872232970955629*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"46396b79-29bd-4810-b37b-21809c65340a"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plotContoursR2oneColor", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "Height", "]"}], ",", "80", ",", "5", ",", 
       RowBox[{"Image", "@", "image"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Flatten", "@", "g0FM"}], ",", 
         RowBox[{"Flatten", "@", "g1FM"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotCurve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "[", "geodesicsGFFG", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Image", "@", "image"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Flatten", "@", "g0FM"}], ",", 
         RowBox[{"Flatten", "@", "g1FM"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8722330362504635`*^9, 3.872233058539839*^9}, {
  3.8722337820954723`*^9, 3.872233787551794*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"9aed4545-1f26-4595-8328-fc3a9984fc21"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of control sets", "Chapter",
 CellChangeTimes->{{3.872237176630587*^9, 
  3.872237188094208*^9}},ExpressionUUID->"7b6dece1-b0d1-4d35-9730-\
cdbb8e29439c"],

Cell[CellGroupData[{

Cell["Left-Invariant Model", "Section",
 CellChangeTimes->{{3.8722371932030544`*^9, 
  3.8722372170851903`*^9}},ExpressionUUID->"8c3c4afa-c772-4dac-9968-\
ec8a52295c78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"geodesicsLIFFGDiscrete", "=", 
   RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"geodesicsLIFFGDiscrete", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"geodesicsLIFFGDiscrete", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "/", 
     "s\[Theta]"}], "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.852031340917968*^9, 3.852031416804265*^9}, 
   3.8520328887280846`*^9, {3.852624707346801*^9, 3.8526247100467167`*^9}, {
   3.852632843285322*^9, 3.852632886460578*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"a8b10c89-e835-4635-8a67-d42c3551c606"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", ".01", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"endtracksFigLIFFG", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "}"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"imageToGraphicsCoordinates", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
           RowBox[{
            RowBox[{"Reverse", "[", 
             RowBox[{
              RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"#", ",", 
             RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
         "]"}]}], "}"}], "]"}], "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "90", "}"}], ",", 
      RowBox[{"{", "65", "}"}], ",", 
      RowBox[{"{", "42", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8526243786705165`*^9, 3.852624411075536*^9, {3.85262444479289*^9, 
   3.852624463657795*^9}, {3.872237556709156*^9, 3.872237558017368*^9}, {
   3.8722376996593103`*^9, 3.872237749371912*^9}, 3.8722381822295475`*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"121afb92-8c60-40d9-b429-efa9c03ff746"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imLIF", "=", 
   RowBox[{"Image", "[", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", ".01", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"White", ",", 
            RowBox[{"endtracksFigLIFFG", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Green", ",", 
           RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"imageToGraphicsCoordinates", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
              RowBox[{
               RowBox[{"Reverse", "[", 
                RowBox[{
                 RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"#", ",", 
                RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], 
             "]"}], "]"}]}], "}"}], "]"}], "&"}], "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "90", "}"}], ",", 
         RowBox[{"{", "65", "}"}], ",", 
         RowBox[{"{", "42", "}"}], ",", 
         RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8526246710626893`*^9, 3.8526246748557177`*^9}, {
  3.872238204611684*^9, 3.8722382067000923`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"340cd402-e72d-44c9-8f0c-596142e6e20c"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "@", "Gray"}], ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"geodesicsLIFFGDiscrete", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SphereAtGroupElementGraphicsLIF", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Reverse", "[", 
           RowBox[{"geodesicsLIFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
          "#", "\[RightDoubleBracket]"}], ")"}], ",", "0.1", ",", "1", ",", 
        "0.1", ",", "Nx", ",", "s\[Theta]", ",", "1"}], "]"}], "&"}], "@@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "90", "}"}], ",", 
       RowBox[{"{", "65", "}"}], ",", 
       RowBox[{"{", "42", "}"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"geodesicsLIFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
           "#", "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], "}"}], "]"}], 
     "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "90", "}"}], ",", 
      RowBox[{"{", "65", "}"}], ",", 
      RowBox[{"{", "42", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
   RowBox[{"figBaseTrack", "[", 
    RowBox[{"ImageResize", "[", 
     RowBox[{"imLIF", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", 
      RowBox[{"-", "5"}], ",", "4"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "40"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8526246830486755`*^9, 3.8526246831801853`*^9}, {
  3.85263294504618*^9, 3.8526329479646344`*^9}, {3.872238192658973*^9, 
  3.8722381954758244`*^9}, {3.8722389928531303`*^9, 3.8722390067037277`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"de2b7b81-6a78-40d3-b534-8cfe8fd6eebe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data-Driven Left-Invariant Model", "Section",
 CellChangeTimes->{{3.872237200296161*^9, 
  3.8722372149292784`*^9}},ExpressionUUID->"bea77af7-7d83-47c2-bb5c-\
40f7ab26c5b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgeodesicsGFFGDiscrete", "=", "avgeodesicsGFFG"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgeodesicsGFFGDiscrete", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"avgeodesicsGFFGDiscrete", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "/", 
     "s\[Theta]"}], "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.852031340917968*^9, 3.852031416804265*^9}, 
   3.8520328887280846`*^9, 3.87224156314305*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"947462eb-8c5d-4a4b-8ef3-2c0370faddd0"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", ".01", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"endtracksFigGFFG", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "}"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"imageToGraphicsCoordinates", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
           RowBox[{
            RowBox[{"Reverse", "[", 
             RowBox[{"avgeodesicsGFFGDiscrete", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"#", ",", 
             RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
         "]"}]}], "}"}], "]"}], "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "69", "}"}], ",", 
      RowBox[{"{", "60", "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", "85", "}"}], ","}], "*)"}], 
      RowBox[{"{", "35", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8722379434279175`*^9, 3.872237948372706*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"05691cb7-3d94-487e-8319-6cc43c6fe633"],

Cell[BoxData[
 RowBox[{
  RowBox[{"im", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".01", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"endtracksFigGFFG", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"imageToGraphicsCoordinates", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"#", ",", 
               RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}],
            "]"}]}], "}"}], "]"}], "&"}], "@@@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "69", "}"}], ",", 
        RowBox[{"{", "60", "}"}], ",", 
        RowBox[{"{", "35", "}"}], ",", 
        RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.85219397956839*^9, 3.8521939907685847`*^9}, {
  3.8722388885070515`*^9, 3.8722389082792177`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"b844c655-b6ef-46bc-91cf-86135c3e88aa"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"avgeodesicsGFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
           "#", "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], "}"}], "]"}], 
     "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "69", "}"}], ",", 
      RowBox[{"{", "60", "}"}], ",", 
      RowBox[{"{", "35", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "@", "Gray"}], ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"avgeodesicsGFFGDiscrete", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SphereAtGroupElementGraphicsGF", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Reverse", "[", 
           RowBox[{"avgeodesicsGFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"#", ";;", 
           RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], ")"}], ",", 
        "0.1", ",", "1", ",", "0.1", ",", "Nx", ",", "s\[Theta]", ",", "10"}],
        "]"}], "&"}], "@@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "69", "}"}], ",", 
       RowBox[{"{", "60", "}"}], ",", 
       RowBox[{"{", "35", "}"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"figBaseTrack", "[", 
    RowBox[{"ImageResize", "[", 
     RowBox[{"im", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"Reverse", "[", 
           RowBox[{"avgeodesicsGFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"Reverse", "[", 
            RowBox[{"avgeodesicsGFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"avgeodesicsGFFGDiscrete", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"avgeodesicsGFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]",
               "#", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Reverse", "[", 
                RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], 
               "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], "+", 
              RowBox[{"20", "*", 
               RowBox[{"Normalize", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"#", ";;", 
                    RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], 
                   "]"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "&"}], "@@@", 
       RowBox[{"{", 
        RowBox[{"{", "60", "}"}], "}"}]}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", 
      RowBox[{"-", "5"}], ",", "4"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "40"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.852195032030024*^9, 3.852195051831386*^9}, {
   3.8522874567287564`*^9, 3.8522874579112234`*^9}, {3.852287506822593*^9, 
   3.8522876939175744`*^9}, {3.852287730364337*^9, 3.8522878352638702`*^9}, {
   3.8522879796166105`*^9, 3.8522880231073833`*^9}, {3.8522880690250883`*^9, 
   3.8522880728241796`*^9}, {3.852288132986428*^9, 3.8522881388393564`*^9}, {
   3.8522881759535275`*^9, 3.8522881776081066`*^9}, {3.872239088268265*^9, 
   3.8722391019577365`*^9}, 3.872239136420088*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"511995d6-313b-47b5-920d-0e7c90190b1c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of exponential curves", "Chapter",
 CellChangeTimes->{{3.8722391848695607`*^9, 
  3.8722391911959105`*^9}},ExpressionUUID->"6e55f241-c565-48e9-81dd-\
7aa206703c1b"],

Cell[CellGroupData[{

Cell["Left-Invariant Model", "Section",
 CellChangeTimes->{{3.8722391936223946`*^9, 
  3.872239197155447*^9}},ExpressionUUID->"e1cceb8c-11bd-4450-a6fb-\
c72a16d72b27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gList3D", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gList3D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "=", 
   RowBox[{"Round", "[", 
    RowBox[{"gList3D", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gdList3D", "=", "gList3D"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gdList3D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"gList3D", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "*", 
        RowBox[{"No", "/", 
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}]}]}], "+", "1"}], "]"}], ",", "No", 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gList3D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gdList3D", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", "1"}], ")"}], "*", "2", 
    RowBox[{"\[Pi]", "/", "No"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.852355839225339*^9, 3.852355945379465*^9}, {
   3.852355999988157*^9, 3.8523560576009283`*^9}, {3.85235613319405*^9, 
   3.8523561340750275`*^9}, 3.852366073173009*^9, 3.872239505081314*^9, {
   3.872239549511657*^9, 3.8722395645707936`*^9}, 3.8722398005446444`*^9, 
   3.872239887685322*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"4066ce58-4430-4516-a327-5bcd60b5985d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"track", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", 
      RowBox[{"osGFCost", "[", "\"\<FullData\>\"", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "gdList3D", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"track", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"gdList3D", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"gdList3D", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"gdList3D", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}], "=", "1"}], 
    ";"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.852364235690797*^9, 3.852364345195803*^9}, {
  3.8523652663040857`*^9, 3.8523652839756627`*^9}, {3.852365361160462*^9, 
  3.8523653622947297`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"f3b871b0-98c5-48cb-90c7-64f60e9a13c5"],

Cell[BoxData[
 RowBox[{"im", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".01", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"endtracksFigLIFFG", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "}"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"imageToGraphicsCoordinates", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{
                RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"#", ",", 
               RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}],
            "]"}]}], "}"}], "]"}], "&"}], "@@@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "90", "}"}], ",", 
        RowBox[{"{", "65", "}"}], ",", 
        RowBox[{"{", "42", "}"}], ",", 
        RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotGaugeFrameFG", "[", 
      RowBox[{"track", ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Reverse", "[", 
             RowBox[{
              RowBox[{"Normal", "[", "geodesicsLIFFG", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
            "#", "\[RightDoubleBracket]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "&"}], "@@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "42", "}"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "2", ",", "20", ",", 
       RowBox[{"Image", "@", "image"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.872239246525998*^9, {3.872239411290417*^9, 3.8722394202169523`*^9}, {
   3.872239612733079*^9, 3.872239655299234*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"59a79b88-be81-4d2a-826f-88196f455c85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"t_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"No", "/", 
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}]}]}], "+", "1"}]}], "}"}], "&"}], 
      "@", 
      RowBox[{"expCurve", "[", 
       RowBox[{
        RowBox[{
        "gList3D", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "t"}], "]"}]}], "&"}],
     "@@@", 
    RowBox[{"{", 
     RowBox[{"{", "n", "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8523764244439535`*^9, 3.852376441337819*^9}, {
  3.8523764770946536`*^9, 3.852376508617862*^9}, {3.872239986741614*^9, 
  3.872239989615094*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"bd824ea1-e7be-442f-969e-68e026547514"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"geodesicsLIFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
           "#", "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], "}"}], "]"}], 
     "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "90", "}"}], ",", 
      RowBox[{"{", "65", "}"}], ",", 
      RowBox[{"{", "42", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "@", "Gray"}], ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"geodesicsLIFFGDiscrete", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"figBaseTrack", "[", 
    RowBox[{"ImageResize", "[", 
     RowBox[{"im", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"Reverse", "[", 
           RowBox[{"geodesicsLIFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"Reverse", "[", 
            RowBox[{"geodesicsLIFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"geodesicsLIFFGDiscrete", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"geodesicsLIFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"10", ",", "10"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"10", ",", "10"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"10", ",", "42"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"10", ",", "42"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "42"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "42"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"No", "/", 
               RowBox[{"(", 
                RowBox[{"2", "\[Pi]"}], ")"}]}]}], "+", "1"}]}], "}"}], "&"}],
          "@", 
         RowBox[{"expCurve", "[", 
          RowBox[{
           RowBox[{
           "gList3D", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "t"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"-", "20"}], "/", "2"}], ",", 
          RowBox[{"20", "/", "2"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.008", "]"}], ",", "Red"}], "}"}]}]}], 
       "]"}]}], "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "42", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", 
      RowBox[{"-", "5"}], ",", "4"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "40"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.852195032030024*^9, 3.852195051831386*^9}, {
   3.8522874567287564`*^9, 3.8522874579112234`*^9}, {3.852287506822593*^9, 
   3.8522876939175744`*^9}, {3.852287730364337*^9, 3.8522878352638702`*^9}, {
   3.8522879796166105`*^9, 3.8522880231073833`*^9}, {3.8522880690250883`*^9, 
   3.8522880728241796`*^9}, {3.852288132986428*^9, 3.8522881388393564`*^9}, {
   3.8522881759535275`*^9, 3.8522881776081066`*^9}, {3.8522885018383074`*^9, 
   3.852288590949374*^9}, {3.8522886218312125`*^9, 3.852288641196411*^9}, 
   3.852290948810172*^9, {3.852291085107498*^9, 3.852291113216837*^9}, {
   3.8522911797190685`*^9, 3.8522912259601507`*^9}, {3.8522912885055056`*^9, 
   3.8522912921371484`*^9}, {3.8522913496675267`*^9, 3.852291375710148*^9}, {
   3.8522917720231757`*^9, 3.852291801940674*^9}, {3.852291844069515*^9, 
   3.8522918517968607`*^9}, {3.852291901057296*^9, 3.8522919289351587`*^9}, {
   3.85235522281559*^9, 3.8523552270238314`*^9}, {3.852366353027111*^9, 
   3.852366357240373*^9}, {3.852366418412731*^9, 3.852366422679346*^9}, {
   3.8523763466394315`*^9, 3.8523764215936127`*^9}, {3.8722396835169287`*^9, 
   3.8722397480101523`*^9}, {3.872239831805812*^9, 3.8722398620185113`*^9}, {
   3.872240028581544*^9, 3.8722400851535096`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"e486a1f5-6d70-4a9b-9b16-133d6b6c0367"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data-Driven Left-Invariant Model", "Section",
 CellChangeTimes->{{3.8722392005974283`*^9, 
  3.8722392052033997`*^9}},ExpressionUUID->"94ecf103-e804-459f-b9e7-\
21950c41da67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gList3D", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"avgeodesicsGFFG", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gList3D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "=", 
   RowBox[{"Round", "[", 
    RowBox[{"gList3D", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gdList3D", "=", "gList3D"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gdList3D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"gList3D", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "*", 
        RowBox[{"No", "/", 
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}]}]}], "+", "1"}], "]"}], ",", "No", 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gList3D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gdList3D", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", "1"}], ")"}], "*", "2", 
    RowBox[{"\[Pi]", "/", "No"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.852355839225339*^9, 3.852355945379465*^9}, {
   3.852355999988157*^9, 3.8523560576009283`*^9}, {3.85235613319405*^9, 
   3.8523561340750275`*^9}, 3.852366073173009*^9, 3.872239505081314*^9, {
   3.872239549511657*^9, 3.8722395645707936`*^9}, 3.8722398005446444`*^9, 
   3.872239887685322*^9, 3.872240523559613*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"0e7b142f-8b4a-4804-8576-b447fbdfa059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"track", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", 
      RowBox[{"osGFCost", "[", "\"\<FullData\>\"", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "gdList3D", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"track", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"gdList3D", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"gdList3D", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"gdList3D", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}], "=", "1"}], 
    ";"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.852364235690797*^9, 3.852364345195803*^9}, {
  3.8523652663040857`*^9, 3.8523652839756627`*^9}, {3.852365361160462*^9, 
  3.8523653622947297`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"b1eee52d-654a-4185-aeb8-48b31df3e943"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TangentH", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.852289030515588*^9, 3.8522891002418184`*^9}, {
  3.852289523297454*^9, 3.852289526081129*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"43c47a95-7e37-4491-bad3-a78d6bbc9bc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TangentH", "[", 
    RowBox[{"[", 
     RowBox[{"68", ",", "31", ",", "All", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"avgeodesicsGFFG", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"#", ";;", 
          RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "&"}], 
      "@@@", 
      RowBox[{"{", 
       RowBox[{"{", "69", "}"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TangentH", "[", 
    RowBox[{"[", 
     RowBox[{"59", ",", "33", ",", "All", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"avgeodesicsGFFG", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"#", ";;", 
          RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "&"}], 
      "@@@", 
      RowBox[{"{", 
       RowBox[{"{", "60", "}"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TangentH", "[", 
    RowBox[{"[", 
     RowBox[{"53", ",", "43", ",", "All", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"avgeodesicsGFFG", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"#", ";;", 
          RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "&"}], 
      "@@@", 
      RowBox[{"{", 
       RowBox[{"{", "35", "}"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TangentH", "[", 
    RowBox[{"[", 
     RowBox[{"19", ",", "64", ",", "All", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"avgeodesicsGFFG", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"#", ";;", 
          RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "&"}], 
      "@@@", 
      RowBox[{"{", 
       RowBox[{"{", "10", "}"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8522901963146954`*^9, {3.8522916020983906`*^9, 3.852291603045955*^9}, {
   3.8722403717650404`*^9, 3.872240423378978*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"728ab73b-fed6-433d-a5c8-8fbb2db4d7e5"],

Cell[BoxData[
 RowBox[{"im", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Image", "@", "image"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".01", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"endtracksFigGFFG", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "}"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"imageToGraphicsCoordinates", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Nx", ",", "Ny"}], "}"}], ",", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"#", ",", 
               RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}],
            "]"}]}], "}"}], "]"}], "&"}], "@@@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "69", "}"}], ",", 
        RowBox[{"{", "60", "}"}], ",", 
        RowBox[{"{", "35", "}"}], ",", 
        RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotGaugeFrameFGNew", "[", 
      RowBox[{"track", ",", "TangentH", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Reverse", "[", 
             RowBox[{"avgeodesicsGFFG", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
            "#", "\[RightDoubleBracket]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "&"}], "@@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", "60", "}"}]}], "}"}]}], ",", "2", ",", "20", ",", 
       RowBox[{"Image", "@", "image"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8522032034400225`*^9, 3.8522032302926164`*^9}, {
   3.852290904975478*^9, 3.8522909052710443`*^9}, 3.872240490041429*^9},
 CellLabel->
  "In[192]:=",ExpressionUUID->"4d7152e2-198e-4c10-9d40-face35ed5c1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"t_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"No", "/", 
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}]}]}], "+", "1"}]}], "}"}], "&"}], 
      "@", 
      RowBox[{"expCurve", "[", 
       RowBox[{
        RowBox[{
        "gList3D", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
         RowBox[{"RotationMatrix", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{
             "gList3D", "\[LeftDoubleBracket]", "#", 
              "\[RightDoubleBracket]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"Differences", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"avgeodesicsGFFG", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"#", ";;", 
              RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "t"}], "]"}]}], 
     "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{"{", "n", "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852291044335227*^9, 3.852291067159342*^9}, {
   3.8522911359538684`*^9, 3.852291139688334*^9}, {3.852291451635138*^9, 
   3.85229146389535*^9}, {3.8522915195056744`*^9, 3.8522915233026285`*^9}, {
   3.8522917045200768`*^9, 3.8522917092928133`*^9}, 3.852366388829926*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"f63289a6-5b45-4503-b467-12cce5c7a92a"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", 
            RowBox[{"avgeodesicsGFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
           "#", "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], "}"}], "]"}], 
     "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "69", "}"}], ",", 
      RowBox[{"{", "60", "}"}], ",", 
      RowBox[{"{", "35", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "@", "Gray"}], ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"avgeodesicsGFFGDiscrete", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"figBaseTrack", "[", 
    RowBox[{"ImageResize", "[", 
     RowBox[{"im", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "image", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"Reverse", "[", 
           RowBox[{"avgeodesicsGFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"Reverse", "[", 
            RowBox[{"avgeodesicsGFFGDiscrete", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"avgeodesicsGFFGDiscrete", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"avgeodesicsGFFGDiscrete", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"10", ",", "10"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"10", ",", "10"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"10", ",", "60"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"10", ",", "60"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "60"}], "]"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "60"}], "]"}], 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]",
               "#", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Reverse", "[", 
                RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], 
               "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], "+", 
              RowBox[{"15", "*", 
               RowBox[{"Normalize", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"avgeodesicsGFFGDiscrete", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"#", ";;", 
                    RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], 
                   "]"}], ")"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "&"}], "@@@", 
       RowBox[{"{", 
        RowBox[{"{", "60", "}"}], "}"}]}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"No", "/", 
               RowBox[{"(", 
                RowBox[{"2", "\[Pi]"}], ")"}]}]}], "+", "1"}]}], "}"}], "&"}],
          "@", 
         RowBox[{"expCurve", "[", 
          RowBox[{
           RowBox[{
           "gList3D", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
            RowBox[{"RotationMatrix", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                RowBox[{
                "gList3D", "\[LeftDoubleBracket]", "#", 
                 "\[RightDoubleBracket]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
            RowBox[{"Normalize", "[", 
             RowBox[{
              RowBox[{"Differences", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", 
                 RowBox[{"avgeodesicsGFFG", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"#", ";;", 
                 RowBox[{"#", "+", "1"}]}], "\[RightDoubleBracket]"}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "t"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"-", "20"}], "/", "2"}], ",", 
          RowBox[{"20", "/", "2"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.008", "]"}], ",", "Red"}], "}"}]}]}], 
       "]"}]}], "&"}], "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "60", "}"}], ",", 
      RowBox[{"{", "10", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", 
      RowBox[{"-", "5"}], ",", "4"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "40"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.852195032030024*^9, 3.852195051831386*^9}, {
   3.8522874567287564`*^9, 3.8522874579112234`*^9}, {3.852287506822593*^9, 
   3.8522876939175744`*^9}, {3.852287730364337*^9, 3.8522878352638702`*^9}, {
   3.8522879796166105`*^9, 3.8522880231073833`*^9}, {3.8522880690250883`*^9, 
   3.8522880728241796`*^9}, {3.852288132986428*^9, 3.8522881388393564`*^9}, {
   3.8522881759535275`*^9, 3.8522881776081066`*^9}, {3.8522885018383074`*^9, 
   3.852288590949374*^9}, {3.8522886218312125`*^9, 3.852288641196411*^9}, 
   3.852290948810172*^9, {3.852291085107498*^9, 3.852291113216837*^9}, {
   3.8522911797190685`*^9, 3.8522912259601507`*^9}, {3.8522912885055056`*^9, 
   3.8522912921371484`*^9}, {3.8522913496675267`*^9, 3.852291375710148*^9}, {
   3.8522917720231757`*^9, 3.852291801940674*^9}, {3.852291844069515*^9, 
   3.8522918517968607`*^9}, {3.852291901057296*^9, 3.8522919289351587`*^9}, {
   3.85235522281559*^9, 3.8523552270238314`*^9}, {3.852366353027111*^9, 
   3.852366357240373*^9}, {3.852366418412731*^9, 3.852366422679346*^9}, {
   3.872240542578437*^9, 3.8722406029819274`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"efcea28b-1541-4635-89ba-02e16f7a9b29"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 855.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
InputAliases->Join[
  Association["intt" -> RowBox[{"\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", 
        RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
      SubsuperscriptBox[
      "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
      RowBox[{"\[Placeholder]", 
        RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> RowBox[{
      UnderscriptBox["\[Integral]", 
       RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
      "\[Placeholder]"}], "sumt" -> RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
       "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
       "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
      SubscriptBox["\[PartialD]", "\[SelectionPlaceholder]"], 
      "\[Placeholder]"}], "cbrt" -> 
   RadicalBox[
    "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
     None], "surd" -> 
   RadicalBox[
    "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
     MultilineFunction -> None], "ket" -> 
   TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
   TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
   TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
   "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
   "grad" -> RowBox[{
      SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
   "del." -> RowBox[{
      SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
      "\[Placeholder]"}], "delx" -> RowBox[{
      SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
      "\[Placeholder]"}], "del2" -> RowBox[{
      SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
      "\[Placeholder]"}], "kd" -> 
   TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
   TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
   "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
   TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
   TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
   TemplateBox[{}, "PositiveIntegers"], "npints" -> 
   TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
   TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
   TemplateBox[{}, "NegativeIntegers"], "prats" -> 
   TemplateBox[{}, "PositiveRationals"], "nprats" -> 
   TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
   TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
   TemplateBox[{}, "NegativeRationals"], "preals" -> 
   TemplateBox[{}, "PositiveReals"], "npreals" -> 
   TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
   TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
   TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
      UnderscriptBox["\[Limit]", 
       RowBox[{"\[SelectionPlaceholder]", 
         UnderscriptBox["\[Rule]", 
          TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
   "dMlim" -> RowBox[{
      UnderscriptBox["\[MaxLimit]", 
       RowBox[{"\[SelectionPlaceholder]", 
         UnderscriptBox["\[Rule]", 
          TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
   "dmlim" -> RowBox[{
      UnderscriptBox["\[MinLimit]", 
       RowBox[{"\[SelectionPlaceholder]", 
         UnderscriptBox["\[Rule]", 
          TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
   "tue" -> OverscriptBox["\[UndirectedEdge]", "\[Placeholder]"], "tde" -> 
   OverscriptBox["\[DirectedEdge]", "\[Placeholder]"], "cB" -> 
   TemplateBox[{}, "CombinatorB"], "cC" -> TemplateBox[{}, "CombinatorC"], 
   "cI" -> TemplateBox[{}, "CombinatorI"], "cK" -> 
   TemplateBox[{}, "CombinatorK"], "cS" -> TemplateBox[{}, "CombinatorS"], 
   "cW" -> TemplateBox[{}, "CombinatorW"], "cY" -> 
   TemplateBox[{}, "CombinatorY"], "notation" -> RowBox[{"Notation", "[", 
      RowBox[{
        TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
        "\[DoubleLongLeftRightArrow]", " ", 
        TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
   "notation>" -> RowBox[{"Notation", "[", 
      RowBox[{
        TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
        "\[DoubleLongRightArrow]", " ", 
        TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
   "notation<" -> RowBox[{"Notation", "[", 
      RowBox[{
        TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
        "\[DoubleLongLeftArrow]", " ", 
        TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
   "symb" -> RowBox[{"Symbolize", "[", 
      TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
   "infixnotation" -> RowBox[{"InfixNotation", "[", 
      RowBox[{
        TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
        "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
      RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
        TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
   "pattwraper" -> 
   TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
   "madeboxeswraper" -> 
   TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "=<" -> 
   OverscriptBox["=", "\:02c2"], ":=<" -> OverscriptBox[":=", "\:02c2"]], {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}, {
  "=<" -> OverscriptBox["=", "\:02c2"]}, {
  ":=<" -> OverscriptBox[":=", "\:02c2"]}],
Magnification:>0.9 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"07e7416a-87d3-4cac-aee1-9d2fb20f0b24"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 399, 8, 52, "Text",ExpressionUUID->"9dd82315-bb50-4063-9c7f-bb21af13c9f0"],
Cell[960, 30, 410, 8, 31, "Text",ExpressionUUID->"499f0e6b-0979-4cbe-a1d4-73b5fb239c3e"],
Cell[CellGroupData[{
Cell[1395, 42, 171, 3, 88, "Title",ExpressionUUID->"2ae47f0c-5509-454d-87ad-e6a91c53227a"],
Cell[CellGroupData[{
Cell[1591, 49, 158, 3, 62, "Chapter",ExpressionUUID->"8b7f47a5-edfc-427a-83c4-3fee8b3c77a2"],
Cell[CellGroupData[{
Cell[1774, 56, 165, 3, 59, "Section",ExpressionUUID->"27348178-5fe2-4e3b-be89-5f2a13bd6751"],
Cell[1942, 61, 3438, 98, 144, "Input",ExpressionUUID->"c2daf8b1-18d4-4962-84b8-d28bb86385ac",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[5417, 164, 176, 3, 47, "Section",ExpressionUUID->"5529fa92-3844-43d6-9353-363e6a442d91"],
Cell[5596, 169, 371, 7, 58, "Input",ExpressionUUID->"04ae6555-7343-4d24-a41c-b6ba8ac89786",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[5992, 180, 169, 3, 48, "Subsection",ExpressionUUID->"dc946f46-44a0-4907-8893-39e7c75d2827"],
Cell[6164, 185, 220, 5, 31, "Text",ExpressionUUID->"0034c5e3-9bdb-4259-bfbc-2f1f26a52d1f"],
Cell[6387, 192, 740, 18, 26, "Input",ExpressionUUID->"9c25103f-7af3-4a9d-85ac-c2616824b802"]
}, Closed]],
Cell[CellGroupData[{
Cell[7164, 215, 210, 4, 34, "Subsection",ExpressionUUID->"2e5616d1-4d34-4d77-a212-8f956fba68eb"],
Cell[7377, 221, 286, 7, 31, "Text",ExpressionUUID->"b0443197-75bd-4787-9ab8-f6775b214181"],
Cell[7666, 230, 1620, 40, 98, "Text",ExpressionUUID->"43f15f56-95c5-4a7c-93a5-8fe10c0857ba"],
Cell[9289, 272, 12341, 307, 640, "Input",ExpressionUUID->"02a6392f-8e99-4909-881f-808893820b78"],
Cell[21633, 581, 2970, 64, 215, "Input",ExpressionUUID->"17cbbd94-5eb0-46c4-9297-30aaca444dda"]
}, Closed]],
Cell[CellGroupData[{
Cell[24640, 650, 174, 3, 34, "Subsection",ExpressionUUID->"b860dd22-2eef-4b64-af5d-3e5753b1eb1e"],
Cell[24817, 655, 292, 6, 31, "Text",ExpressionUUID->"017d78fa-c8b5-4350-b57a-2c41d73dc72a"],
Cell[25112, 663, 6835, 147, 366, "Input",ExpressionUUID->"35279bcb-dabf-45a4-9d3d-49b03062565f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[31996, 816, 185, 3, 47, "Section",ExpressionUUID->"05c94f35-2d6f-4117-9714-347fbafb5beb"],
Cell[CellGroupData[{
Cell[32206, 823, 281, 4, 48, "Subsection",ExpressionUUID->"31432934-4082-4148-8c18-312af627e9e2"],
Cell[32490, 829, 12373, 263, 852, "Input",ExpressionUUID->"35ba28e3-3d15-4e60-86e4-9ad84b7180a2"],
Cell[44866, 1094, 993, 26, 93, "Input",ExpressionUUID->"30d18482-3c30-46ea-ad48-6c9f34196b18"],
Cell[45862, 1122, 794, 20, 93, "Input",ExpressionUUID->"127429e6-dc56-4ffd-81e2-982ed170e3fe"]
}, Closed]],
Cell[CellGroupData[{
Cell[46693, 1147, 180, 3, 34, "Subsection",ExpressionUUID->"1b6405eb-709d-42fe-842c-86bd91672c29"],
Cell[46876, 1152, 10199, 232, 923, "Input",ExpressionUUID->"a47cd0b7-24a8-4805-8333-e2b7f04733bc"],
Cell[57078, 1386, 4705, 106, 490, "Input",ExpressionUUID->"7a559835-ad9d-4792-af6b-1d0e4bca6fc9"],
Cell[61786, 1494, 4785, 108, 490, "Input",ExpressionUUID->"19eded98-177c-4d6f-b0a8-ad290de4b64a"]
}, Closed]],
Cell[CellGroupData[{
Cell[66608, 1607, 173, 3, 34, "Subsection",ExpressionUUID->"b7351762-1479-4425-b75d-9e90fb4fa5da"],
Cell[66784, 1612, 13828, 292, 991, "Input",ExpressionUUID->"6466bb50-e25d-444d-8e59-5de976d91c58"],
Cell[80615, 1906, 11220, 250, 1037, "Input",ExpressionUUID->"17d616ee-e1aa-4ac0-8bea-8e98a2a23862"],
Cell[91838, 2158, 10025, 234, 999, "Input",ExpressionUUID->"585ba197-5612-4f7f-a957-be538121ead0"]
}, Closed]],
Cell[CellGroupData[{
Cell[101900, 2397, 235, 4, 34, "Subsection",ExpressionUUID->"7ce36ea5-c8a6-49de-8150-c958450ed9f6"],
Cell[102138, 2403, 7877, 175, 695, "Input",ExpressionUUID->"7ae2960a-8e97-465f-87da-f5f03a3da6b1"]
}, Closed]],
Cell[CellGroupData[{
Cell[110052, 2583, 229, 4, 34, "Subsection",ExpressionUUID->"56d4099d-6f2f-4c55-8f43-1b707235aa0b"],
Cell[110284, 2589, 2531, 63, 257, "Input",ExpressionUUID->"ce080c9d-ee05-4963-97c1-b322628921ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[112852, 2657, 175, 3, 34, "Subsection",ExpressionUUID->"3238a14c-a77a-4a5c-9acc-4dd9825d7c82"],
Cell[113030, 2662, 1890, 50, 146, "Input",ExpressionUUID->"d68660dd-804d-4f74-9da9-6f109cac33f2"],
Cell[114923, 2714, 879, 25, 43, "Input",ExpressionUUID->"29878f30-7f3e-45fc-98f4-7c5b297a3bd3"],
Cell[115805, 2741, 3713, 89, 198, "Input",ExpressionUUID->"da2baecc-1216-44d9-b504-511a5be70065"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119567, 2836, 160, 3, 47, "Section",ExpressionUUID->"f79be2d6-f4ef-49e1-ba22-2999b37b08d7"],
Cell[CellGroupData[{
Cell[119752, 2843, 350, 5, 48, "Subsection",ExpressionUUID->"2fcaebda-ecde-4578-a687-9714372f53b3"],
Cell[120105, 2850, 2002, 38, 129, "Input",ExpressionUUID->"32b9e00d-c277-420c-a53f-82542346a3d9"],
Cell[122110, 2890, 1313, 22, 215, "Input",ExpressionUUID->"5baf0844-3d82-466f-8697-40943fb27883"],
Cell[123426, 2914, 4736, 78, 438, "Input",ExpressionUUID->"c4826bc7-a77a-4674-9db5-b2ae47d9a71f"],
Cell[128165, 2994, 10110, 162, 2217, "Input",ExpressionUUID->"42c24da1-a602-4a12-9558-306e17f55e28"]
}, Closed]],
Cell[CellGroupData[{
Cell[138312, 3161, 168, 3, 34, "Subsection",ExpressionUUID->"cbf4121b-d803-49cc-8ed4-9f6d11a46a6c"],
Cell[CellGroupData[{
Cell[138505, 3168, 177, 3, 40, "Subsubsection",ExpressionUUID->"e4ae0364-4b01-4404-83a3-71490a9c4dcd"],
Cell[138685, 3173, 266, 6, 25, "Input",ExpressionUUID->"76c1c179-01c7-422f-b15b-fdbfb27b74bf"],
Cell[138954, 3181, 1496, 33, 111, "Input",ExpressionUUID->"2569c990-a3d7-487f-a042-bf5162c90551"],
Cell[140453, 3216, 939, 21, 25, "Input",ExpressionUUID->"23c12048-bcea-4bc0-b0b8-ba711c9e7b5d"],
Cell[141395, 3239, 2423, 55, 129, "Input",ExpressionUUID->"15248963-2b01-4ef4-82bb-3891f00c8cda"]
}, Closed]],
Cell[CellGroupData[{
Cell[143855, 3299, 362, 5, 33, "Subsubsection",ExpressionUUID->"5bc4dd7a-5c1b-47e9-8256-735d08f3145c"],
Cell[144220, 3306, 5523, 122, 197, "Input",ExpressionUUID->"703a566a-fc47-489c-a8b8-788cc26d1531"],
Cell[149746, 3430, 2644, 65, 136, "Input",ExpressionUUID->"5e34567a-7e56-4602-bf92-02ac127404c7"],
Cell[152393, 3497, 3048, 75, 153, "Input",ExpressionUUID->"1ee1bcdc-08ab-4086-a2f7-b56a466140bb"]
}, Closed]],
Cell[CellGroupData[{
Cell[155478, 3577, 317, 5, 33, "Subsubsection",ExpressionUUID->"f72bfae4-80cd-4cf8-b59b-f37f839e888e"],
Cell[155798, 3584, 6319, 138, 207, "Input",ExpressionUUID->"f1659fd3-16fe-45e6-9fb8-e04e8b1ef736"],
Cell[162120, 3724, 6345, 139, 205, "Input",ExpressionUUID->"b6fd18c1-646c-481f-930e-ff5bedc7fbc8"],
Cell[168468, 3865, 5806, 142, 257, "Input",ExpressionUUID->"80c493c1-651d-4ecc-a607-63342ddd13e1"],
Cell[174277, 4009, 4119, 106, 206, "Input",ExpressionUUID->"cec6993f-b906-40f8-b542-c5eeae5aadeb"]
}, Closed]],
Cell[CellGroupData[{
Cell[178433, 4120, 409, 6, 33, "Subsubsection",ExpressionUUID->"63d7ffe4-7bef-496c-a557-3dc03c771cfe"],
Cell[178845, 4128, 6701, 153, 205, "Input",ExpressionUUID->"f6a7a7ad-a370-46f1-a339-eb7da3056804"],
Cell[185549, 4283, 2326, 59, 106, "Input",ExpressionUUID->"49cc19f6-1a77-43f1-bdfc-9290f93c410c"],
Cell[187878, 4344, 2770, 70, 123, "Input",ExpressionUUID->"4d7445f0-fef4-4428-9e4a-aec74a4b290f"]
}, Closed]],
Cell[CellGroupData[{
Cell[190685, 4419, 360, 5, 33, "Subsubsection",ExpressionUUID->"20658594-3144-4461-8fff-b7f6d1d8d4f1"],
Cell[191048, 4426, 4961, 130, 144, "Input",ExpressionUUID->"7cccfbdc-b8a5-4252-93fc-fc2b3c3c8aaa"],
Cell[196012, 4558, 6607, 165, 185, "Input",ExpressionUUID->"d64562d9-e41c-4f33-94ca-45267a6414b8"],
Cell[202622, 4725, 6503, 163, 189, "Input",ExpressionUUID->"1e9f1a11-52f4-4bd2-8063-f2cf5399bf61"]
}, Closed]],
Cell[CellGroupData[{
Cell[209162, 4893, 187, 3, 33, "Subsubsection",ExpressionUUID->"cfbce3e9-7223-4fa5-95da-6b3e3aa2a144"],
Cell[209352, 4898, 1305, 34, 94, "Input",ExpressionUUID->"b7b08220-16e7-4bf1-a8a2-55bc60abd224"]
}, Closed]],
Cell[CellGroupData[{
Cell[210694, 4937, 176, 3, 33, "Subsubsection",ExpressionUUID->"350e6411-1abf-439d-ad46-ebcb0c4ba6d6"],
Cell[210873, 4942, 398, 8, 31, "Text",ExpressionUUID->"17ecf257-6e1e-410e-ab4f-64f55e1a6f81"],
Cell[211274, 4952, 7882, 196, 342, "Input",ExpressionUUID->"8b40f1da-d718-411e-a9a5-05327db81c63"],
Cell[219159, 5150, 10039, 246, 498, "Input",ExpressionUUID->"4ae58569-d60e-4458-b6ae-e85170e56e6d"],
Cell[229201, 5398, 267, 6, 31, "Text",ExpressionUUID->"95838915-4074-4e7f-8131-247f8c396706"],
Cell[229471, 5406, 6855, 173, 309, "Input",ExpressionUUID->"af97668e-c174-4b75-97c5-6c3383dc1f7c"],
Cell[236329, 5581, 8923, 225, 431, "Input",ExpressionUUID->"8f47d18d-4fd9-4c3c-90f9-c25ef880bd7b"],
Cell[245255, 5808, 361, 7, 31, "Text",ExpressionUUID->"4f7c751a-008d-4f9b-8c93-106fcaf49d72"],
Cell[245619, 5817, 6679, 168, 299, "Input",ExpressionUUID->"7895af50-cf61-4a56-ac44-4877d4fd63da"],
Cell[252301, 5987, 5697, 144, 239, "Input",ExpressionUUID->"22a79dc4-a316-4310-a784-673db749a6be"],
Cell[258001, 6133, 8158, 199, 361, "Input",ExpressionUUID->"f47010f5-f82c-4e79-b008-d1db51a05268"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[266220, 6339, 162, 3, 47, "Section",ExpressionUUID->"fe2863e6-450e-4d35-9d02-32c3f7e292bf"],
Cell[266385, 6344, 1704, 45, 43, "Input",ExpressionUUID->"1009fc51-ca87-4039-bcb6-b04b44705773"],
Cell[CellGroupData[{
Cell[268114, 6393, 156, 3, 48, "Subsection",ExpressionUUID->"ac375fd0-2341-45f1-9f78-09dd7cf97777"],
Cell[268273, 6398, 5528, 118, 301, "Input",ExpressionUUID->"576fe36d-6313-4923-9944-a2d41f892302"],
Cell[273804, 6518, 8164, 202, 490, "Input",ExpressionUUID->"3aa7b486-9c62-4018-84f7-88bc0ae9be11"]
}, Closed]],
Cell[CellGroupData[{
Cell[282005, 6725, 162, 3, 34, "Subsection",ExpressionUUID->"8289883a-4ca1-4298-9e7e-a14ecf77d852"],
Cell[282170, 6730, 2506, 64, 87, "Input",ExpressionUUID->"b050779d-aa25-4cd5-886e-9723070f4b71"],
Cell[284679, 6796, 5067, 107, 220, "Input",ExpressionUUID->"e4b8341c-28be-4813-9c45-aedee974d661"]
}, Closed]],
Cell[CellGroupData[{
Cell[289783, 6908, 168, 3, 34, "Subsection",ExpressionUUID->"b8a00dca-8c01-4242-afbd-c1471cd86bfd"],
Cell[289954, 6913, 3664, 99, 199, "Input",ExpressionUUID->"49f7bf85-0d9c-4771-b843-912f3c374e59"],
Cell[293621, 7014, 7473, 171, 347, "Input",ExpressionUUID->"009df119-22f8-4a2f-be23-5c2ce1e26725"],
Cell[301097, 7187, 8273, 186, 347, "Input",ExpressionUUID->"4993f597-d7f4-49a9-a2c4-35e8bccbe72f"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[309431, 7380, 156, 3, 53, "Chapter",ExpressionUUID->"392c05ac-415a-4edf-bff4-16d89cf117e1"],
Cell[309590, 7385, 129395, 2128, 295, "Input",ExpressionUUID->"c0d5f110-3e56-4d63-8f1d-345d924f4b90"],
Cell[438988, 9515, 919, 23, 43, "Input",ExpressionUUID->"245746d7-4b7d-4f60-81fd-1889a4bacf55"],
Cell[439910, 9540, 1040, 27, 26, "Input",ExpressionUUID->"087c2582-76dc-49d3-af69-aee76d1f833c"],
Cell[440953, 9569, 1025, 20, 43, "Input",ExpressionUUID->"da0525ac-f416-4484-8a4d-40f94db3fbe8"],
Cell[441981, 9591, 1039, 28, 60, "Input",ExpressionUUID->"95adb631-9df7-4195-a3d8-73d141853be1"],
Cell[443023, 9621, 1789, 41, 59, "Input",ExpressionUUID->"6f8a8a32-eead-4779-8738-8de2fbae1dce"],
Cell[444815, 9664, 3258, 73, 78, "Input",ExpressionUUID->"847bbcf0-47bf-4e28-b14a-acdd0eefd730"],
Cell[448076, 9739, 1073, 30, 77, "Input",ExpressionUUID->"37034f5b-2821-4c9e-9985-f075dd2e5ad3"],
Cell[449152, 9771, 1005, 28, 95, "Input",ExpressionUUID->"428bbd3d-4353-4679-b5e5-cd34af000b83"],
Cell[450160, 9801, 8245, 181, 298, "Input",ExpressionUUID->"81593c9b-040e-4e6e-8822-3ab71d0aee6f"]
}, Closed]],
Cell[CellGroupData[{
Cell[458442, 9987, 209, 4, 53, "Chapter",ExpressionUUID->"df4c8f65-c3d9-4fe0-a164-80c8565e7ef3"],
Cell[458654, 9993, 650, 14, 26, "Input",ExpressionUUID->"0186fc9e-7436-41f1-9460-cb763960a6f2"],
Cell[459307, 10009, 368, 9, 26, "Input",ExpressionUUID->"79e5b973-a5f3-485c-bc5d-4243c07c345d"],
Cell[459678, 10020, 982, 17, 26, "Input",ExpressionUUID->"074490db-a4d0-4bc5-99df-aaad135498c7"],
Cell[460663, 10039, 455, 9, 26, "Input",ExpressionUUID->"161cca84-6f91-4ee8-b2bb-596b58f420c3"],
Cell[461121, 10050, 1129, 25, 43, "Input",ExpressionUUID->"cae79abc-32dc-4d43-8ed7-72a12c36b1c0"],
Cell[462253, 10077, 1876, 48, 78, "Input",ExpressionUUID->"f70da2c1-a228-4f82-9190-b723958692d9"],
Cell[464132, 10127, 1673, 34, 80, "Input",ExpressionUUID->"a6e4b0cf-5525-4bb5-843d-5ab998c6e200"],
Cell[465808, 10163, 728, 17, 26, "Input",ExpressionUUID->"f752e10b-806e-43b9-b670-3b455acf5922"]
}, Closed]],
Cell[CellGroupData[{
Cell[466573, 10185, 159, 3, 53, "Chapter",ExpressionUUID->"440495e0-b541-4d20-b34b-46894420a863"],
Cell[466735, 10190, 240, 5, 26, "Input",ExpressionUUID->"c894d5df-a133-4a44-9d17-ebdae8e296aa"],
Cell[466978, 10197, 353, 8, 43, "Input",ExpressionUUID->"9325265b-5e31-4a52-8af3-c46aef65a79c"],
Cell[467334, 10207, 2280, 42, 94, "Input",ExpressionUUID->"51b9bd61-ee99-4d20-a6bb-b98909db66e1"],
Cell[469617, 10251, 252, 6, 25, "Input",ExpressionUUID->"8ae06e34-c459-48e3-8222-4ae7334d414e"],
Cell[469872, 10259, 362, 9, 26, "Input",ExpressionUUID->"ef795ca4-1901-4d80-9bea-44c16a5fc56e"],
Cell[470237, 10270, 567, 17, 43, "Input",ExpressionUUID->"544079b7-c4cb-48d0-a1e0-2c3659159560"],
Cell[470807, 10289, 1773, 42, 130, "Input",ExpressionUUID->"8415fbea-217f-44ab-bdc0-43aeb0e26223"],
Cell[472583, 10333, 972, 33, 43, "Input",ExpressionUUID->"51f39912-3a17-4f90-b9ef-db236d281a89"],
Cell[473558, 10368, 271, 6, 26, "Input",ExpressionUUID->"85485e9d-7394-4afc-96e9-475f7a9484bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[473866, 10379, 157, 3, 53, "Chapter",ExpressionUUID->"9e9da6ba-482c-420a-9b05-bdd82f893a39"],
Cell[474026, 10384, 2059, 37, 26, "Input",ExpressionUUID->"559e43ae-ad32-4a59-a245-690d85b598f5"],
Cell[476088, 10423, 360, 9, 26, "Input",ExpressionUUID->"906478ef-06c8-4491-98e9-7d9d0a5d9576"],
Cell[476451, 10434, 805, 18, 26, "Input",ExpressionUUID->"2c223232-3572-4067-8769-2a9bb0d5b954"],
Cell[477259, 10454, 2005, 55, 95, "Input",ExpressionUUID->"0ad11451-d24f-42e2-8ca1-f1bf753c1f7a"],
Cell[479267, 10511, 1066, 22, 26, "Input",ExpressionUUID->"38874ebd-7f08-4dca-809d-7ec5260298fb"]
}, Closed]],
Cell[CellGroupData[{
Cell[480370, 10538, 155, 3, 53, "Chapter",ExpressionUUID->"4d08ac40-53a6-4af1-867c-392423d3e4ef"],
Cell[CellGroupData[{
Cell[480550, 10545, 326, 5, 59, "Section",ExpressionUUID->"f3a619f5-6ef4-42f6-90bd-b2b57a9cb5dd"],
Cell[480879, 10552, 911, 21, 29, "Input",ExpressionUUID->"86ca427a-2293-4f80-a412-5db5c3b949f4"],
Cell[481793, 10575, 1163, 34, 43, "Input",ExpressionUUID->"f18a4d8d-e601-4980-85bd-2a650d0ee2a7"],
Cell[482959, 10611, 1556, 35, 78, "Input",ExpressionUUID->"f22f5243-41cc-4e0d-a596-04048ae32406"],
Cell[484518, 10648, 1451, 32, 43, "Input",ExpressionUUID->"ead39f2c-eafa-47cf-9133-7f8dfb2cb4ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[486006, 10685, 340, 5, 47, "Section",ExpressionUUID->"5e5b6459-9eaa-455d-9f72-c701fabee98d"],
Cell[486349, 10692, 845, 21, 26, "Input",ExpressionUUID->"e0c54c69-8b78-4fc1-882e-e3e2f6e8ead5"],
Cell[487197, 10715, 1012, 23, 29, "Input",ExpressionUUID->"034aa13f-d0c6-4fd0-ac89-103f17fdf4af"],
Cell[488212, 10740, 741, 12, 25, "Input",ExpressionUUID->"d0043bd3-3d88-4b94-8154-e3e43f0534ea"],
Cell[488956, 10754, 2530, 55, 43, "Input",ExpressionUUID->"b734e046-35d2-4b40-ba68-89966012c47d"],
Cell[491489, 10811, 255, 5, 26, "Input",ExpressionUUID->"059e0d68-6d55-43b4-9a0f-1437e745b237"],
Cell[491747, 10818, 2808, 65, 95, "Input",ExpressionUUID->"aaec9932-598f-475d-a870-48e19b3da7ed"],
Cell[494558, 10885, 2412, 67, 78, "Input",ExpressionUUID->"46396b79-29bd-4810-b37b-21809c65340a"],
Cell[496973, 10954, 1063, 27, 43, "Input",ExpressionUUID->"9aed4545-1f26-4595-8328-fc3a9984fc21"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[498085, 10987, 174, 3, 62, "Chapter",ExpressionUUID->"7b6dece1-b0d1-4d35-9730-cdbb8e29439c"],
Cell[CellGroupData[{
Cell[498284, 10994, 169, 3, 59, "Section",ExpressionUUID->"8c3c4afa-c772-4dac-9968-ec8a52295c78"],
Cell[498456, 10999, 782, 20, 43, "Input",ExpressionUUID->"a8b10c89-e835-4635-8a67-d42c3551c606"],
Cell[499241, 11021, 1775, 45, 78, "Input",ExpressionUUID->"121afb92-8c60-40d9-b429-efa9c03ff746"],
Cell[501019, 11068, 1870, 48, 78, "Input",ExpressionUUID->"340cd402-e72d-44c9-8f0c-596142e6e20c"],
Cell[502892, 11118, 3003, 79, 78, "Input",ExpressionUUID->"de2b7b81-6a78-40d3-b534-8cfe8fd6eebe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505932, 11202, 179, 3, 59, "Section",ExpressionUUID->"bea77af7-7d83-47c2-bb5c-40f7ab26c5b6"],
Cell[506114, 11207, 675, 18, 43, "Input",ExpressionUUID->"947462eb-8c5d-4a4b-8ef3-2c0370faddd0"],
Cell[506792, 11227, 1653, 44, 78, "Input",ExpressionUUID->"05691cb7-3d94-487e-8319-6cc43c6fe633"],
Cell[508448, 11273, 1735, 44, 78, "Input",ExpressionUUID->"b844c655-b6ef-46bc-91cf-86135c3e88aa"],
Cell[510186, 11319, 6237, 160, 181, "Input",ExpressionUUID->"511995d6-313b-47b5-920d-0e7c90190b1c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[516472, 11485, 184, 3, 62, "Chapter",ExpressionUUID->"6e55f241-c565-48e9-81dd-7aa206703c1b"],
Cell[CellGroupData[{
Cell[516681, 11492, 167, 3, 59, "Section",ExpressionUUID->"e1cceb8c-11bd-4450-a6fb-c72a16d72b27"],
Cell[516851, 11497, 1911, 56, 95, "Input",ExpressionUUID->"4066ce58-4430-4516-a327-5bcd60b5985d"],
Cell[518765, 11555, 1178, 33, 60, "Input",ExpressionUUID->"f3b871b0-98c5-48cb-90c7-64f60e9a13c5"],
Cell[519946, 11590, 2721, 70, 112, "Input",ExpressionUUID->"59a79b88-be81-4d2a-826f-88196f455c85"],
Cell[522670, 11662, 1254, 37, 26, "Input",ExpressionUUID->"bd824ea1-e7be-442f-969e-68e026547514"],
Cell[523927, 11701, 8031, 213, 181, "Input",ExpressionUUID->"e486a1f5-6d70-4a9b-9b16-133d6b6c0367"]
}, Closed]],
Cell[CellGroupData[{
Cell[531995, 11919, 181, 3, 47, "Section",ExpressionUUID->"94ecf103-e804-459f-b9e7-21950c41da67"],
Cell[532179, 11924, 1898, 55, 95, "Input",ExpressionUUID->"0e7b142f-8b4a-4804-8576-b447fbdfa059"],
Cell[534080, 11981, 1178, 33, 60, "Input",ExpressionUUID->"b1eee52d-654a-4185-aeb8-48b31df3e943"],
Cell[535261, 12016, 450, 11, 26, "Input",ExpressionUUID->"43c47a95-7e37-4491-bad3-a78d6bbc9bc9"],
Cell[535714, 12029, 2904, 84, 78, "Input",ExpressionUUID->"728ab73b-fed6-433d-a5c8-8fbb2db4d7e5"],
Cell[538621, 12115, 2453, 62, 112, "Input",ExpressionUUID->"4d7152e2-198e-4c10-9d40-face35ed5c1f"],
Cell[541077, 12179, 2158, 58, 26, "Input",ExpressionUUID->"f63289a6-5b45-4503-b467-12cce5c7a92a"],
Cell[543238, 12239, 10362, 272, 267, "Input",ExpressionUUID->"efcea28b-1541-4635-89ba-02e16f7a9b29"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

